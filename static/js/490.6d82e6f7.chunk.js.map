{"version":3,"file":"static/js/490.6d82e6f7.chunk.js","mappings":"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","sources":["pages/AuthPage/RegisterFormStyled.jsx","pages/AuthPage/Registration.jsx","pages/AuthPage/LoginFormStyled.jsx","pages/AuthPage/LoginForm.jsx","pages/AuthPage/AuthPage.jsx","pages/WelcomePage/WelcomePageStyle.jsx"],"sourcesContent":["import { ErrorMessage, Field } from \"formik\";\nimport { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLinks = styled.div`\n    padding-top: 40px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  color: rgba(255, 255, 255, 0.3);\n  text-decoration: none;\n  margin-right: 14px;\n\n  &.active {\n    color: #fff;\n  }\n`;\n\nexport const FormContainer = styled.div`\n  margin-left: 20px;\n  margin-right: 20px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  border-radius: 8px;\n  max-width: 100%;\n  height: 395px;\n  background: #151515;\n\n  @media screen and (min-width: 375px) {\n    margin-left: auto;\n    margin-right: auto;\n    width: 335px;\n  }\n  @media screen and (min-width: 765px) {\n    width: 424px;\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n`;\n\nexport const StyledFilds = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  margin-bottom: 24px;\n  position: relative;\n  width: 100%;\n  gap: 14px;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  height: 49px;\n  padding-left: 18px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  background: #1f1f1f;\n  opacity: 0.4;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #fff;\n\n  &:hover,\n  &:focus{\n    border: 1px solid #bedbb0;\n    opacity: 1;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #161616;\n  background: #bedbb0;\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  text-align: center;\n  cursor: pointer;\n\n  &:hover {\n    background: #9dc888;\n  }\n`;\n\nexport const StyledSvg = styled.span`\n  position: absolute;\n  right: 18px;\n  bottom: 15px;\n  height: 18px;\n  cursor: pointer;\n`;\n\nexport const NameErrorMessage = styled(ErrorMessage)`\n  position: absolute;\n  top: 49px;\n  left: 8px;\n  font-size: 12px;\n  color: red;\n`;\n\nexport const EmailErrorMessage = styled(ErrorMessage)`\n  position: absolute;\n  top: 112px;\n  left: 8px;\n  font-size: 12px;\n  color: red;\n`;\n\nexport const PassErrorMessage = styled(ErrorMessage)`\n  position: absolute;\n  top: 175px;\n  left: 8px;\n  width: 344px;\n  font-size: 12px;\n  color: red;\n`;","import { Form, Formik } from \"formik\";\nimport { EmailErrorMessage, FormContainer, Input, NameErrorMessage, PassErrorMessage, StyledButton, StyledFilds, StyledLink, StyledLinks, StyledSvg } from \"./RegisterFormStyled\";\nimport sprite from \"../../images/sprite.svg\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { register } from \"../../redux/auth/authOperations\";\nimport * as yup from \"yup\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\n\nconst schema = yup.object().shape({\n  userName: yup\n    .string()\n    .min(2, 'Name is too short!')\n    .max(32, 'Name is too long!')\n    .required('Name is required!'),\n  email: yup\n    .string()\n    .email('Invalid email')\n    .matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n      message: 'Email error',\n      excludeEmptyString: true,\n    })\n    .required('Email is required!'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must be no more than 64 characters')\n    .matches(/^[a-zA-Z0-9!@#$%^&*]{8,64}/, {\n      message:\n        'Password must contain Latin letters and numbers, without spaces in different case, from 8 to 64 characters',\n      excludeEmptyString: true,\n    })\n    .required('Password is required!'),\n});\n\nconst Registration = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  \n  const onPassVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async(values, {resetForm}) => {\n    \n    const newUser = {...values}\n    const response = await dispatch(register(newUser))\n\n    if (response.error) {\n      toast.error(response.payload)\n    } else {\n      navigate('/home');\n    }\n    resetForm();\n   };\n  \n  return (\n    <FormContainer>\n      <StyledLinks>\n        <StyledLink to=\"/auth/register\">Registration</StyledLink>\n        <StyledLink to=\"/auth/login\">Log In</StyledLink>\n      </StyledLinks>\n\n      <Formik\n        initialValues={{\n          userName: '',\n          email: '',\n          password: '',\n        }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        {({ handleChange, values }) => (\n          <Form>\n            <StyledFilds>\n              <Input\n                type=\"text\"\n                name=\"userName\"\n                placeholder=\"Enter your name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                value={values.userName || ''}\n                onChange={handleChange('userName')}\n              />\n              <NameErrorMessage name=\"userName\" component=\"div\" />\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={values.email || ''}\n                onChange={handleChange('email')}\n              />\n              <EmailErrorMessage name=\"email\" component=\"div\" />\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Create your password\"\n                value={values.password || ''}\n                onChange={handleChange('password')}\n              />\n              <PassErrorMessage name=\"password\" component=\"div\" />\n\n              <StyledSvg onClick={onPassVisible}>\n                {showPassword ? (\n                  <svg width={18} height={18}>\n                    <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                  </svg>\n                ) : (\n                  <svg width={18} height={18}>\n                    <use href={`${sprite}#icon-eye-hiden`} />\n                  </svg>\n                )}\n              </StyledSvg>\n            </StyledFilds>\n            <StyledButton type=\"submit\">Register Now</StyledButton>\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default Registration;","import { ErrorMessage, Field } from 'formik';\nimport { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLinks = styled.div`\n  padding-top: 40px;\n`;\nexport const StyledLink = styled(NavLink)`\n  color: rgba(255, 255, 255, 0.3);\n  text-decoration: none;\n  margin-right: 14px;\n\n  &.active {\n    color: #fff;\n  }\n`;\nexport const FormContainer = styled.div`\n  margin-left: 20px;\n  margin-right: 20px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  border-radius: 8px;\n  max-width: 100%;\n  height: 332px;\n  background: #151515;\n\n  @media screen and (min-width: 375px) {\n    margin-left: auto;\n    margin-right: auto;\n    width: 335px;\n  }\n\n  @media screen and (min-width: 765px) {\n    width: 424px;\n    padding-left: 40px;\n    padding-right: 40px;\n  }\n`;\n\nexport const StyledFilds = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 40px;\n  margin-bottom: 24px;\n  position: relative;\n  gap: 14px;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  padding-left: 18px;\n  box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n  background: #1f1f1f;\n  opacity: 0.4;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #fff;\n\n  &:hover,\n  &:focus {\n    border: 1px solid #bedbb0;\n    opacity: 1;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #161616;\n  background: #bedbb0;\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  text-align: center;\n  cursor: pointer;\n\n  &:hover {\n    background: #9dc888;\n  }\n`;\n\nexport const StyledSvg = styled.span`\n  position: absolute;\n  right: 18px;\n  bottom: 15px;\n  height: 18px;\n  cursor: pointer;\n`;\n\nexport const EmailErrorMessage = styled(ErrorMessage)`\n  position: absolute;\n  top: 49px;\n  left: 8px;\n  font-size: 12px;\n  color: red;\n`;\n\nexport const PassErrorMessage = styled(ErrorMessage)`\n  position: absolute;\n  top: 112px;\n  left: 8px;\n  font-size: 12px;\n  color: red;\n`;","import { Form, Formik } from 'formik';\nimport { EmailErrorMessage, FormContainer, Input, PassErrorMessage, StyledButton, StyledFilds, StyledLink, StyledLinks, StyledSvg } from './LoginFormStyled';\nimport sprite from '../../images/sprite.svg';\nimport { useState } from 'react';\nimport { login } from '../../redux/auth/authOperations';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { setToken } from '../../redux/auth/authSelectors';\nimport { toast } from 'react-toastify';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string()\n    .email('Invalid email')\n    .matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n      message: 'Email error',\n      excludeEmptyString: true,\n    })\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must be at least 8 characters')\n    .max(64, 'Password must be no more than 64 characters')\n    .matches(/^[a-zA-Z0-9!@#$%^&*]{8,64}/, {\n      message:\n        'Password must contain Latin letters and numbers, without spaces in different case, from 8 to 64 characters',\n      excludeEmptyString: true,\n    })\n    .required('Password is required'),\n});\n\nconst LoginForm = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onPassVisible = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleSubmit = async (values, {resetForm}) => {\n    const currentUser = { ...values };\n\n    const response = await dispatch(login(currentUser, setToken))\n    \n    if (response.error) {\n      toast.error(response.payload);\n    } else {\n      navigate('/home');\n    }\n    resetForm();\n   };\n  \n  return (\n    <FormContainer>\n      <StyledLinks>\n        <StyledLink to=\"/auth/register\">Registration</StyledLink>\n        <StyledLink to=\"/auth/login\">Log In</StyledLink>\n      </StyledLinks>\n\n      <Formik\n        initialValues={{\n          email: '',\n          password: '',\n        }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n        {({ handleChange, values }) => (\n          <Form>\n            <StyledFilds>\n              <Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Enter your email\"\n                value={values.email || ''}\n                onChange={handleChange('email')}\n              />\n              <EmailErrorMessage name=\"email\" component=\"div\" />\n              <Input\n                type={showPassword ? 'text' : 'password'}\n                name=\"password\"\n                placeholder=\"Confirm a password\"\n                value={values.password || ''}\n                onChange={handleChange('password')}\n              />\n              <PassErrorMessage name=\"password\" component=\"div\" />\n\n              <StyledSvg onClick={onPassVisible}>\n                {showPassword ? (\n                  <svg width={18} height={18}>\n                    <use stroke=\"gray\" href={`${sprite}#icon-eye`} />\n                  </svg>\n                ) : (\n                  <svg width={18} height={18}>\n                    <use href={`${sprite}#icon-eye-hiden`} />\n                  </svg>\n                )}\n              </StyledSvg>\n            </StyledFilds>\n            <StyledButton type=\"submit\">Log In Now</StyledButton>\n          </Form>\n        )}\n      </Formik>\n    </FormContainer>\n  );\n};\n\nexport default LoginForm;\n","import { Container } from \"pages/WelcomePage/WelcomePageStyle\";\nimport { useParams } from \"react-router-dom\";\nimport Registration from \"./Registration\";\nimport LoginForm from \"./LoginForm\";\n\n\nconst AuthPage = () => {\n    const { id } = useParams();\n\n    return (\n      <Container>\n        {id === 'register' && <Registration />}\n        {id === 'login' && <LoginForm />}\n      </Container>\n    );\n}\n\nexport default AuthPage;","import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  padding-top: 166px;\n  background-image: linear-gradient(to bottom, white, rgba(190, 219, 176, 1));\n`;\n\nexport const StyledWelcomePage = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  text-align: center;\n  max-width: 100%;\n  height: 438px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 375px){\n    width: 335px;\n  }\n  @media screen and (min-width: 765px) {\n    width: 473px;\n    margin-left: auto;\n    margin-right: auto;\n  }\n`;\n\nexport const StyledImg = styled.img`\n  @media screen and (max-width: 765px) {\n    width: 124px;\n    height: 124px;\n  }\n`;\n\nexport const StyledLinks = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 32px;\n  height: 88px;\n`\n\nexport const StyledLink = styled(NavLink)`\n  color: #161616;\n  text-decoration: none;\n  padding: 14px 0 14px 0;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n\n  &:hover {\n    color: #fff;\n    background: #161616;\n    border-radius: 8px;\n    width: 344px;\n    height: 49px;\n    text-align: center;\n  }\n  @media screen and (max-width: 765px) {\n    &:hover{\n      width: 335px;\n    }\n  }\n`;\n\nexport const StyledLogo = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin: 24px 0 24px 0;\n  gap: 14px;\n  height: 60px;\n\n  @media screen and (max-width: 765px) {\n    margin-top: 14px;\n  }\n`;\n\nexport const StyledSvg = styled.svg`\n  @media screen and (max-width: 765px) {\n    width: 40px;\n    height: 40px;\n  }\n`;\n\nexport const StyledText = styled.h1`\n  @media screen and (max-width: 765px) {\n    font-size: 28px;\n  }\n`;"],"names":["StyledLinks","styled","_templateObject","_taggedTemplateLiteral","StyledLink","NavLink","_templateObject2","FormContainer","_templateObject3","StyledFilds","_templateObject4","Input","Field","_templateObject5","StyledButton","_templateObject6","StyledSvg","_templateObject7","NameErrorMessage","ErrorMessage","_templateObject8","EmailErrorMessage","_templateObject9","PassErrorMessage","_templateObject10","schema","yup","shape","userName","min","max","required","email","matches","message","excludeEmptyString","password","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","onPassVisible","handleSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","values","_ref","resetForm","newUser","response","_context","prev","next","_objectSpread","register","sent","error","toast","payload","stop","_x","_x2","apply","arguments","_jsxs","children","_jsx","to","Formik","initialValues","onSubmit","validationSchema","_ref3","handleChange","Form","type","name","placeholder","pattern","value","onChange","component","onClick","width","height","stroke","href","concat","sprite","currentUser","login","setToken","id","useParams","Container","Registration","LoginForm","StyledWelcomePage","StyledImg","StyledLogo","StyledText"],"sourceRoot":""}