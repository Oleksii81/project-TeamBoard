{"version":3,"file":"static/js/438.d87b6cbd.chunk.js","mappings":"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","sources":["images/burger.svg","components/Header/HeaderSwitchTheme/HeaderSwitchTheme.styled.js","components/Header/HeaderSwitchTheme/HeaderSwitchTheme.jsx","components/Header/User/User.styled.js","components/Header/User/User.jsx","assets/icons/SvgIcons.jsx","components/Modals/ModalEditUser/ModalEditUser.styled.js","components/Modals/ModalEditUser/ModalEditUser.jsx","components/shared/Buttons/LigthBtn.styled.js","components/Header/UserInfoModal/UserInfoModal.styled.js","components/Header/UserInfoModal/UserInfoModal.jsx","components/Header/HeaderUserBar/HeaderUserBar.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/ScreensPage/ScreensPage.styled.jsx","components/Sidebar/CreateBoardForm/CreateBoardForm.styled.js","components/Sidebar/CreateBoardForm/CreateBoardForm.jsx","components/Modals/ModalBord/ModalBord.styled.jsx","components/Modals/ModalBord/ModalBord.jsx","components/ScreensPage/Text/Text.styled.jsx","components/ScreensPage/Text/Text.jsx","components/ScreensPage/RadioBrnsFilterForm/RadioBtnsFilterForm.styled.jsx","components/ScreensPage/RadioBrnsFilterForm/RadioBrnsFilterForm.jsx","components/ScreensPage/Filter/Filter.styled.jsx","components/ScreensPage/Filter/Filter.jsx","components/ScreensPage/AddColumnForm/AddColumnForm.styled.jsx","components/ScreensPage/AddColumnForm/AddColumnForm.jsx","components/Modals/ModalAddColumn/ModalAddColumn.styled.jsx","components/Modals/ModalAddColumn/ModalAddColumn.jsx","components/ScreensPage/AddBoardBtn/AddBoardBtn.styled.jsx","components/ScreensPage/AddBoardBtn/AddBoardBtn.jsx","components/ScreensPage/Bord/Bord.styled.js","components/ScreensPage/Bord/Bord.jsx","components/ScreensPage/ScreensPage.jsx","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/LogoComponent/LogoComponent.styled.js","components/Sidebar/LogoComponent/LogoComponent.jsx","components/Sidebar/CreateBord/CreateBoard.styled.js","components/Sidebar/CreateBord/CreateBord.jsx","components/Sidebar/BoardsList/BoardsList.styled.js","components/Sidebar/EditBoardForm/EditBoardForm.styled.js","components/Sidebar/EditBoardForm/EditBoardForm.jsx","components/Modals/ModalBord/EditModalBoard.jsx","components/Sidebar/BoardsList/BoardItem.jsx","components/Sidebar/BoardsList/BoardsList.jsx","components/Sidebar/NeedHelp/NeedHelp.styled.js","components/Modals/ModalNeedHelp/ModalNeedHelp.styled.js","components/Sidebar/NeedHelp/FormNeedHelp.jsx","components/Modals/ModalNeedHelp/ModalNeedHelp.jsx","components/Sidebar/NeedHelp/NeedHelp.jsx","components/Sidebar/LogOut/StyledLogOut.js","components/Sidebar/LogOut/LogOut.jsx","components/Sidebar/Sidebar.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBurger(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 16H28\",\n    stroke: \"var(--iconEyeColor)\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 8H28\",\n    stroke: \"var(--iconEyeColor)\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 24H28\",\n    stroke: \"var(--iconEyeColor)\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBurger);\nexport default __webpack_public_path__ + \"static/media/burger.42365862ef7a4ae41847d66223ea8d09.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const ThemeWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ThemeTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 68px;\n  height: 21px;\n  color: var(--themeTitleTextColor);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n`;\n\nexport const ThemeSelectWraper = styled.ul`\n  position: absolute;\n  top: 21px;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 18px 44px 18px 18px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  width: 100px;\n  height: 107px;\n  border: 1px solid var(--greenGreenBlueColor);\n  background-color: var(--themeListBgColor);\n  box-shadow: var(--boxShadow);\n  z-index: 100;\n  font-weight: 500;\n  font-size: 14px;\n`;\n\nexport const ThemeItems = styled.li`\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n  color: var(\n    --${props => (props.theme === props.children.toLowerCase() ? 'greenGreenBlueColor' : 'popupTextColor')}\n  );\n  transition: opacity var(--transition_data);\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const ThemeSelectIcon = styled.svg`\n  fill: var(--themeTitleTextColor);\n  stroke: var(--themeTitleTextColor);\n  width: 16px;\n  height: 17px;\n`;\n","import { ThemeWrapper, ThemeSelectWraper, ThemeTitle, ThemeItems,ThemeSelectIcon } from \"./HeaderSwitchTheme.styled\";\nimport { useState, useEffect } from \"react\";\nimport sprite from '../../../images/sprite.svg'\n\nconst HeaderSwitchTheme = () => {\n    const [theme, setTheme] = useState('light');\n    const [list, setList] = useState(false)\n\n     useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n     }, [theme]);\n    \n     useEffect(() => {\n        const savedTheme = localStorage.getItem('theme');\n        if (savedTheme) {\n            setTheme(savedTheme);\n        }\n    }, []);\n    \n    const handleThemeChange = (newTheme) => {\n        setTheme(newTheme);\n        localStorage.setItem('theme', newTheme)\n        setList('false')\n    }\n\n    const toogleList = () => {\n        setList(!list);\n    }\n\n    return (\n        <ThemeWrapper>\n            <ThemeTitle onClick={toogleList}>Theme\n                <ThemeSelectIcon>\n                    <use href={sprite + \"#icon-chevron-down\"} />\n            </ThemeSelectIcon>\n            </ThemeTitle>\n            {list && (\n                <ThemeSelectWraper theme={theme} onClick={toogleList}>\n                    <ThemeItems onClick={() => handleThemeChange('light')}>Light</ThemeItems>\n                    <ThemeItems onClick={() => handleThemeChange('dark')}>Dark</ThemeItems>\n                    <ThemeItems onClick={() => handleThemeChange('violet')}>Violet</ThemeItems>\n                </ThemeSelectWraper>\n            )\n            }\n            \n        </ThemeWrapper>\n)\n}\n\nexport default HeaderSwitchTheme;","import styled from 'styled-components';\n\nexport const StyledBtnProfile = styled.button`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n\nexport const StyledImgProfile = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 8%;\n\n\n`;\n\nexport const StyledProfileName = styled.p`\n  color: red;\n  font-family: 'Poppins-500', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { getUserData } from '../../../redux/auth/authSelectors';\nimport userFoto from 'assets/img/userWhite.png';\nimport {\n  StyledBtnProfile,\n  StyledImgProfile,\n  StyledProfileName,\n} from './User.styled';\n\nexport const User = ({ handleOpenModal }) => {\n const { username, avatar } = useSelector(getUserData);\n\n  const editString = name => {\n    if (name) {\n      const arrFromStr = name.split(' ');\n      const res = arrFromStr.map(el => el && el[0].toUpperCase() + el.slice(1));\n      return res.join(' ');\n    }\n  };\n\n  return (\n    <>\n      <StyledBtnProfile onClick={handleOpenModal}>\n        {(avatar && <StyledImgProfile src={avatar} alt=\"Foto\" />) || (\n          <StyledImgProfile src={userFoto} alt=\"Default Foto\" />\n        )}\n\n        <StyledProfileName>{editString(username)}</StyledProfileName>\n      </StyledBtnProfile>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nexport const SpriteSVG = ({ name }) => {\n  switch (name) {\n   \n    case 'close':\n      return (\n        <svg id=\"icon-close\" viewBox=\"0 0 32 32\">\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2\"\n            d=\"M24 8l-16 16M8 8l16 16\"\n          ></path>\n        </svg>\n      );\n    \n    case 'add_photo':\n      return (\n        <svg id=\"icon-add_photo\" viewBox=\"0 0 24 24\">\n          <path\n            fill=\"#BEDBB0\"\n            style={{ fill: 'var(--color1, #546081)' }}\n            d=\"M18 0H6C2.68629 0 0 2.68629 0 6V18C0 21.3137 2.68629 24 6 24H18C21.3137 24 24 21.3137 24 18V6C24 2.68629 21.3137 0 18 0Z\"\n          ></path>\n          <path\n            fill=\"none\"\n            stroke=\"#f3f3f3\"\n            style={{ stroke: 'var(--color2, #f3f3f3)' }}\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2\"\n            d=\"M16.25 11v10.5M11 16.25h10.5\"\n          ></path>\n        </svg>\n      );\n    \n    case 'plus':\n      return (\n        <svg id=\"icon-plus\" viewBox=\"0 0 32 32\">\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"1.9862\"\n            d=\"M16 6.988v18.024M6.988 16h18.023\"\n          ></path>\n        </svg>\n      );\n    \n    case 'eye2':\n      return (\n        <svg id=\"eye2\" viewBox=\"0 0 32 32\">\n          <g clip-path=\"url(#clip0_11829_1137)\">\n            <path\n              d=\"M17.94 17.94C16.2306 19.243 14.1491 19.9649 12 20C5 20 1 12 1 12C2.24389 9.68192 3.96914 7.65663 6.06 6.06003M9.9 4.24002C10.5883 4.0789 11.2931 3.99836 12 4.00003C19 4.00003 23 12 23 12C22.393 13.1356 21.6691 14.2048 20.84 15.19M14.12 14.12C13.8454 14.4148 13.5141 14.6512 13.1462 14.8151C12.7782 14.9791 12.3809 15.0673 11.9781 15.0744C11.5753 15.0815 11.1752 15.0074 10.8016 14.8565C10.4281 14.7056 10.0887 14.4811 9.80385 14.1962C9.51897 13.9113 9.29439 13.572 9.14351 13.1984C8.99262 12.8249 8.91853 12.4247 8.92563 12.0219C8.93274 11.6191 9.02091 11.2219 9.18488 10.8539C9.34884 10.4859 9.58525 10.1547 9.88 9.88003\"\n              stroke=\"#161616\"\n              stroke-width=\"1.8\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n            <path\n              d=\"M1 1L23 23\"\n              stroke=\"#161616\"\n              stroke-width=\"1.8\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_11829_1137\">\n              <rect width=\"24\" height=\"24\" fill=\"white\" />\n            </clipPath>\n          </defs>\n        </svg>\n      );\n  \n    case 'eye':\n      return (\n        <svg id=\"icon-eye\" viewBox=\"0 0 32 32\">\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2.4\"\n            d=\"M1.333 16s5.333-10.667 14.667-10.667 14.667 10.667 14.667 10.667-5.333 10.667-14.667 10.667-14.667-10.667-14.667-10.667z\"\n          ></path>\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2.4\"\n            d=\"M16 20c2.209 0 4-1.791 4-4s-1.791-4-4-4v0c-2.209 0-4 1.791-4 4s1.791 4 4 4v0z\"\n          ></path>\n        </svg>\n      );\n   \n    \n    case 'close-modal':\n      return (\n        <svg width=\"10\" height=\"10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5 2.083v5.834M2.083 5h5.834\" stroke=\"#161616\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      );\n    \n    case 'add-modal-photo':\n      return (\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 28 28\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <rect\n            x=\"2\"\n            y=\"2\"\n            width=\"24\"\n            height=\"24\"\n            rx=\"5\"\n            ry=\"5\"\n            fill=\"#BEDBB0\"\n          />\n          <path\n            d=\"M14.2188 9.625V18.8125\"\n            stroke=\"#161616\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M9.625 14.2188H18.8125\"\n            stroke=\"#161616\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      );\n    case 'eye1':\n      return (\n        <svg\n          id=\"eye1\"\n          viewBox=\"0 0 32 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M.75 9s3-6 8.25-6 8.25 6 8.25 6-3 6-8.25 6S.75 9 .75 9Z\"\n            stroke=\"#161616\"\n            stroke-width=\"1\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n          <path\n            d=\"M9 11.25a2.25 2.25 0 1 0 0-4.5 2.25 2.25 0 0 0 0 4.5Z\"\n            stroke=\"#161616\"\n            stroke-width=\"1\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n        </svg>\n      );\n    \n   \n\n    default:\n      return 'SVG not found';\n  }\n};\n\nSpriteSVG.propTypes = {\n  name: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.75);\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nimport { ModalOverlay } from './ModalEditUser.styled';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\nconst ModalEditUser = ({ children, onClose }) => {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    const handleEscape = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscape);\n    return () => {\n      document.body.style.overflow = 'unset';\n      window.removeEventListener('keydown', handleEscape);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <ModalOverlay\n      onClick={event => {\n        if (event.target === event.currentTarget) {\n          onClose();\n        }\n      }}\n    >\n      {children}\n    </ModalOverlay>,\n    modalRoot\n  );\n};\n\nModalEditUser.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\n\nexport default ModalEditUser;\n","import styled from 'styled-components';\n\nexport const StyledBtn = styled.button`\n  min-width: 132px;\n  padding: 14px 40px;\n  font-family: 'Poppins-600', sans-serif;\n  line-height: 18px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.28;\n  text-align: center;\n  border-radius: 8px;\n  border: 2px solid transparent;\n  outline: transparent;\n\n`;\n","import styled from 'styled-components';\nimport { StyledBtn } from 'components/shared/Buttons/LigthBtn.styled';\n\nexport const StyledModal = styled.div`\n  width: 335px;\n  padding: 24px 24px;\n  border-radius: 8px;\n  background-color: #fcfcfc;\n  transform: translate(-50%, -50%);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-bottom: 25px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n  @media screen and (min-width: 768px) {\n    width: 400 px;\n  }\n`;\n\nexport const StyledBtnClose = styled.button`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: fixed;\n  top: 14px;\n  right: 14px;\n  svg {\n    stroke: black;\n  }\n`;\n\nexport const StyledModalHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledUserFoto = styled.img`\n  width: 68px;\n  height: 68px;\n  margin-bottom: 39px;\n  text-align: center;\n  border-radius: 8%;\n\n  // @media screen and (min-width: 768px) {\n  //   margin-bottom: 66px;\n  // }\n`;\n\nexport const StyledInputAdd = styled.input`\n  display: none;\n`;\n\nexport const StyledSvgWrapper = styled.button`\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 98px;\n`;\n\nexport const StyledModalForm = styled.form`\n  width: 100%;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: relative;\n`;\n\nexport const StyledModalInput = styled.input`\n  width: 100%;\n  margin-bottom: 18px;\n  padding: 16px 24px;\n  font-family: 'Poppins-400', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n  color: #161616;\n  background-color: transparent;\n  border: 1px solid #bedbb0;\n  border-radius: 8px;\n  opacity: 0.8;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 14px;\n  }\n\n  &:focus {\n    outline: 1px solid #9dc888;\n  }\n`;\n\nexport const StyledBtnEdit = styled.button`\n  width: 26px;\n  height: 26px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  border-radius: 8px;\n  position: absolute;\n  top: 20px;\n  right: 8px;\n`;\n\nexport const StyledBtnSave = styled(StyledBtn)`\n  width: 100%;\n  padding: 18px 96px;\n  font-family: 'Poppins-600', sans-serif;\n  line-height: 18px;\n  color: #161616;\n  background-color: #bedbb0;\n  &:hover,\n  &:focus {\n    background-color: #9dc888;\n    color: #161616;\n  }\n`;\nexport const EditProfileText = styled.p`\n  font-family: 'Poppins-600', sans-serif;\n  line-height: 18px;\n`;\nexport const StyledErrorMail = styled.p`\n  position: absolute;\n  top: calc(45% + 5px); /* Расстояние от поля ввода до сообщения об ошибке */\n  left: 0;\n  color: red;\n  font-size: 10px;\n`;\nexport const StyledErrorName = styled.p`\n  position: absolute;\n  top: calc(19% + 5px); \n  left: 0;\n  color: red;\n  font-size: 10px;\n`;\nexport const StyledError = styled.p`\n  position: absolute;\n  top: calc(71% + 5px); \n  left: 0;\n  color: red;\n  font-size: 10px;\n`;","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { updateUser } from '../../../redux/auth/authOperations';\nimport { getUserData } from '../../../redux/auth/authSelectors';\nimport { SpriteSVG } from 'assets/icons/SvgIcons';\nimport userFoto from 'assets/img/userWhite.png';\nimport ModalEditUser from 'components/Modals/ModalEditUser/ModalEditUser';\nimport {\n  StyledBtnClose,\n  StyledBtnEdit,\n  StyledBtnSave,\n  StyledInputAdd,\n  StyledModal,\n  StyledModalForm,\n  StyledModalHeader,\n  StyledModalInput,\n  StyledSvgWrapper,\n  StyledUserFoto,\n  EditProfileText,\n  StyledError,\n  StyledErrorMail,\n  StyledErrorName,\n} from './UserInfoModal.styled';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  userName: Yup.string().min(5, 'Min 5'),\n  userEmail: Yup.string().email('Invalid email'),\n  userPassword: Yup.string().min(8, 'Min 8'),\n});\n\nexport const UserInfoModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const { username, email, avatar } = useSelector(getUserData);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [changedName] = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [changedPassword, setChangedPassword] = useState(null);\n  const [previewImage, setPreviewImage] = useState(null);\n\n  const handleFileChange = file => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreviewImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n\n    setSelectedFile(file);\n  };\n\n  const onFileChange = event => {\n    const file = event.target.files[0];\n    handleFileChange(file);\n  };\n\n  const onUpload = async event => {\n    if (event.target.type === 'file') {\n      const file = event.target.files[0];\n      handleFileChange(file);\n      return;\n    }\n\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append('avatar', selectedFile);\n    formData.append('username', changedName || username);\n    formData.append('email', email);\n    formData.append('password', changedPassword || '');\n\n    dispatch(updateUser(formData))\n      .unwrap()\n      .then(() => {\n        onClose();\n      })\n      .catch(error => {\n        console.error('Error updating user', error.message);\n      });\n  };\n  const formik = useFormik({\n    initialValues: { userName: '', userEmail: '', userPassword: '' },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        const formData = new FormData();\n        formData.append('avatar', selectedFile);\n        formData.append('username', values.userName);\n        formData.append('email', values.userEmail);\n        formData.append('password', values.userPassword);\n        dispatch(updateUser(formData));\n        onClose(); // Закрываем модальное окно после успешной отправки данных\n      } catch (error) {\n        console.error('Error updating user', error.message);\n      }\n    },\n  });\n\n  return (\n    <ModalEditUser onClose={onClose}>\n      <StyledModal>\n        <StyledBtnClose onClick={onClose}>\n          <SpriteSVG name=\"close\" />\n        </StyledBtnClose>\n        <EditProfileText>Edit profile</EditProfileText>\n        <StyledModalHeader>\n          <StyledUserFoto\n            src={previewImage || avatar || userFoto}\n            alt={previewImage ? 'Preview' : avatar ? 'Foto' : 'Default foto'}\n          />\n\n          <StyledInputAdd\n            type=\"file\"\n            onChange={onFileChange}\n            onClick={onUpload}\n          ></StyledInputAdd>\n          <StyledSvgWrapper\n            onClick={() => document.querySelector('input[type=file]').click()}\n          >\n            <SpriteSVG name=\"add-modal-photo\" />\n          </StyledSvgWrapper>\n        </StyledModalHeader>\n\n        <StyledModalForm onSubmit={formik.handleSubmit}>\n          <StyledModalInput\n            name=\"userName\"\n            placeholder=\"Ivetta\"\n            value={formik.values.userName || username}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.userName && formik.touched.userName && (\n            <StyledErrorName>{formik.errors.userName}</StyledErrorName>\n          )}\n          <StyledModalInput\n            name=\"userEmail\"\n            placeholder=\"ivetta34@gmail.com\"\n            value={formik.values.userEmail || email}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.userEmail && formik.touched.userEmail && (\n            <StyledErrorMail>{formik.errors.userEmail}</StyledErrorMail>\n          )}\n          <div style={{ position: 'relative' }}>\n            <StyledModalInput\n              name=\"userPassword\"\n              placeholder=\"ivetta1999.23\"\n              type={showPassword ? 'text' : 'password'}\n              value={formik.values.userPassword || ''}\n              onChange={event => {\n                formik.handleChange(event);\n                setChangedPassword(event.target.value);\n              }}\n            />\n            <StyledBtnEdit\n              type=\"button\"\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              <SpriteSVG name=\"eye1\" />\n            </StyledBtnEdit>\n          </div>\n          {formik.errors.userPassword && formik.touched.userPassword && (\n            <StyledError>{formik.errors.userPassword}</StyledError>\n          )}\n          <StyledBtnSave type=\"submit\">Send</StyledBtnSave>\n        </StyledModalForm>\n      </StyledModal>\n    </ModalEditUser>\n  );\n};\n\nUserInfoModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { User } from '../User/User';\nimport { UserInfoModal } from '../UserInfoModal/UserInfoModal';\n\nconst HeaderUserBar = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <div>\n      <User handleOpenModal={handleOpenModal} />\n\n      {isModalOpen && <UserInfoModal onClose={handleCloseModal} />}\n    </div>\n  );\n};\n\nexport default HeaderUserBar;\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 60px;\n  margin-left: auto;\n  margin-right: auto;\n  gap: 14px;\n\n  //colors\n  background: var(--headerBgColor);\n  //padding\n  padding: 20px;\n  gap: 14px;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    height: 68px;\n  }\n  @media screen and (min-width: 768px) {\n    width: calc(-260px + 100vw);\n    left: 260px;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport HeaderSwitchTheme from \"./HeaderSwitchTheme/HeaderSwitchTheme\";\nimport HeaderUserBar from \"./HeaderUserBar/HeaderUserBar\";\nimport { HeaderWrapper } from \"./Header.styled\";\nimport {ReactComponent as BurgerIcon} from '../../images/burger.svg'\n\nconst Header = ({ toggleSidebar }) => {\n    const burgerIconStyles = {\n        cursor: 'pointer',\n        position: 'absolute',\n        left: '32px',\n\n    };\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth)\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWindowWidth(window.innerWidth);\n        };\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    if (windowWidth >= 768) {\n         Object.assign(burgerIconStyles, {\n            display: 'none'\n        });\n    }\n\n    \n    \n    return (\n        <HeaderWrapper>\n            <BurgerIcon onClick={toggleSidebar} style={burgerIconStyles}/>\n            \n            <HeaderSwitchTheme />\n            <HeaderUserBar />\n        </HeaderWrapper>\n    );\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 60px;\n  left: 0;\n  padding: 14px 20px 60px;\n  /* overflow: scroll; */\n  z-index: 0;\n  width: 100%;\n  height: calc(-60px + 100vh);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: calc(-60px + 100vh);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 26px 32px 96px;\n    width: 100%;\n    top: 68px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 10px 20px 36px;\n    width: calc(-260px + 100vw);\n\n    left: 260px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const Header = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 24px 0;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background: var(--popupBackground);\n  margin-bottom: 24px;\n  padding: 0 18px;\n  position: relative;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsHeaderIcons = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  gap: 8px;\n  margin: 0 0 24px 0;\n  padding: 0;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--iconCardColor);\n    fill: transparent;\n  }\n\n  .icons-field {\n    display: none;\n  }\n\n  input:checked + svg {\n    stroke: var(--primaryTextColor);\n  }\n`;\n\nexport const HeaderBackground = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const BackgroundContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 4px;\n  flex-wrap: wrap;\n  margin: 0 0 40px 0;\n  stroke-width: 1px;\n  stroke: var(--defaultAvatarBgColor);\n  width: 252px;\n\n  .background-field {\n    display: none;\n  }\n\n  img {\n    cursor: pointer;\n  }\n\n  input:checked + img {\n    border: 2px solid var(--defaultAvatarBgColor);\n    border-radius: 6px;\n  }\n`;\n\nexport const BoardCreateBtn = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  width: 100%;\n  height: 49px;\n  margin-left: auto;\n  margin-right: auto;\n  background: var(--addCardButtonBackground);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--addCardButtonColor);\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1px;\n    stroke: var(--addPlusIconColor);\n  }\n\n  &:hover {\n    background-color: var(--createButtonHover);\n  }\n`;\n\nexport const ModalForm = styled(Form)`\n  padding: 24px;\n  position: relative;\n  background: var(--popupBackground);\n  border: 1px solid var(--addCardButtonBackground);\n  border-radius: 8px;\n`;\n\nexport const SvgCloseBtn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  right: 14px;\n  top: 14px;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--buttonColor);\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const SubmitSvgWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  background-color: var(--addCardButtonColor);\n  border-radius: 6px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  position: absolute;\n  top: 50px;\n  left: 24px;\n  font-size: 10px;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport icons from '../../../../src/images/sprite.svg';\nimport Image0 from '../../../../src/images/background/00.png';\nimport Image1 from '../../../../src/images/background/07.png';\nimport Image2 from '../../../../src/images/background/02.png';\nimport Image3 from '../../../../src/images/background/01.png';\nimport Image4 from '../../../../src/images/background/08.png';\nimport Image5 from '../../../../src/images/background/03.png';\nimport Image6 from '../../../../src/images/background/04.png';\nimport Image7 from '../../../../src/images/background/09.png';\nimport Image8 from '../../../../src/images/background/05.png';\nimport Image9 from '../../../../src/images/background/10.png';\nimport Image10 from '../../../../src/images/background/06.png';\nimport Image11 from '../../../../src/images/background/11.png';\nimport Image12 from '../../../../src/images/background/12.png';\nimport Image13 from '../../../../src/images/background/13.png';\nimport Image14 from '../../../../src/images/background/14.png';\nimport Image15 from '../../../../src/images/background/15.png';\n\nimport {\n  Header,\n  Input,\n  IconsHeaderIcons,\n  IconsContainer,\n  HeaderBackground,\n  BackgroundContainer,\n  BoardCreateBtn,\n  ModalForm,\n  SvgCloseBtn,\n  Img,\n  SubmitSvgWrapper,\n  Error,\n} from './CreateBoardForm.styled';\nimport { getBoard } from '../../../redux/auth/authSelectors';\nimport { createBoard } from '../../../redux/auth/authOperations';\n\nconst BoardFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short').required('This field is required!'),\n});\n\nconst CreateBoardForm = ({ closeModalWindow }) => {\n  const boards = useSelector(getBoard);\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        icnboard: 'icon-project',\n        background: '0',\n      }}\n      validationSchema={BoardFormSchema}\n      onSubmit={(values, actions) => {\n        const { title } = values;\n        if (boards && boards.some(board => board.title === values.title)) {\n          return toast.warning('The title already exists');\n        }\n\n        dispatch(createBoard(values))\n          .unwrap()\n          .then(() =>\n            toast.success(`${title} has been successfully added to your boards`)\n          )\n          .catch(error => error.message);\n        actions.resetForm();\n        closeModalWindow();\n      }}\n    >\n      <ModalForm>\n        <Header>New board</Header>\n        <SvgCloseBtn type=\"button\" onClick={closeModalWindow}>\n          <svg>\n            <use href={`${icons}#icon-close`}></use>\n          </svg>\n        </SvgCloseBtn>\n\n        <label htmlFor=\"title\"></label>\n        <Error name=\"title\" component=\"div\" />\n        <Input name=\"title\" placeholder=\"Title\" />\n\n        <IconsHeaderIcons>Icons</IconsHeaderIcons>\n        <IconsContainer>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-project\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-project`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-star\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-star`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-loading\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-loading`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-puzzle\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-puzzle`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-container\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-container`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-lightning\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-lightning`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-colors\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-colors`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-hexagon\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-hexagon`}></use>\n            </svg>\n          </label>\n        </IconsContainer>\n\n        <HeaderBackground>Background</HeaderBackground>\n        <BackgroundContainer>\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"0\"\n            />\n            <Img src={Image0} alt=\"background 0\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"1\"\n            />\n            <Img src={Image1} alt=\"background 1\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"2\"\n            />\n            <Img src={Image2} alt=\"background 2\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"3\"\n            />\n            <Img src={Image3} alt=\"background 3\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"4\"\n            />\n            <Img src={Image4} alt=\"background 4\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"5\"\n            />\n            <Img src={Image5} alt=\"background 5\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"6\"\n            />\n            <Img src={Image6} alt=\"background 6\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"7\"\n            />\n            <Img src={Image7} alt=\"background 7\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"8\"\n            />\n            <Img src={Image8} alt=\"background 8\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"9\"\n            />\n            <Img src={Image9} alt=\"background 9\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"10\"\n            />\n            <Img src={Image10} alt=\"background 10\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"11\"\n            />\n            <Img src={Image11} alt=\"background 11\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"12\"\n            />\n            <Img src={Image12} alt=\"background 12\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"13\"\n            />\n            <Img src={Image13} alt=\"background 13\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"14\"\n            />\n            <Img src={Image14} alt=\"background 14\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"15\"\n            />\n            <Img src={Image15} alt=\"background 15\" />\n          </label>\n        </BackgroundContainer>\n\n        <BoardCreateBtn type=\"submit\">\n          <SubmitSvgWrapper>\n            <svg width=\"28px\" height=\"28px\">\n              <use href={`${icons}#icon-plus`}></use>\n            </svg>\n          </SubmitSvgWrapper>\n          Create\n        </BoardCreateBtn>\n        <ToastContainer\n          position=\"center\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          rtl={false}\n          draggable\n          theme=\"dark\"\n        />\n      </ModalForm>\n    </Formik>\n  );\n};\n\nexport default CreateBoardForm;\n","import styled from 'styled-components';\nimport Modal from 'react-modal';\n\nexport const ModalCustom = styled(Modal)`\n  position: relative;\n  border: 1px solid var(--modalBorderColor);\n  background-color: var(--cardItem);\n  border-radius: 8px;\n  width: 335px;\n  height: 433px;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  padding: 0%;\n  z-index: 1000;\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n","import Modal from 'react-modal';\nimport CreateBoardForm from '../../../../src/components/Sidebar/CreateBoardForm/CreateBoardForm';\nimport { ModalCustom } from './ModalBord.styled';\n\nModal.setAppElement('#root');\n\nconst ModalBord = ({ isOpen, closeModal }) => {\n  return (\n    <ModalCustom\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Modal for Board\"\n    >\n      <CreateBoardForm closeModalWindow={closeModal} />\n    </ModalCustom>\n  );\n};\n\nexport default ModalBord;\n","import styled from 'styled-components';\n\nexport const MainText = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  width: 335px;\n  position: absolute;\n\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  text-align: center;\n  color: var(--secondaryTextColor);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28571;\n    width: 486px;\n    left: calc(260px + ((100vw - 260px - 486px)/2));\n  }\n  @media screen and (min-width: 1440px) {\n    left: auto;\n  }\n`;\n\nexport const ButtonCreate = styled.button`\n  color: var(--needHelpLink);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  display: inline-block;\n  padding: 0 2px;\n`;\n","import { useState } from 'react';\nimport ModalBord from '../../../../src/components/Modals/ModalBord/ModalBord';\nimport { MainText, ButtonCreate } from './Text.styled';\n\nconst Text = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <MainText>\n        Before starting your project, it is essential\n        <ButtonCreate type=\"button\" onClick={openModal}>\n          to create a board\n        </ButtonCreate>\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </MainText>\n      <ModalBord\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={closeModal}\n      />\n    </>\n  );\n};\n\nexport default Text;\n","import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const FormFilter = styled(Form)`\n  width: 252px;\n  height: 131px;\n  position: absolute;\n  top: 79px;\n  left: 24px;\n`;\n\nexport const FormHeadersContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 14px;\n`;\n\nexport const Header = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsHeader = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  text-decoration: underline;\n  color: rgba(255, 255, 255, 0.5);\n  transition: 250ms opacity ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 8px;\n  \n\n  & input {\n    margin-right: 8px;\n  }\n`;\n","\nimport { Formik } from 'formik';\n//import icons from '../../../../src/images/sprite.svg';\nimport { useState } from 'react';\nimport { Radio, FormControlLabel, RadioGroup, FormControl } from '@mui/material';\n\n\nimport {\n  Header,\nIconsHeader,\n  // IconsContainer,\n\n  FormFilter,\n  FormHeadersContainer,\n} from './RadioBtnsFilterForm.styled';\n\nconst buttonColor = [\n  { value: 'Without priority', color: '#FFFFFF' },\n  { value: 'Low', color: '#8FA1D0' },\n  { value: 'Medium', color: '#E09CB5' },\n  {value: 'High', color: '#BEDBB0'}\n]\n\nconst RadioBtnsFilterForm = ({ priority }) => {\n  const [selectedValue, setSelectedValue] = useState('');\n  const removeFilters = () => {\n    setSelectedValue('');\n  }\n \n  const primaryTextColor = `var(--primaryTextColor)`;\n\n\n  const onRadioChange = event => {\n    const { value } = event.target;\n    console.log(value);\n    setSelectedValue(value);\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        priority: '',\n      }}\n    >\n      {({ values, handleChange }) => (\n        <FormFilter>\n          <FormHeadersContainer>\n            <Header>Label color</Header>\n            <IconsHeader onClick={removeFilters}>Show all</IconsHeader>\n          </FormHeadersContainer>\n          <FormControl>\n          <RadioGroup value={selectedValue}\n          onChange={onRadioChange}>\n          {buttonColor.map((button) => (\n            <FormControlLabel\n            key={button.value}\n            sx={{\n              color: 'red',\n              '& .Mui-checked.MuiRadio-root': {\n                color: button.color,\n              },\n              '& .MuiSvgIcon-root': {\n                fontSize: 14,\n              },\n              '& .MuiFormControlLabel-label': {\n                fontSize: 12,\n                letterSpacing: '0.02em',\n              },\n              '& .MuiButtonBase-root.MuiRadio-root': {\n                color: button.color,\n                padding: 0,\n                backgroundColor:\n                  selectedValue === button.value\n                    ? 'transparent'\n                    : button.color,\n              },\n              '& .MuiTypography-root': {\n                marginLeft: 1,\n                marginBottom: 1,\n                color:\n                  selectedValue === button.value\n                    ? primaryTextColor\n                    : 'var(--popupTextColor)',\n              },\n            }}\n            value={button.value}\n            control={<Radio />}\n            label={button.value}\n              onChange={onRadioChange}\n              \n          />\n           \n          ))}\n            </RadioGroup>\n          </FormControl>\n        </FormFilter>\n      )}\n    </Formik>\n  );\n};\n\nexport default RadioBtnsFilterForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 8px;\n  width: 64px;\n  height: 20px;\n  cursor: pointer;\n\n  position: absolute;\n  top: 14px;\n  right: 20px;\n  transition: 250ms opacity ease-in-out;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 20px;\n    right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: 14px;\n    right: 24px;\n  }\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--themeTitleTextColor);\n  }\n`;\n\nexport const FilterText = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--themeTitleTextColor);\n`;\n\nexport const WindowContainer = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 40px;\n  background-color: var(--popupBackground);\n\n  border: 1px solid var(--modalGorizontalBorderColor);\n  border-radius: 8px;\n  width: 300px;\n  height: 234px;\n  padding: 24px;\n\n  z-index: 999;\n`;\n\nexport const FilerModalBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--primaryTextColor);\n  }\n`;\n\nexport const FilterFormHeading = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 41px;\n    right: 0;\n    width: 100%;\n    height: 1px;\n    background-color: var(--modalGorizontalBorderColor);\n    margin-bottom: 14px;\n  }\n`;\n","import { useState } from 'react';\nimport RadioBtnsFilterForm from '../../../../src/components/ScreensPage/RadioBrnsFilterForm/RadioBrnsFilterForm';\n\nimport icons from '../../../../src/images/sprite.svg';\nimport {\n  Container,\n  FilterText,\n  WindowContainer,\n  FilerModalBtn,\n  FilterFormHeading,\n} from './Filter.styled';\n\nconst Filter = ({ onChangeFilter, setFilterByPriority }) => {\n  const [window, setWindow] = useState(false);\n  \n\n  const toggleWindow = () => {\n    setWindow(!window);\n  };\n\n  const closeFilterModal = () => {\n    setWindow(false);\n  };\n  return (\n    <>\n      <Container>\n        <svg width=\"16px\" height=\"16px\" fill='transparent'> \n          <use href={`${icons}#icon-filter`}></use>\n        </svg>\n        <FilterText onClick={toggleWindow}>Filters</FilterText>\n      </Container>\n      {window && (\n        <WindowContainer>\n          <FilerModalBtn type=\"button\" onClick={closeFilterModal}>\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-close`}></use>\n            </svg>\n          </FilerModalBtn>\n          <FilterFormHeading>Filters</FilterFormHeading>\n          <RadioBtnsFilterForm\n            onSelect={onChangeFilter}\n            setFilterByPriority={setFilterByPriority}\n          />\n        </WindowContainer>\n      )}\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const Header = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 24px 0;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  // box-shadow: 0 4px 16px 0 var(--themeTitleTextColor);\n  background: var(--popupBackground);\n  opacity: 0.4;\n  margin-bottom: 24px;\n  padding: 0 18px;\n  position: relative;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const BoardCreateBtn = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  width: 100%;\n  height: 49px;\n  margin-left: auto;\n  margin-right: auto;\n  background: var(--addCardButtonBackground);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--addCardButtonColor);\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1px;\n    stroke: var(--addPlusIconColor);\n  }\n\n  &:hover {\n    background-color: var(--createButtonHover);\n  }\n`;\n\nexport const ModalForm = styled(Form)`\n  padding: 24px;\n  height: 100%;\n  position: relative;\n  background: var(--popupBackground);\n  border: 1px solid var(--addCardButtonBackground);\n  border-radius: 8px;\n`;\n\nexport const SvgCloseBtn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  right: 14px;\n  top: 14px;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--buttonColor);\n    width: 18px;\n    height: 18px;\n  }\n`;\nexport const SubmitSvgWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  background-color: var(--addCardButtonColor);\n  border-radius: 6px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  position: absolute;\n  top: 50px;\n  left: 24px;\n  font-size: 10px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { getColumn } from '../../../../src/redux/task/taskSelectors';\n// import { addColumn } from '../../../../src/redux/task/taskOperations';\nimport icons from '../../../../src/images/sprite.svg';\nimport { ToastContainer, /*toast */} from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n  Input,\n  Header,\n  SvgCloseBtn,\n  BoardCreateBtn,\n  Error,\n  SubmitSvgWrapper,\n  ModalForm,\n} from './AddColumnForm.styled';\n\nconst AddColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short').required('This field is required!'),\n});\n\nconst AddColumnForm = ({ closeModalWindow }) => {\n  //   const columns = useSelector(getColumn);\n  //   const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n      }}\n      validationSchema={AddColumnFormSchema}\n      onSubmit={(values, actions) => {\n        console.log(values);\n        actions.resetForm();\n        closeModalWindow();\n        // if (columns.some(column => column.title === values.title)) {\n        //   return toast.warning('The title already exists');\n        // }\n\n        // dispatch(addColumn(values))\n        //   .unwrap()\n        //   .then(() =>\n        //     toast.success(`${columns.title} has been successfully added`)\n        //   )\n        //   .catch(error => error.message);\n      }}\n    >\n      <ModalForm>\n        <Header>Add Column</Header>\n        <SvgCloseBtn type=\"button\" onClick={closeModalWindow}>\n          <svg>\n            <use href={`${icons}#icon-close`}></use>\n          </svg>\n        </SvgCloseBtn>\n\n        <label htmlFor=\"title\"></label>\n        <Error name=\"title\" component=\"div\" />\n        <Input name=\"title\" placeholder=\"Title\" />\n\n        <BoardCreateBtn type=\"submit\">\n          <SubmitSvgWrapper>\n            <svg width=\"28px\" height=\"28px\">\n              <use href={`${icons}#icon-plus`}></use>\n            </svg>\n          </SubmitSvgWrapper>\n          Add\n        </BoardCreateBtn>\n        <ToastContainer\n          position=\"center\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          draggable\n          theme=\"light\"\n        />\n      </ModalForm>\n    </Formik>\n  );\n};\n\nexport default AddColumnForm;\n","import styled from 'styled-components';\n\nimport Modal from 'react-modal';\n\nexport const ModalCustom = styled(Modal)`\n  position: relative;\n\n  border: 1px solid var(--modalBorderColor);\n\n  background-color: var(--cardItem);\n\n  border-radius: 8px;\n\n  width: 350px;\n\n  height: 221px;\n\n  top: 50%;\n\n  left: 50%;\n\n  right: auto;\n\n  bottom: auto;\n\n  margin-right: -50%;\n\n  transform: translate(-50%, -50%);\n\n  padding: 0%;\n\n  z-index: 1000;\n`;\n","import Modal from 'react-modal';\n\nimport AddColumnForm from '../../../../src/components/ScreensPage/AddColumnForm/AddColumnForm';\n\nimport { ModalCustom } from './ModalAddColumn.styled';\n\nModal.setAppElement('#root');\n\nconst ModalAddColumn = ({ isOpen, closeModal }) => {\n  return (\n    <ModalCustom\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Modal for Columns\"\n    >\n      <AddColumnForm closeModalWindow={closeModal} />\n    </ModalCustom>\n  );\n};\n\nexport default ModalAddColumn;\n","import styled from 'styled-components';\n\nexport const BoardName = styled.h2`\n  /* margin-bottom: 39px; */\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #fff;\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  @media screen and (min-width: 768px) {\n    top: 26px;\n    left: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 10px;\n    left: 24px;\n  }\n`;\n\nexport const ColumnAddBtn = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  background-color: #121212;\n  cursor: pointer;\n  border-radius: 8px;\n  padding: 14px 79px;\n  max-width: 335px;\n  height: 56px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #fff;\n`;\n\nexport const SvgDiv = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  & svg {\n    stroke-width: 1px;\n    stroke: #121212;\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import { useSelector, /*useDispatch */} from 'react-redux';\nimport { useState } from 'react';\nimport { getBoard } from '../../../redux/auth/authSelectors';\nimport icons from '../../../../src/images/sprite.svg';\nimport ModalAddColumn from '../../../../src/components/Modals/ModalAddColumn/ModalAddColumn';\n\nimport { BoardName, ColumnAddBtn, SvgDiv } from './AddBoardBtn.styled';\n\nexport const AddBoardBtn = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const boards = useSelector(getBoard);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  return (\n    <>\n      <BoardName>{boards.title}</BoardName>\n\n      <ColumnAddBtn type=\"button\" onClick={openModal}>\n        <SvgDiv>\n          <svg>\n            <use href={`${icons}#icon-plus`}></use>\n          </svg>\n        </SvgDiv>\n        Add another column\n      </ColumnAddBtn>\n      <ModalAddColumn\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={() => setIsOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default AddBoardBtn;\n","import styled from 'styled-components';\n\nexport const ContainerMain = styled.div`\n  padding: 14px 20px;\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  gap: 34px;\n\n  position: absolute;\n  top: 60px;\n  left: 0;\n  padding: 74px 20px 60px;\n  overflow-y: scroll;\n  z-index: 0;\n  width: 100%;\n  height: calc(-60px + 100vh);\n\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: calc(-60px + 100vh);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 80px 32px 96px;\n    width: 100%;\n    top: 68px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 48px 24px 36px;\n    width: calc(-260px + 100vw);\n\n    left: 260px;\n  }\n`;\n","import { AddBoardBtn } from '../../../../src/components/ScreensPage/AddBoardBtn/AddBoardBtn';\nimport Filter from '../../../../src/components/ScreensPage/Filter/Filter';\nimport { ContainerMain } from './Bord.styled';\n\nconst Bord = ({ onChangeFilter, setFilterByPriority }) => {\n  return (\n    <>\n      <ContainerMain>\n        <AddBoardBtn />\n        <Filter\n          onChangeFilter={onChangeFilter}\n          setFilterByPriority={setFilterByPriority}\n        />\n      </ContainerMain>\n    </>\n  );\n};\n\nexport default Bord;\n","import { Container } from './ScreensPage.styled';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Text from '../../../src/components/ScreensPage/Text/Text';\nimport Filter from '../../../src/components/ScreensPage/Filter/Filter';\nimport Bord from '../../../src/components/ScreensPage/Bord/Bord';\nimport { getBoard } from '../../../src/redux/auth/authSelectors';\n\nconst ScreensPage = () => {\n  const boards = useSelector(getBoard);\n\n  const [filterByPriority, setFilterByPriority] = useState('');\n  // const [cards, setCards] = useState([]);\n  const onFilterChange = newFilter => {\n    console.log(newFilter);\n    setFilterByPriority(newFilter);\n    console.log(filterByPriority);\n  };\n\n  // const visibleCards = cards.filter(card => card.priority === filterByPriority);\n\n  return boards && boards.length ? (\n    <section>\n      <Bord\n        setFilterByPriority={setFilterByPriority}\n        onChangeFilter={onFilterChange}\n      />\n    </section>\n  ) : (\n    <section>\n      <Container>\n        <Filter\n          setFilterByPriority={setFilterByPriority}\n          onChangeFilter={onFilterChange}\n        />\n        <Text />\n      </Container>\n    </section>\n  );\n};\n\nexport default ScreensPage;\n","import styled from 'styled-components';\n\nexport const SideBarMenu = styled.div`\n\n  padding: 24px;\n  width: 260px;\n  // height: 100vh;\n  background-color: var(--sidebarBgColor);\n  transition: transform 0.3s linear;\n  display: flex;\n  flex-direction: column;\n  // overflow: auto;\n\n  /* Tablet */\n  @media screen and (max-width: 767px) {\n    top: 0;\n    position: absolute;\n    left: -260px;\n    z-index: 100;\n    &.active {\n      transform: translateX(100%);\n      z-index: 10;\n    }\n  }\n\n  /* Mobile */\n  @media screen and (max-width: 375px) {\n    padding: 14px;\n    max-width: 225px;\n    width: 225px;\n    left: -225px;\n  }\n\n  /* Desktop - Sidebar visible for screens larger than 768px */\n  @media screen and (min-width: 768px) {\n    left: 0;\n    position: absolute;\n  }\n\n  @media screen and (min-height: 662px) {\n    height: 100vh;\n  }\n`;\n\nexport const ButtonBurger = styled.button`\n  display: none;\n\n  /* Tablet */\n  @media screen and (max-width: 767px) {\n    border-color: transparent;\n    width: 32px;\n    height: 32px;\n    background-color: var(--headerBgColor);\n    display: block;\n    position: fixed;\n    top: 18px;\n    left: 32px;\n    z-index: 100;\n    &.active {\n      display: none;\n    }\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: transparent;\n  display: none;\n  // overflow: auto;\n\n  &.active {\n    display: block;\n    z-index: 9;\n  }\n`;\n\n","import styled from 'styled-components';\n\nexport const LogoComponentStyled = styled.div`\n  margin-bottom: 60px;\n  height: 32px;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n\n  //Mobile\n  @media screen and (max-width: 375px) {\n    margin-bottom: 70px;\n  }\n`;\n\nexport const TaskPro = styled.span`\n  font-weight: 600;\n  line-height: 1.5;\n  color: var(--createNewBoard);\n`;\n\n//Color logo\nexport const LogoPath = styled.path`\n  fill: var(--logoBackground); // when adding a topic, swap places\n`;\n//Color Logo centeral\nexport const LogoPathCentral = styled.path`\n  fill: var(--logoIcon); // when adding a topic, swap places\n`;\n","import {\n  LogoComponentStyled,\n  TaskPro,\n  LogoPath,\n  LogoPathCentral,\n} from './LogoComponent.styled';\n// import icons from '../../../images/sprite.svg';\n\nconst LogoComponent = () => {\n  return (\n    <LogoComponentStyled>\n      {/*  Провсяквипадок. свг зі Sprite.svg\n      <svg width=\"32\" height=\"32\" style={svgStyles}>\n        <use href={`${icons}#icon-logo `}></use>\n      </svg> \n      */}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        viewBox=\"0 0 32 32\"\n      >\n        <LogoPath d=\"M24 0h-16c-4.418 0-8 3.582-8 8v0 16c0 4.418 3.582 8 8 8v0h16c4.418 0 8-3.582 8-8v0-16c0-4.418-3.582-8-8-8v0z\"></LogoPath>\n        <LogoPathCentral d=\"M13.331 23.027c0.245-1.272 0.453-2.61 0.747-3.949 0.145-0.7-0.031-1-0.814-0.946-0.784 0.054-1.657 0.027-2.49 0-0.833-0.026-0.982-0.446-0.502-1.044 2.362-2.918 4.752-5.8 7.133-8.673 0.267-0.326 0.575-0.558 1.014-0.313 0.44 0.246 0.349 0.55 0.276 0.915-0.262 1.339-0.48 2.677-0.77 3.989-0.149 0.678 0.046 0.919 0.752 0.892 0.318-0.017 0.69-0.027 1.064-0.027s0.746 0.010 1.116 0.029l-0.052-0.002c0.403 0 0.932-0.21 1.14 0.34 0.209 0.548-0.23 0.78-0.452 1.106-1.327 1.642-2.227 2.729-3.135 3.81l0.383-0.468c-1.361 1.624-2.712 3.242-4.052 4.854-0.262 0.317-0.556 0.571-1.005 0.41-0.448-0.16-0.353-0.54-0.353-0.923z\"></LogoPathCentral>\n      </svg>\n\n      <TaskPro>Task Pro</TaskPro>\n    </LogoComponentStyled>\n  );\n};\n\nexport default LogoComponent;\n","import styled from 'styled-components';\n\nexport const Heading = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textBoardColor);\n  margin-bottom: 8px;\n`;\n\nexport const Container = styled.div`\n  padding: 14px 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n  border-bottom: 1px solid var(--modalGorizontalBorderColor);\n  margin-bottom: 40px;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--createNewBoard);\n`;\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  border: none;\n  background-color: var(--createNewBoardIconBgColor);\n  cursor: pointer;\n  transition: background-color 250ms ease-in-out;\n\n  &:hover {\n    background-color: var(--btnColorHover);\n  }\n\n  svg {\n    fill: none;\n    stroke: black;\n  }\n`;\n","import ModalBord from '../../../../src/components/Modals/ModalBord/ModalBord';\nimport { useState } from 'react';\n\nimport { Heading, Button, Text, Container } from './CreateBoard.styled';\nimport icons from '../../../images/sprite.svg';\n\nconst CreateBord = ({onCloseSideBar}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  \n  const handleButtonClick = () => {\n     const currentWidth = window.innerWidth;\n    const thresholdWidth = 768;\n\n  if (currentWidth <= thresholdWidth) {\n    openModal();\n    onCloseSideBar();\n  } else {\n    openModal();\n  }\n\n  }\n\n  return (\n    <>\n      <Heading>My boards</Heading>\n      <Container>\n        <Text>\n          Create a <br />\n          new board\n        </Text>\n        <Button onClick={handleButtonClick}>\n          <svg width=\"40px\" height=\"36px\">\n            <use href={`${icons}#icon-plus`}></use>\n          </svg>\n        </Button>\n      </Container>\n\n      <ModalBord\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={() => setIsOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default CreateBord;\n","import styled from 'styled-components';\n\nexport const BoardsContainer = styled.div`\n  position: relative;\n  width: 260px;\n  left: -24px;\n  min-height: 61px;\n  overflow-y: auto;\n  margin-bottom: 40px;\n  scrollbar-width: none;\n\n  @media screen and (max-width: 375px) {\n    width: 225px;\n    left: -14px;\n  }\n`;\n\nexport const ItemContainer = styled.div`\n  height: 61px;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  padding: 20px 24px;\n  margin-bottom: 4px;\n\n  &:hover,\n  &:active,\n  &.activeBoard {\n    background: var(--currentProjBgColor);\n    cursor: pointer;\n  }\n`;\n\nexport const Icon = styled.div`\n  fill: none;\n  stroke: var(--textBoardColor);\n\n  &.activeBoardIcon {\n    stroke: var(--createNewBoard);\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n\n  color: var(--textBoardColor);\n\n  &.activeBoardTitle {\n    color: var(--createNewBoard);\n    opacity: 1;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: auto;\n`;\n\nexport const Button = styled.button`\n  padding: 0;\n  background: none;\n  border: none;\n  fill: none;\n  stroke: none;\n  display: none;\n\n  &.activeBoardButton {\n    display: block;\n    stroke: var(--textBoardColor);\n    cursor: pointer;\n  }\n`;\n\nexport const CurrentLine = styled.div`\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 61px;\n  position: absolute;\n  left: 256px;\n\n  &.activeLine {\n    background: var(--iconLogOut);\n  }\n\n  @media screen and (max-width: 375px) {\n    left: 221px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const Header = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 24px 0;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background: var(--popupBackground);\n  margin-bottom: 24px;\n  padding: 0 18px;\n  position: relative;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsHeaderIcons = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  gap: 8px;\n  margin: 0 0 24px 0;\n  padding: 0;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--iconCardColor);\n    fill: transparent;\n  }\n\n  .icons-field {\n    display: none;\n  }\n\n  input:checked + svg {\n    stroke: var(--primaryTextColor);\n  }\n`;\n\nexport const HeaderBackground = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const BackgroundContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 4px;\n  flex-wrap: wrap;\n  margin: 0 0 40px 0;\n  stroke-width: 1px;\n  stroke: var(--defaultAvatarBgColor);\n  width: 252px;\n\n  .background-field {\n    display: none;\n  }\n\n  img {\n    cursor: pointer;\n  }\n\n  input:checked + img {\n    border: 2px solid var(--defaultAvatarBgColor);\n    border-radius: 6px;\n  }\n`;\n\nexport const BoardCreateBtn = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  width: 100%;\n  height: 49px;\n  margin-left: auto;\n  margin-right: auto;\n  background: var(--addCardButtonBackground);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--addCardButtonColor);\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1px;\n    stroke: var(--addPlusIconColor);\n  }\n\n  &:hover {\n    background-color: var(--createButtonHover);\n  }\n`;\n\nexport const ModalForm = styled(Form)`\n  padding: 24px;\n  position: relative;\n  background: var(--popupBackground);\n  border: 1px solid var(--addCardButtonBackground);\n  border-radius: 8px;\n`;\n\nexport const SvgCloseBtn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  right: 14px;\n  top: 14px;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--buttonColor);\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const SubmitSvgWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  background-color: var(--addCardButtonColor);\n  border-radius: 6px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  position: absolute;\n  top: 50px;\n  left: 24px;\n  font-size: 10px;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// import { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport icons from '../../../../src/images/sprite.svg';\nimport Image0 from '../../../../src/images/background/00.png';\nimport Image1 from '../../../../src/images/background/07.png';\nimport Image2 from '../../../../src/images/background/02.png';\nimport Image3 from '../../../../src/images/background/01.png';\nimport Image4 from '../../../../src/images/background/08.png';\nimport Image5 from '../../../../src/images/background/03.png';\nimport Image6 from '../../../../src/images/background/04.png';\nimport Image7 from '../../../../src/images/background/09.png';\nimport Image8 from '../../../../src/images/background/05.png';\nimport Image9 from '../../../../src/images/background/10.png';\nimport Image10 from '../../../../src/images/background/06.png';\nimport Image11 from '../../../../src/images/background/11.png';\nimport Image12 from '../../../../src/images/background/12.png';\nimport Image13 from '../../../../src/images/background/13.png';\nimport Image14 from '../../../../src/images/background/14.png';\nimport Image15 from '../../../../src/images/background/15.png';\n\nimport {\n  Header,\n  Input,\n  IconsHeaderIcons,\n  IconsContainer,\n  HeaderBackground,\n  BackgroundContainer,\n  BoardCreateBtn,\n  ModalForm,\n  SvgCloseBtn,\n  Img,\n  SubmitSvgWrapper,\n  Error,\n} from './EditBoardForm.styled';\nimport { editBoard } from '../../../redux/auth/authOperations';\nimport { getBoardSelector } from '../../../redux/auth/authSelectors';\n\nconst BoardFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short').required('This field is required!'),\n});\n\nconst EditBoardForm = ({ closeModalWindow, id }) => {\n  const dispatch = useDispatch();\n\n  const boards = useSelector(getBoardSelector);\n  const { title, icnboard, background } = boards.find(board => {\n    return board._id === id;\n  });\n  console.log(title, icnboard, background);\n\n  return (\n    <Formik\n      initialValues={{\n        title: title,\n        icnboard: icnboard,\n        background: background,\n      }}\n      validationSchema={BoardFormSchema}\n      onSubmit={(values, actions) => {\n        // if (\n        //   title === values.title ||\n        //   icnboard === values.icnboard ||\n        //   background === values.background\n        // ) {\n        //   // return notify.warning('The title already exists');\n        //   console.log('Data does not change');\n        //   return;\n        // }\n\n        dispatch(editBoard({ id, values }))\n          .unwrap()\n          .then(() =>\n            //  Notify.success(\n            //    `${title} has been successfully added to your contacts`\n            //  )\n            console.log('Board has been successfully updated')\n          )\n          .catch(error => error.message);\n        actions.resetForm();\n        closeModalWindow();\n      }}\n    >\n      <ModalForm>\n        <Header>Edit board</Header>\n        <SvgCloseBtn type=\"button\" onClick={closeModalWindow}>\n          <svg>\n            <use href={`${icons}#icon-close`}></use>\n          </svg>\n        </SvgCloseBtn>\n\n        <label htmlFor=\"title\"></label>\n        <Error name=\"title\" component=\"div\" />\n        <Input name=\"title\" placeholder=\"Title\" />\n\n        <IconsHeaderIcons>Icons</IconsHeaderIcons>\n        <IconsContainer>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-project\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-project`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-star\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-star`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-loading\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-loading`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-puzzle\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-puzzle`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-container\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-container`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-lightning\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-lightning`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-colors\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-colors`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-hexagon\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-hexagon`}></use>\n            </svg>\n          </label>\n        </IconsContainer>\n\n        <HeaderBackground>Background</HeaderBackground>\n        <BackgroundContainer>\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"0\"\n            />\n            <Img src={Image0} alt=\"background 0\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"1\"\n            />\n            <Img src={Image1} alt=\"background 1\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"2\"\n            />\n            <Img src={Image2} alt=\"background 2\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"3\"\n            />\n            <Img src={Image3} alt=\"background 3\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"4\"\n            />\n            <Img src={Image4} alt=\"background 4\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"5\"\n            />\n            <Img src={Image5} alt=\"background 5\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"6\"\n            />\n            <Img src={Image6} alt=\"background 6\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"7\"\n            />\n            <Img src={Image7} alt=\"background 7\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"8\"\n            />\n            <Img src={Image8} alt=\"background 8\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"9\"\n            />\n            <Img src={Image9} alt=\"background 9\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"10\"\n            />\n            <Img src={Image10} alt=\"background 10\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"11\"\n            />\n            <Img src={Image11} alt=\"background 11\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"12\"\n            />\n            <Img src={Image12} alt=\"background 12\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"13\"\n            />\n            <Img src={Image13} alt=\"background 13\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"14\"\n            />\n            <Img src={Image14} alt=\"background 14\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"15\"\n            />\n            <Img src={Image15} alt=\"background 15\" />\n          </label>\n        </BackgroundContainer>\n\n        <BoardCreateBtn type=\"submit\">\n          <SubmitSvgWrapper>\n            <svg width=\"28px\" height=\"28px\">\n              <use href={`${icons}#icon-plus`}></use>\n            </svg>\n          </SubmitSvgWrapper>\n          Edit\n        </BoardCreateBtn>\n        {/* <ToastContainer\n          position=\"center\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          theme=\"light\"\n        /> */}\n      </ModalForm>\n    </Formik>\n  );\n};\n\nexport default EditBoardForm;\n","import Modal from 'react-modal';\nimport EditBoardForm from '../../Sidebar/EditBoardForm/EditBoardForm';\nimport { ModalCustom } from './ModalBord.styled';\n\nModal.setAppElement('#root');\n\nconst EditModalBord = ({ isOpen, closeModal, id }) => {\n  return (\n    <ModalCustom\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Modal for Edit Board\"\n    >\n      <EditBoardForm id={id} closeModalWindow={closeModal} />\n    </ModalCustom>\n  );\n};\n\nexport default EditModalBord;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport {\n  ItemContainer,\n  Title,\n  ButtonContainer,\n  CurrentLine,\n  Button,\n  Icon,\n} from './BoardsList.styled';\n\nimport icons from '../../../images/sprite.svg';\n\nimport { deleteBoard } from '../../../redux/auth/authOperations';\nimport EditModalBord from 'components/Modals/ModalBord/EditModalBoard';\n\nconst BoardItem = ({ id, isActive, icon, title }) => {\n  const dispatch = useDispatch();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  return (\n    <ItemContainer className={isActive ? 'activeBoard' : ''}>\n      <Icon className={isActive ? 'activeBoardIcon' : ''}>\n        <svg width=\"18\" height=\"18\">\n          <use href={`${icons}#${icon}`}></use>\n        </svg>\n      </Icon>\n      <Title className={isActive ? 'activeBoardTitle' : ''}>{title}</Title>\n      <ButtonContainer>\n        <Button\n          className={isActive ? 'activeBoardButton' : ''}\n          onClick={() => openModal()}\n        >\n          <svg width=\"16\" height=\"16\">\n            <use href={`${icons}#icon-pencil`}></use>\n          </svg>\n        </Button>\n        <Button\n          className={isActive ? 'activeBoardButton' : ''}\n          onClick={() => dispatch(deleteBoard(id))}\n        >\n          <svg width=\"16\" height=\"16\">\n            <use href={`${icons}#icon-trash`}></use>\n          </svg>\n        </Button>\n      </ButtonContainer>\n      <CurrentLine className={isActive ? 'activeLine' : ''} />\n      <EditModalBord\n        id={id}\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={() => setIsOpen(false)}\n      />\n    </ItemContainer>\n  );\n};\n\nexport default BoardItem;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport BoardItem from './BoardItem';\nimport { BoardsContainer } from './BoardsList.styled';\n\nimport { getBoardSelector } from '../../../redux/auth/authSelectors';\nimport { updateBoardActive } from '../../../redux/auth/authOperations';\n\nconst BoardsList = () => {\n  const boards = useSelector(getBoardSelector);\n\n  let reverseBoards = [];\n  if (boards) {\n    boards.map(board => {\n      return reverseBoards.unshift(board);\n    });\n  }\n\n  const dispatch = useDispatch();\n\n  return (\n    <BoardsContainer>\n      {boards && boards.length > 0 && (\n        <ul>\n          {reverseBoards.map(board => (\n            <li\n              key={board._id}\n              onClick={() => dispatch(updateBoardActive(board._id))}\n            >\n              <BoardItem\n                id={board._id}\n                isActive={board.isActive}\n                icon={board.icnboard}\n                title={board.title}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n    </BoardsContainer>\n  );\n};\n\nexport default BoardsList;\n","import styled from 'styled-components';\n\nexport const ContainerHelp = styled.div`\n  margin-top: auto;\n  background: var(--helpBgColor);\n  border-radius: 8px;\n  width: 197px;\n  height: 65px;\n  padding-top: 27px;\n  padding-left: 19px;\n\n\n  @media (min-width:375px) and (max-width: 1770px) {\n    width: 212px;\n    padding-left: 20px;\n  }\n`;\n\nexport const ImgHelp = styled.img`\n  width: 54px;\n  height: 78px;\n  margin-top: 10px;\n`;\n\nexport const TextHelp = styled.p`\n  width: 163px;\n  margin-top: 14px;\n  color: var(--needHelpBtn);\n  font-size: 12px;\n  line-height: 1.34;\n  letter-spacing: -0.24px;\n\n  @media (min-width: 768px) {\n    width: 164px;\n    font-size: 14px;\n    line-height: 1.4;\n    letter-spacing: -0.28px;\n  }\n`;\n\nexport const Span = styled.span`\n  color: var(--greenGreenBlueColor);\n`;\n\nexport const IconHelp = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: none;\n  stroke: var(--needHelpBtn);\n`;\n\nexport const QuestionHelp = styled.span`\n  font-weight: 500;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  cursor: pointer;\n  color: var(--needHelpBtn);\n  padding-top: 19px;\n`;\n\nexport const ContainerText = styled.div`\n   background-color: var(--helpBgColor);\n    margin-top: -204px;\n    width: 211px;\n    margin-left: -19px;\n    padding-left: 20px;\n    border-radius: 8px;\n    display: ${props => props.isVisible ? 'block' : 'none'};\n\n  @media(max-width:375px) {\n    width: 197px;\n  }\n`;\n\nexport const BtnNeedHelp = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n  cursor: pointer;\n  position: relative;\n\n  &:hover + ${ContainerText} {\n    display: block;\n  }\n`;","import styled from \"styled-components\";\nimport ReactModal from 'react-modal';\n\nexport const OverlayModal = styled(ReactModal)`\n  position: relative;\n  border-radius: 8px;\n  width: 400px;\n  height: 355px;\n  top: 50%;\n  right: auto;\n  bottom: auto;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  padding: 0%;\n  z-index: 1000;\n`\n\nexport const ModalContainerHelp = styled.div`\n  background-color: var(--popupBackground);\n  border-radius: 8px;\n  border: 1px solid var(--addCardButtonBackground);\n  z-index: 20;\n  position: fixed;\n  padding-top: 23px;\n  width: 400px;\n  height: 355px;\n\n  @media (max-width: 768px) {\n    width: 335px;\n    margin-left: 30px;\n  }\n`;\n\nexport const FormHelp = styled.form`\n  display: inline-block;\n`;\n\nexport const ModalTitleHelp = styled.h2`\n  margin-left: 24px;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const InputHelp = styled.input`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  background-color: var(--popupBackground);\n  width: 352px;\n  height: 49px;\n  margin-left: 24px;\n  margin-right: 24px;\n  padding-left: 15px;\n  color: var(--primaryTextColor);\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    color: var(--secondaryTextColor);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 768px) {\n    width: 287px;\n  }\n`;\n\nexport const CommentHelp = styled.textarea`\n  border: 1px solid var(--greenGreenBlueColor);\n  height: 120px;\n  border-radius: 8px;\n  background-color: black;\n  background-color: var(--popupBackground);\n  width: 352px;\n  height: 120px;\n  margin: 14px 24px 0 24px;\n  resize: none;\n  padding-left: 15px;\n  padding-top: 14px;\n  color: var(--primaryTextColor);\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    color: var(--secondaryTextColor);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 768px) {\n    width: 287px;\n  }\n`;\n\nexport const BtnSendHelp = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  cursor: pointer;\n  width: 352px;\n  height: 49px;\n  margin: 24px;\n  background-color: var(--greenGreenBlueColor);\n  border: none;\n  color: var(--addCardButtonColor);\n  &:hover {\n    background-color: var(--btnColorHover);\n  }\n  @media (max-width: 768px) {\n    width: 287px;\n  }\n \n`;\n\nexport const IconHelp = styled.svg`\n  position: relative;\n  left: 370px;\n  bottom: 34px;\n  cursor: pointer;\n  width: 18px;\n  height: 18px;\n  fill: none;\n  stroke: var(--buttonColor);\n\n  @media (max-width: 768px) {\n    left: 305px;\n  }\n`;","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\n\nimport icons from '../../../images/sprite.svg';\nimport {\n  ModalContainerHelp,\n  FormHelp,\n  InputHelp,\n  ModalTitleHelp,\n  CommentHelp,\n  BtnSendHelp,\n  IconHelp,\n} from '../../../components/Modals/ModalNeedHelp/ModalNeedHelp.styled';\n\nimport { fetchHelpApi } from '../../../services/backApi';\nimport { getUserEmail } from '../../../redux/auth/authSelectors';\n\n\nconst NeedHelpSchema = Yup.object().shape({\n  email: Yup.string().email().required('Email is required'),\n  comment: Yup.string().required('Comment is required'),\n});\n\n\nconst FormNeedHelp = ({ onClose }) => {\n  const userEmail = useSelector(getUserEmail);\n\n  const handleSubmit = (values, { resetForm }) => {\n    fetchHelpApi(values);\n    resetForm();\n    onClose();\n  };\n\n  return (\n    <ModalContainerHelp>\n      <ModalTitleHelp>Need help</ModalTitleHelp>\n      \n       <IconHelp onClose={onClose}>\n        <use href={`${icons}#icon-close`}></use>\n      </IconHelp>\n\n      <Formik\n        initialValues={{\n          email: `${userEmail}`,\n          comment: '',\n        }}\n        validationSchema={NeedHelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ handleChange, values }) =>(\n          <FormHelp>\n            <InputHelp\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"Email address\"\n              onChange={handleChange}\n              value={values.email}\n            />\n            <CommentHelp\n              type=\"comment\"\n              name=\"comment\"\n              required\n              placeholder=\"Comment\"\n              onChange={handleChange}\n            />\n            <BtnSendHelp type=\"submit\">Send</BtnSendHelp>\n          </FormHelp>\n        )}\n      </Formik>\n\n    </ModalContainerHelp>\n  );\n};\n\nexport default FormNeedHelp;","import FormNeedHelp from '../../Sidebar/NeedHelp/FormNeedHelp';\nimport { OverlayModal } from './ModalNeedHelp.styled';\nimport ReactModal from 'react-modal';\n\nReactModal.setAppElement('#root');\n\nconst ModalNeedHelp = ({ isOpen, onClose }) => {\n \n  return (\n     \n    <OverlayModal\n      isOpen={isOpen}\n      onRequestClose={onClose}\n    >\n      <FormNeedHelp closeModal={onClose}/>\n      </OverlayModal>\n  );\n};\n\n\nexport default ModalNeedHelp;","import { useState } from 'react';\n\nimport {\n  ContainerHelp,\n  ImgHelp,\n  TextHelp,\n  IconHelp,\n  Span,\n  QuestionHelp,\n  BtnNeedHelp,\n  ContainerText,\n} from './NeedHelp.styled.js';\n\nimport ModalNeedHelp from '../../Modals/ModalNeedHelp/ModalNeedHelp.jsx';\nimport image from 'images/need-help.png';\nimport icons from '../../../images/sprite.svg';\n\nconst NeedHelp = ({onCloseSideBar}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [hoverText, setHoverText] = useState(false);\n\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleButtonClick = () => {\n     const currentWidth = window.innerWidth;\n    const thresholdWidth = 768;\n\n\n  if (currentWidth <= thresholdWidth) {\n    openModal();\n    onCloseSideBar();\n    \n  } else {\n    openModal();\n    console.log(\"click\")\n  }\n\n  }\n\n  return (\n    <ContainerHelp>\n\n    <ContainerText isVisible={hoverText}>\n      <ImgHelp src={image} alt=\"Help\" />\n\n      <TextHelp>\n        If you need help with\n        <Span> TaskPro</Span>, check out our\n        support resources or reach out to our customer support team.\n      </TextHelp>\n       </ContainerText>\n\n      <BtnNeedHelp onMouseEnter={() => setHoverText(true)} onMouseLeave={() => setHoverText(false)}>\n        <IconHelp>\n          <use href={`${icons}#icon-help`}></use>\n        </IconHelp>\n        <QuestionHelp onClick={handleButtonClick}> Need help? </QuestionHelp>\n      </BtnNeedHelp>\n\n      <ModalNeedHelp isOpen={isModalOpen} onClose={closeModal} />\n    </ContainerHelp>\n  );\n};\n\nexport default NeedHelp;","import styled from 'styled-components';\n\nexport const StyledImg = styled.div`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: var(--iconLogOut);\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 24px;\n  gap: 14px;\n  width: 110px;\n\n  font-weight: 500;\n  font-size: 16px;\n  color: var(--createNewBoard);\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport icons from '../../../images/sprite.svg';\nimport { StyledDiv, StyledImg } from './StyledLogOut';\nimport { logout } from '../../../redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst LogOut = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    \n    const onLogOut = () => {\n        dispatch(logout());\n        navigate('/');\n    }\n\n    return (\n      <StyledDiv onClick={onLogOut}>\n        <StyledImg >\n          <svg width=\"32\" height=\"32\">\n            <use href={`${icons}#icon-logout`}></use>\n          </svg>\n        </StyledImg>\n        <p>Log Out</p>\n      </StyledDiv>\n    );\n};\n\nexport default LogOut;","import {\n  SideBarMenu,\n  Overlay,\n} from './Sidebar.styled';\nimport LogoComponent from './LogoComponent/LogoComponent';\nimport CreateBord from './CreateBord/CreateBord';\nimport BoardsList from './BoardsList/BoardsList';\nimport NeedHelp from './NeedHelp/NeedHelp';\nimport LogOut from './LogOut/LogOut';\nimport React from 'react';\n\nconst SideBar = ({ isSidebarOpen, onCloseSideBar }) => {\n  return (\n    <>\n      <Overlay\n        className={` ${isSidebarOpen ? 'active' : ''}`}\n        onClick={onCloseSideBar}\n      />\n      <SideBarMenu className={` ${isSidebarOpen ? 'active' : ''}`}>\n        <LogoComponent/>\n        <CreateBord onCloseSideBar={onCloseSideBar}/>\n        <BoardsList/>\n        <NeedHelp onCloseSideBar={onCloseSideBar}/>\n        <LogOut />\n      </SideBarMenu>\n    </>\n  );\n};\n\nexport default SideBar;\n","import Header from 'components/Header/Header';\nimport ScreensPage from 'components/ScreensPage/ScreensPage';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport { useState } from 'react';\n\nconst HomePage = () => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n  return (\n    <>\n      <Sidebar isSidebarOpen={isSidebarOpen} onCloseSideBar={closeSidebar} />\n      <Header toggleSidebar={toggleSidebar} />\n      <ScreensPage />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_path","_path2","_path3","ThemeWrapper","styled","_templateObject","_taggedTemplateLiteral","ThemeTitle","_templateObject2","ThemeSelectWraper","_templateObject3","ThemeItems","_templateObject4","props","theme","children","toLowerCase","ThemeSelectIcon","_templateObject5","_useState","useState","_useState2","_slicedToArray","setTheme","_useState3","_useState4","list","setList","useEffect","document","body","setAttribute","savedTheme","localStorage","getItem","handleThemeChange","newTheme","setItem","toogleList","_jsxs","onClick","_jsx","href","sprite","StyledBtnProfile","StyledImgProfile","StyledProfileName","User","_ref","handleOpenModal","_useSelector","useSelector","getUserData","username","avatar","_Fragment","src","alt","userFoto","name","split","map","el","toUpperCase","slice","join","editString","SpriteSVG","id","viewBox","strokeLinejoin","strokeLinecap","strokeMiterlimit","strokeWidth","d","fill","style","stroke","width","height","xmlns","x","y","rx","ry","ModalOverlay","modalRoot","querySelector","onClose","overflow","handleEscape","event","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","StyledBtn","StyledModal","StyledBtnClose","StyledModalHeader","StyledUserFoto","StyledInputAdd","StyledSvgWrapper","_templateObject6","StyledModalForm","_templateObject7","StyledModalInput","_templateObject8","StyledBtnEdit","_templateObject9","StyledBtnSave","_templateObject10","EditProfileText","_templateObject11","StyledErrorMail","_templateObject12","StyledErrorName","_templateObject13","StyledError","_templateObject14","validationSchema","Yup","userName","min","userEmail","email","userPassword","UserInfoModal","dispatch","useDispatch","selectedFile","setSelectedFile","changedName","_useState5","_useState6","showPassword","setShowPassword","_useState7","_useState8","changedPassword","setChangedPassword","_useState9","_useState10","previewImage","setPreviewImage","handleFileChange","file","reader","FileReader","onloadend","result","readAsDataURL","onUpload","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","formData","_context","prev","next","type","files","abrupt","preventDefault","FormData","append","updateUser","unwrap","then","catch","error","console","message","stop","_x","apply","arguments","formik","useFormik","initialValues","onSubmit","_onSubmit","_callee2","values","_context2","_x2","ModalEditUser","onChange","click","handleSubmit","placeholder","value","handleChange","errors","touched","position","isModalOpen","setIsModalOpen","HeaderWrapper","_excluded","_extends","Object","assign","i","length","source","key","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBurger","svgRef","title","titleId","ref","ForwardRef","toggleSidebar","burgerIconStyles","cursor","left","innerWidth","windowWidth","setWindowWidth","handleResize","display","BurgerIcon","HeaderSwitchTheme","HeaderUserBar","Container","Header","Input","Field","IconsHeaderIcons","IconsContainer","HeaderBackground","BackgroundContainer","BoardCreateBtn","ModalForm","Form","SvgCloseBtn","Img","SubmitSvgWrapper","Error","ErrorMessage","BoardFormSchema","shape","required","closeModalWindow","boards","getBoard","Formik","icnboard","background","actions","some","board","toast","createBoard","concat","resetForm","icons","htmlFor","component","className","Image0","Image1","Image2","Image3","Image4","Image5","Image6","Image7","Image8","Image9","Image10","Image11","Image12","Image13","Image14","Image15","ToastContainer","autoClose","hideProgressBar","newestOnTop","rtl","draggable","ModalCustom","Modal","isOpen","closeModal","onRequestClose","contentLabel","CreateBoardForm","MainText","ButtonCreate","setIsOpen","openModal","ModalBord","FormFilter","FormHeadersContainer","IconsHeader","buttonColor","color","priority","selectedValue","setSelectedValue","removeFilters","onRadioChange","log","FormControl","RadioGroup","button","FormControlLabel","sx","fontSize","letterSpacing","padding","backgroundColor","marginLeft","marginBottom","control","Radio","label","FilterText","WindowContainer","FilerModalBtn","FilterFormHeading","onChangeFilter","setFilterByPriority","setWindow","RadioBtnsFilterForm","onSelect","AddColumnFormSchema","closeOnClick","AddColumnForm","BoardName","ColumnAddBtn","SvgDiv","AddBoardBtn","ModalAddColumn","ContainerMain","Filter","filterByPriority","onFilterChange","newFilter","Bord","Text","SideBarMenu","Overlay","LogoComponentStyled","TaskPro","LogoPath","LogoPathCentral","Heading","Button","onCloseSideBar","BoardsContainer","ItemContainer","Icon","Title","ButtonContainer","CurrentLine","_boards$find","getBoardSelector","find","_id","editBoard","EditBoardForm","isActive","icon","deleteBoard","EditModalBord","reverseBoards","unshift","updateBoardActive","BoardItem","ContainerHelp","ImgHelp","TextHelp","Span","IconHelp","QuestionHelp","ContainerText","isVisible","BtnNeedHelp","OverlayModal","ReactModal","ModalContainerHelp","FormHelp","ModalTitleHelp","InputHelp","CommentHelp","BtnSendHelp","NeedHelpSchema","comment","getUserEmail","fetchHelpApi","_ref3","FormNeedHelp","hoverText","setHoverText","image","onMouseEnter","onMouseLeave","ModalNeedHelp","StyledImg","StyledDiv","navigate","useNavigate","logout","isSidebarOpen","LogoComponent","CreateBord","BoardsList","NeedHelp","LogOut","setIsSidebarOpen","Sidebar","ScreensPage"],"sourceRoot":""}