{"version":3,"file":"static/js/719.2de80c89.chunk.js","mappings":"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","sources":["images/burger.svg","components/Header/HeaderSwitchTheme/HeaderSwitchTheme.styled.js","components/Header/HeaderSwitchTheme/HeaderSwitchTheme.jsx","components/Header/User/User.styled.js","components/Header/User/User.jsx","assets/icons/SvgIcons.jsx","components/Modals/ModalEditUser/ModalEditUser.styled.js","components/Modals/ModalEditUser/ModalEditUser.jsx","components/shared/Buttons/LigthBtn.styled.js","components/Header/UserInfoModal/UserInfoModal.styled.js","components/Header/UserInfoModal/UserInfoModal.jsx","components/Header/HeaderUserBar/HeaderUserBar.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/ScreensPage/ScreensPage.styled.jsx","components/Sidebar/CreateBoardForm/CreateBoardForm.styled.js","components/Sidebar/CreateBoardForm/CreateBoardForm.jsx","components/Modals/ModalBord/ModalBord.styled.jsx","components/Modals/ModalBord/ModalBord.jsx","components/ScreensPage/Text/Text.styled.jsx","components/ScreensPage/Text/Text.jsx","components/ScreensPage/Filter/Filter.styled.jsx","components/ScreensPage/Filter/Filter.jsx","components/ScreensPage/AddColumnForm/AddColumnForm.styled.jsx","components/ScreensPage/AddColumnForm/AddColumnForm.jsx","components/Modals/ModalAddColumn/ModalAddColumn.styled.jsx","components/Modals/ModalAddColumn/ModalAddColumn.jsx","components/ScreensPage/AddBoardBtn/AddBoardBtn.styled.jsx","components/ScreensPage/AddBoardBtn/AddBoardBtn.jsx","components/ScreensPage/Bord/Bord.styled.js","components/ScreensPage/ColumnsList/ColumnsList.styled.jsx","components/ScreensPage/ColumnHeader/ColumnHeader.styled.js","components/ScreensPage/ColumnHeader/EditModal/EditColumn.styled.js","components/ScreensPage/RadioBrnsFilterForm/RadioButtons.jsx","components/ScreensPage/ColumnHeader/EditModal/EditColumn.jsx","components/Modals/ModalCard/ModalCard.styled.js","components/Modals/ModalCard/ModalCard.jsx","components/ScreensPage/ColumnHeader/ColumnHeader.jsx","components/ScreensPage/CardList/CardsList.styled.js","components/ScreensPage/CardList/CardItem.jsx","components/ScreensPage/CardList/CardsList.jsx","components/ScreensPage/ColumnsList/ColumnsList.jsx","components/ScreensPage/Bord/Bord.jsx","components/ScreensPage/ScreensPage.jsx","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/LogoComponent/LogoComponent.styled.js","components/Sidebar/LogoComponent/LogoComponent.jsx","components/Sidebar/CreateBord/CreateBoard.styled.js","components/Sidebar/CreateBord/CreateBord.jsx","components/Sidebar/BoardsList/BoardsList.styled.js","components/Sidebar/EditBoardForm/EditBoardForm.styled.js","components/Sidebar/EditBoardForm/EditBoardForm.jsx","components/Modals/ModalBord/EditModalBoard.jsx","components/Sidebar/BoardsList/BoardItem.jsx","components/Sidebar/BoardsList/BoardsList.jsx","components/Sidebar/NeedHelp/NeedHelp.styled.js","components/Modals/ModalNeedHelp/ModalNeedHelp.styled.js","components/Sidebar/NeedHelp/FormNeedHelp.jsx","components/Modals/ModalNeedHelp/ModalNeedHelp.jsx","components/Sidebar/NeedHelp/NeedHelp.jsx","components/Sidebar/LogOut/StyledLogOut.js","components/Sidebar/LogOut/LogOut.jsx","components/Sidebar/Sidebar.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBurger(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 16H28\",\n    stroke: \"var(--iconEyeColor)\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 8H28\",\n    stroke: \"var(--iconEyeColor)\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 24H28\",\n    stroke: \"var(--iconEyeColor)\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBurger);\nexport default __webpack_public_path__ + \"static/media/burger.42365862ef7a4ae41847d66223ea8d09.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const ThemeWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ThemeTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 68px;\n  height: 21px;\n  color: var(--themeTitleTextColor);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n`;\n\nexport const ThemeSelectWraper = styled.ul`\n  position: absolute;\n  top: 21px;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 18px 44px 18px 18px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  width: 100px;\n  height: 107px;\n  border: 1px solid var(--greenGreenBlueColor);\n  background-color: var(--themeListBgColor);\n  box-shadow: var(--boxShadow);\n  z-index: 100;\n  font-weight: 500;\n  font-size: 14px;\n`;\n\nexport const ThemeItems = styled.li`\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n  color: var(\n    --${props => (props.theme === props.children.toLowerCase() ? 'greenGreenBlueColor' : 'popupTextColor')}\n  );\n  transition: opacity var(--transition_data);\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const ThemeSelectIcon = styled.svg`\n  fill: var(--themeTitleTextColor);\n  stroke: var(--themeTitleTextColor);\n  width: 16px;\n  height: 17px;\n`;\n","import { ThemeWrapper, ThemeSelectWraper, ThemeTitle, ThemeItems,ThemeSelectIcon } from \"./HeaderSwitchTheme.styled\";\nimport { useState, useEffect } from \"react\";\nimport sprite from '../../../images/sprite.svg'\n\nconst HeaderSwitchTheme = () => {\n    const [theme, setTheme] = useState('light');\n    const [list, setList] = useState(false)\n\n     useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n     }, [theme]);\n    \n     useEffect(() => {\n        const savedTheme = localStorage.getItem('theme');\n        if (savedTheme) {\n            setTheme(savedTheme);\n        }\n    }, []);\n    \n    const handleThemeChange = (newTheme) => {\n        setTheme(newTheme);\n        localStorage.setItem('theme', newTheme)\n        setList('false')\n    }\n\n    const toogleList = () => {\n        setList(!list);\n    }\n\n    return (\n        <ThemeWrapper>\n            <ThemeTitle onClick={toogleList}>Theme\n                <ThemeSelectIcon>\n                    <use href={sprite + \"#icon-chevron-down\"} />\n            </ThemeSelectIcon>\n            </ThemeTitle>\n            {list && (\n                <ThemeSelectWraper theme={theme} onClick={toogleList}>\n                    <ThemeItems onClick={() => handleThemeChange('light')}>Light</ThemeItems>\n                    <ThemeItems onClick={() => handleThemeChange('dark')}>Dark</ThemeItems>\n                    <ThemeItems onClick={() => handleThemeChange('violet')}>Violet</ThemeItems>\n                </ThemeSelectWraper>\n            )\n            }\n            \n        </ThemeWrapper>\n)\n}\n\nexport default HeaderSwitchTheme;","import styled from 'styled-components';\n\nexport const StyledBtnProfile = styled.button`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n\nexport const StyledImgProfile = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 8%;\n\n\n`;\n\nexport const StyledProfileName = styled.p`\n  color: #161616;\n  font-family: 'Poppins-500', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { getUserData } from '../../../redux/auth/authSelectors';\nimport userFoto from 'assets/img/userWhite.png';\nimport {\n  StyledBtnProfile,\n  StyledImgProfile,\n  StyledProfileName,\n} from './User.styled';\n\nexport const User = ({ handleOpenModal }) => {\n  const { name, avatarURL } = useSelector(getUserData);\nconst editString = name => {\n    if (name) {\n      const arrFromStr = name.split(' ');\n      const res = arrFromStr.map(el => el && el[0].toUpperCase() + el.slice(1));\n\n      return res.join(' ');\n    }\n  };\n  return (\n    <>\n      <StyledBtnProfile onClick={handleOpenModal}>\n        {(avatarURL && <StyledImgProfile src={avatarURL} alt=\"Foto\" />) || (\n          <StyledImgProfile src={userFoto} alt=\"Default Foto\" />\n        )}\n\n        <StyledProfileName>{editString(name)}</StyledProfileName>\n      </StyledBtnProfile>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nexport const SpriteSVG = ({ name }) => {\n  switch (name) {\n   \n    case 'close':\n      return (\n        <svg id=\"icon-close\" viewBox=\"0 0 32 32\">\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2\"\n            d=\"M24 8l-16 16M8 8l16 16\"\n          ></path>\n        </svg>\n      );\n    \n    case 'add_photo':\n      return (\n  <svg id=\"icon-add_photo\" viewBox=\"0 0 24 24\">\n    <path\n      fill=\"var(--defaultAvatarBgColor)\"\n      d=\"M18 0H6C2.68629 0 0 2.68629 0 6V18C0 21.3137 2.68629 24 6 24H18C21.3137 24 24 21.3137 24 18V6C24 2.68629 21.3137 0 18 0Z\"\n    ></path>\n    <path\n      fill=\"none\"\n      stroke=\"#f3f3f3\"\n      strokeLinejoin=\"round\"\n      strokeLinecap=\"round\"\n      strokeMiterlimit=\"4\"\n      strokeWidth=\"2\"\n      style={{ stroke: 'var(--color2, #f3f3f3)' }}\n      d=\"M16.25 11v10.5M11 16.25h10.5\"\n    ></path>\n  </svg>\n);\n\n    \n    case 'plus':\n      return (\n        <svg id=\"icon-plus\" viewBox=\"0 0 32 32\">\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"1.9862\"\n            d=\"M16 6.988v18.024M6.988 16h18.023\"\n          ></path>\n        </svg>\n      );\n    \n    case 'eye2':\n      return (\n        <svg id=\"eye2\" viewBox=\"0 0 32 32\">\n          <g clip-path=\"url(#clip0_11829_1137)\">\n            <path\n              d=\"M17.94 17.94C16.2306 19.243 14.1491 19.9649 12 20C5 20 1 12 1 12C2.24389 9.68192 3.96914 7.65663 6.06 6.06003M9.9 4.24002C10.5883 4.0789 11.2931 3.99836 12 4.00003C19 4.00003 23 12 23 12C22.393 13.1356 21.6691 14.2048 20.84 15.19M14.12 14.12C13.8454 14.4148 13.5141 14.6512 13.1462 14.8151C12.7782 14.9791 12.3809 15.0673 11.9781 15.0744C11.5753 15.0815 11.1752 15.0074 10.8016 14.8565C10.4281 14.7056 10.0887 14.4811 9.80385 14.1962C9.51897 13.9113 9.29439 13.572 9.14351 13.1984C8.99262 12.8249 8.91853 12.4247 8.92563 12.0219C8.93274 11.6191 9.02091 11.2219 9.18488 10.8539C9.34884 10.4859 9.58525 10.1547 9.88 9.88003\"\n              stroke=\"#161616\"\n              stroke-width=\"1.8\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n            <path\n              d=\"M1 1L23 23\"\n              stroke=\"#161616\"\n              stroke-width=\"1.8\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_11829_1137\">\n              <rect width=\"24\" height=\"24\" fill=\"white\" />\n            </clipPath>\n          </defs>\n        </svg>\n      );\n  \n    case 'eye':\n      return (\n        <svg id=\"icon-eye\" viewBox=\"0 0 32 32\">\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2.4\"\n            d=\"M1.333 16s5.333-10.667 14.667-10.667 14.667 10.667 14.667 10.667-5.333 10.667-14.667 10.667-14.667-10.667-14.667-10.667z\"\n          ></path>\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2.4\"\n            d=\"M16 20c2.209 0 4-1.791 4-4s-1.791-4-4-4v0c-2.209 0-4 1.791-4 4s1.791 4 4 4v0z\"\n          ></path>\n        </svg>\n      );\n   \n    \n    case 'close-modal':\n      return (\n        <svg width=\"10\" height=\"10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5 2.083v5.834M2.083 5h5.834\" stroke=\"#161616\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      );\n    \n    case 'add-modal-photo':\n      return (\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 28 28\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <rect\n            x=\"2\"\n            y=\"2\"\n            width=\"24\"\n            height=\"24\"\n            rx=\"5\"\n            ry=\"5\"\n            fill=\"#BEDBB0\"\n          />\n          <path\n            d=\"M14.2188 9.625V18.8125\"\n            stroke=\"#161616\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M9.625 14.2188H18.8125\"\n            stroke=\"#161616\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      );\n    case 'eye1':\n      return (\n        <svg\n          id=\"eye1\"\n          viewBox=\"0 0 32 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M.75 9s3-6 8.25-6 8.25 6 8.25 6-3 6-8.25 6S.75 9 .75 9Z\"\n            stroke=\"#161616\"\n            stroke-width=\"1\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n          <path\n            d=\"M9 11.25a2.25 2.25 0 1 0 0-4.5 2.25 2.25 0 0 0 0 4.5Z\"\n            stroke=\"#161616\"\n            stroke-width=\"1\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n        </svg>\n      );\n    \n   \n\n    default:\n      return 'SVG not found';\n  }\n};\n\nSpriteSVG.propTypes = {\n  name: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.75);\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nimport { ModalOverlay } from './ModalEditUser.styled';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\nconst ModalEditUser = ({ children, onClose }) => {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    const handleEscape = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscape);\n    return () => {\n      document.body.style.overflow = 'unset';\n      window.removeEventListener('keydown', handleEscape);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <ModalOverlay\n      onClick={event => {\n        if (event.target === event.currentTarget) {\n          onClose();\n        }\n      }}\n    >\n      {children}\n    </ModalOverlay>,\n    modalRoot\n  );\n};\n\nModalEditUser.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\n\nexport default ModalEditUser;\n","import styled from 'styled-components';\n\nexport const StyledBtn = styled.button`\n  min-width: 132px;\n  padding: 14px 40px;\n  font-family: 'Poppins-600', sans-serif;\n  line-height: 18px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.28;\n  text-align: center;\n  border-radius: 8px;\n  border: 2px solid transparent;\n  outline: transparent;\n\n`;\n","import styled from 'styled-components';\nimport { StyledBtn } from 'components/shared/Buttons/LigthBtn.styled';\n\nexport const StyledModal = styled.div`\n  width: 335px;\n  padding: 24px 24px;\n  border-radius: 8px;\n  background-color: var(--popupBackground);\n  transform: translate(-50%, -50%);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-bottom: 25px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n  @media screen and (min-width: 768px) {\n    width: 400 px;\n  }\n`;\n\nexport const StyledBtnClose = styled.button`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: fixed;\n  top: 14px;\n  right: 14px;\n  svg {\n    stroke: var(--buttonColor);\n  }\n`;\n\nexport const StyledModalHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledUserFoto = styled.img`\n  width: 68px;\n  height: 68px;\n  margin-bottom: 39px;\n  text-align: center;\n  border-radius: 8%;\n\n  // @media screen and (min-width: 768px) {\n  //   margin-bottom: 66px;\n  // }\n`;\n\nexport const StyledInputAdd = styled.input`\n  display: none;\n`;\n\nexport const StyledSvgWrapper = styled.button`\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 98px;\n`;\n\nexport const StyledModalForm = styled.form`\n  width: 100%;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: relative;\n`;\n\nexport const StyledModalInput = styled.input`\n  width: 100%;\n  margin-bottom: 18px;\n  padding: 16px 24px;\n  font-family: 'Poppins-400', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n  color: var(--primaryTextColor);\n  background-color: transparent;\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  opacity: 0.8;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 14px;\n  }\n\n  &:focus {\n    outline: 1px solid var(--createButtonHover);\n  }\n`;\n\nexport const StyledBtnEdit = styled.button`\n  width: 26px;\n  height: 26px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  border-radius: 8px;\n  position: absolute;\n  top: 19px;\n  right: 12px;\n`;\n\nexport const StyledBtnSave = styled(StyledBtn)`\n  width: 100%;\n  padding: 18px 96px;\n  font-family: 'Poppins-600', sans-serif;\n  line-height: 18px;\n  color: var(--addCardButtonColor);\n  background-color: var(--addCardButtonBackground);\n  &:hover,\n  &:focus {\n    background-color: var(--btnColorHover);\n  }\n`;\nexport const EditProfileText = styled.p`\n  font-family: 'Poppins-600', sans-serif;\n  line-height: 18px;\n  color: var(--buttonColor)\n`;\nexport const StyledErrorMail = styled.p`\n  position: absolute;\n  top: calc(45% + 5px); /* Расстояние от поля ввода до сообщения об ошибке */\n  left: 0;\n  color: red;\n  font-size: 10px;\n`;\nexport const StyledErrorName = styled.p`\n  position: absolute;\n  top: calc(19% + 5px); \n  left: 0;\n  color: red;\n  font-size: 10px;\n`;\nexport const StyledError = styled.p`\n  position: absolute;\n  top: calc(71% + 5px); \n  left: 0;\n  color: red;\n  font-size: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { updateUser } from '../../../redux/auth/authOperations';\nimport { getUserData } from '../../../redux/auth/authSelectors';\nimport { SpriteSVG } from 'assets/icons/SvgIcons';\nimport userFoto from 'assets/img/userWhite.png';\nimport ModalEditUser from 'components/Modals/ModalEditUser/ModalEditUser';\nimport {\n  StyledBtnClose,\n  StyledBtnEdit,\n  StyledBtnSave,\n  StyledInputAdd,\n  StyledModal,\n  StyledModalForm,\n  StyledModalHeader,\n  StyledModalInput,\n  StyledSvgWrapper,\n  StyledUserFoto,\n  EditProfileText,\n  StyledError,\n  StyledErrorMail,\n  StyledErrorName,\n} from './UserInfoModal.styled';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  userName: Yup.string().min(5, 'Min 5'),\n  userEmail: Yup.string().email('Invalid email'),\n  userPassword: Yup.string().min(8, 'Min 8'),\n});\n\nexport const UserInfoModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const { name, email, avatarURL } = useSelector(getUserData);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [previewImage, setPreviewImage] = useState(null);\n\n  const handleFileChange = file => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreviewImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n\n    setSelectedFile(file);\n  };\n\n  const onFileChange = event => {\n    const file = event.target.files[0];\n    handleFileChange(file);\n  };\n\n  // const onUpload = async event => {\n  //   if (event.target.type === 'file') {\n  //     const file = event.target.files[0];\n  //     handleFileChange(file);\n  //     return;\n  //   }\n\n  //   event.preventDefault();\n\n  //   const formData = new FormData();\n  //   formData.append('avatar', selectedFile);\n  //   formData.append('username', changedName || username);\n  //   formData.append('email', email);\n  //   formData.append('password', changedPassword || '');\n\n  //   dispatch(updateUser(formData))\n  //     .unwrap()\n  //     .then(() => {\n  //       onClose();\n  //     })\n  //     .catch(error => {\n  //       console.error('Error updating user', error.message);\n  //     });\n  // };\n\n  const formik = useFormik({\n    initialValues: { userName: name, userEmail: email, userPassword: '' },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        const formData = new FormData();\n        formData.append('avatar', selectedFile);\n        formData.append('username', values.userName);\n        formData.append('email', values.userEmail);\n        formData.append('password', values.userPassword);\n        dispatch(updateUser(formData));\n        onClose(); // Закрываем модальное окно после успешной отправки данных\n      } catch (error) {\n        console.error('Error updating user', error.message);\n      }\n    },\n  });\n\n  return (\n    <ModalEditUser onClose={onClose}>\n      <StyledModal>\n        <StyledBtnClose onClick={onClose}>\n          <SpriteSVG name=\"close\" />\n        </StyledBtnClose>\n        <EditProfileText>Edit profile</EditProfileText>\n        <StyledModalHeader>\n          <StyledUserFoto\n            src={previewImage || avatarURL || userFoto}\n            alt={previewImage ? 'Preview' : avatarURL ? 'Foto' : 'Default foto'}\n          />\n\n          <StyledInputAdd type=\"file\" onChange={onFileChange} />\n          <StyledSvgWrapper\n            onClick={() => document.querySelector('input[type=file]').click()}\n          >\n            <SpriteSVG name=\"add-modal-photo\" />\n          </StyledSvgWrapper>\n        </StyledModalHeader>\n        <StyledModalForm onSubmit={formik.handleSubmit}>\n          <StyledModalInput\n            name=\"userName\"\n            value={formik.values.userName || name}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.userName && formik.touched.userName && (\n            <StyledErrorName>{formik.errors.userName}</StyledErrorName>\n          )}\n          <StyledModalInput\n            name=\"userEmail\"\n            value={formik.values.userEmail || email}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.userEmail && formik.touched.userEmail && (\n            <StyledErrorMail>{formik.errors.userEmail}</StyledErrorMail>\n          )}\n          <div style={{ position: 'relative' }}>\n            <StyledModalInput\n              name=\"userPassword\"\n              placeholder=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              value={formik.values.userPassword || ''}\n              onChange={formik.handleChange}\n            />\n            <StyledBtnEdit\n              type=\"button\"\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              <SpriteSVG name=\"eye1\" />\n            </StyledBtnEdit>\n          </div>\n          {formik.errors.userPassword && formik.touched.userPassword && (\n            <StyledError>{formik.errors.userPassword}</StyledError>\n          )}\n          <StyledBtnSave type=\"submit\" onClick={formik.handleSubmit}>\n            Send\n          </StyledBtnSave>\n        </StyledModalForm>\n      </StyledModal>\n    </ModalEditUser>\n  );\n};\n\nUserInfoModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { User } from '../User/User';\nimport { UserInfoModal } from '../UserInfoModal/UserInfoModal';\n\nconst HeaderUserBar = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <div>\n      <User handleOpenModal={handleOpenModal} />\n\n      {isModalOpen && <UserInfoModal onClose={handleCloseModal} />}\n    </div>\n  );\n};\n\nexport default HeaderUserBar;\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 60px;\n  margin-left: auto;\n  margin-right: auto;\n  gap: 14px;\n\n  //colors\n  background: var(--headerBgColor);\n  //padding\n  padding: 20px;\n  gap: 14px;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    height: 68px;\n  }\n  @media screen and (min-width: 1439px) {\n    width: calc(-260px + 100vw);\n    left: 260px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport HeaderSwitchTheme from './HeaderSwitchTheme/HeaderSwitchTheme';\nimport HeaderUserBar from './HeaderUserBar/HeaderUserBar';\nimport { HeaderWrapper } from './Header.styled';\nimport { ReactComponent as BurgerIcon } from '../../images/burger.svg';\n\nconst Header = ({ toggleSidebar }) => {\n  const burgerIconStyles = {\n    cursor: 'pointer',\n    position: 'absolute',\n    left: '32px',\n  };\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  if (windowWidth >= 1439) {\n    Object.assign(burgerIconStyles, {\n      display: 'none',\n    });\n  }\n\n  return (\n    <HeaderWrapper>\n      <BurgerIcon onClick={toggleSidebar} style={burgerIconStyles} />\n\n      <HeaderSwitchTheme />\n      <HeaderUserBar />\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: absolute;\n  top: 60px;\n  left: 0;\n  padding: 14px 20px 60px;\n  overflow-y: auto;\n  z-index: 0;\n  width: 100%;\n  height: calc(-60px + 100vh);\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: calc(-60px + 100vh);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 26px 32px 96px;\n    width: calc(-260px + 100vw);\n    left: 260px;\n\n    top: 68px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 10px 20px 36px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const Header = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 24px 0;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background: var(--popupBackground);\n  margin-bottom: 24px;\n  padding: 0 18px;\n  position: relative;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsHeaderIcons = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  gap: 8px;\n  margin: 0 0 24px 0;\n  padding: 0;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--iconCardColor);\n    fill: transparent;\n  }\n\n  .icons-field {\n    display: none;\n  }\n\n  input:checked + svg {\n    stroke: var(--primaryTextColor);\n  }\n`;\n\nexport const HeaderBackground = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const BackgroundContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 4px;\n  flex-wrap: wrap;\n  margin: 0 0 40px 0;\n  stroke-width: 1px;\n  stroke: var(--defaultAvatarBgColor);\n  width: 252px;\n\n  .background-field {\n    display: none;\n  }\n\n  img {\n    cursor: pointer;\n  }\n\n  input:checked + img {\n    border: 2px solid var(--defaultAvatarBgColor);\n    border-radius: 6px;\n  }\n`;\n\nexport const BoardCreateBtn = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  width: 100%;\n  height: 49px;\n  margin-left: auto;\n  margin-right: auto;\n  background: var(--addCardButtonBackground);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--addCardButtonColor);\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1px;\n    stroke: var(--addPlusIconColor);\n  }\n\n  &:hover {\n    background-color: var(--createButtonHover);\n  }\n`;\n\nexport const ModalForm = styled(Form)`\n  padding: 24px;\n  position: relative;\n  background: var(--popupBackground);\n  border: 1px solid var(--addCardButtonBackground);\n  border-radius: 8px;\n`;\n\nexport const SvgCloseBtn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  right: 14px;\n  top: 14px;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--buttonColor);\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const SubmitSvgWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  background-color: var(--addCardButtonColor);\n  border-radius: 6px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  position: absolute;\n  top: 50px;\n  left: 24px;\n  font-size: 10px;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport icons from '../../../../src/images/sprite.svg';\nimport Image0 from '../../../../src/images/background/00.png';\nimport Image1 from '../../../../src/images/background/01.png';\nimport Image2 from '../../../../src/images/background/02.png';\nimport Image3 from '../../../../src/images/background/03.png';\nimport Image4 from '../../../../src/images/background/04.png';\nimport Image5 from '../../../../src/images/background/05.png';\nimport Image6 from '../../../../src/images/background/06.png';\nimport Image7 from '../../../../src/images/background/07.png';\nimport Image8 from '../../../../src/images/background/08.png';\nimport Image9 from '../../../../src/images/background/09.png';\nimport Image10 from '../../../../src/images/background/10.png';\nimport Image11 from '../../../../src/images/background/11.png';\nimport Image12 from '../../../../src/images/background/12.png';\nimport Image13 from '../../../../src/images/background/13.png';\nimport Image14 from '../../../../src/images/background/14.png';\nimport Image15 from '../../../../src/images/background/15.png';\n\nimport {\n  Header,\n  Input,\n  IconsHeaderIcons,\n  IconsContainer,\n  HeaderBackground,\n  BackgroundContainer,\n  BoardCreateBtn,\n  ModalForm,\n  SvgCloseBtn,\n  Img,\n  SubmitSvgWrapper,\n  Error,\n} from './CreateBoardForm.styled';\nimport { getBoard } from '../../../redux/auth/authSelectors';\nimport { createBoard } from '../../../redux/auth/authOperations';\n\nconst BoardFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short').required('This field is required!'),\n});\n\nconst CreateBoardForm = ({ closeModalWindow }) => {\n  const boards = useSelector(getBoard);\n  const dispatch = useDispatch();\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n        icnboard: 'icon-project',\n        background: '0',\n      }}\n      validationSchema={BoardFormSchema}\n      onSubmit={(values, actions) => {\n        if (boards && boards.some(board => board.title === values.title)) {\n          return toast.warning('The title already exists');\n        }\n\n        dispatch(createBoard(values))\n          .unwrap()\n          .then()\n          .catch(error => error.message);\n        actions.resetForm();\n        closeModalWindow();\n      }}\n    >\n      <ModalForm>\n        <Header>New board</Header>\n        <SvgCloseBtn type=\"button\" onClick={closeModalWindow}>\n          <svg>\n            <use href={`${icons}#icon-close`}></use>\n          </svg>\n        </SvgCloseBtn>\n\n        <label htmlFor=\"title\"></label>\n        <Error name=\"title\" component=\"div\" />\n        <Input name=\"title\" placeholder=\"Title\" />\n\n        <IconsHeaderIcons>Icons</IconsHeaderIcons>\n        <IconsContainer>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-project\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-project`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-star\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-star`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-loading\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-loading`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-puzzle\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-puzzle`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-container\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-container`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-lightning\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-lightning`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-colors\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-colors`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-hexagon\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-hexagon`}></use>\n            </svg>\n          </label>\n        </IconsContainer>\n\n        <HeaderBackground>Background</HeaderBackground>\n        <BackgroundContainer>\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"0\"\n            />\n            <Img src={Image0} alt=\"background 0\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"7\"\n            />\n            <Img src={Image7} alt=\"background 7\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"2\"\n            />\n            <Img src={Image2} alt=\"background 2\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"1\"\n            />\n            <Img src={Image1} alt=\"background 1\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"8\"\n            />\n            <Img src={Image8} alt=\"background 8\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"3\"\n            />\n            <Img src={Image3} alt=\"background 3\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"4\"\n            />\n            <Img src={Image4} alt=\"background 4\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"9\"\n            />\n            <Img src={Image9} alt=\"background 9\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"5\"\n            />\n            <Img src={Image5} alt=\"background 5\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"10\"\n            />\n            <Img src={Image10} alt=\"background 10\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"6\"\n            />\n            <Img src={Image6} alt=\"background 6\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"11\"\n            />\n            <Img src={Image11} alt=\"background 11\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"12\"\n            />\n            <Img src={Image12} alt=\"background 12\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"13\"\n            />\n            <Img src={Image13} alt=\"background 13\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"14\"\n            />\n            <Img src={Image14} alt=\"background 14\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"15\"\n            />\n            <Img src={Image15} alt=\"background 15\" />\n          </label>\n        </BackgroundContainer>\n\n        <BoardCreateBtn type=\"submit\">\n          <SubmitSvgWrapper>\n            <svg width=\"28px\" height=\"28px\">\n              <use href={`${icons}#icon-plus`}></use>\n            </svg>\n          </SubmitSvgWrapper>\n          Create\n        </BoardCreateBtn>\n        <ToastContainer\n          style={{ width: '280px' }}\n          position=\"top-center\"\n          autoClose={1500}\n          transition={Slide}\n          closeOnClick={true}\n          pauseOnHover={false}\n          draggable={false}\n          limit={1}\n          theme=\"colored\"\n        />\n      </ModalForm>\n    </Formik>\n  );\n};\n\nexport default CreateBoardForm;\n","import styled from 'styled-components';\nimport Modal from 'react-modal';\n\nexport const ModalCustom = styled(Modal)`\n  position: relative;\n  border: 1px solid var(--modalBorderColor);\n  background-color: var(--cardItem);\n  border-radius: 8px;\n  width: 335px;\n  height: 433px;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  padding: 0%;\n  z-index: 1000;\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;\n","import Modal from 'react-modal';\nimport CreateBoardForm from '../../../../src/components/Sidebar/CreateBoardForm/CreateBoardForm';\nimport { ModalCustom } from './ModalBord.styled';\n\nModal.setAppElement('#root');\n\nconst ModalBord = ({ isOpen, closeModal }) => {\n  return (\n    <ModalCustom\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Modal for Board\"\n    >\n      <CreateBoardForm closeModalWindow={closeModal} />\n    </ModalCustom>\n  );\n};\n\nexport default ModalBord;\n","import styled from 'styled-components';\n\nexport const MainText = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  width: 335px;\n  position: absolute;\n\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  text-align: center;\n  color: var(--secondaryTextColor);\n\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 1.28571;\n    width: 486px;\n  }\n  @media screen and (min-width: 1440px) {\n    left: auto;\n  }\n`;\n\nexport const ButtonCreate = styled.button`\n  color: var(--needHelpLink);\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n  display: inline-block;\n  padding: 0 2px;\n`;\n","import { useState } from 'react';\nimport ModalBord from '../../../../src/components/Modals/ModalBord/ModalBord';\nimport { MainText, ButtonCreate } from './Text.styled';\n\nconst Text = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <MainText>\n        Before starting your project, it is essential\n        <ButtonCreate type=\"button\" onClick={openModal}>\n          to create a board\n        </ButtonCreate>\n        to visualize and track all the necessary tasks and milestones. This\n        board serves as a powerful tool to organize the workflow and ensure\n        effective collaboration among team members.\n      </MainText>\n      <ModalBord\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={closeModal}\n      />\n    </>\n  );\n};\n\nexport default Text;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 8px;\n  width: 64px;\n  height: 20px;\n  cursor: pointer;\n\n  position: absolute;\n  top: 14px;\n  right: 20px;\n  transition: 250ms opacity ease-in-out;\n\n  &:hover {\n    opacity: 0.7;\n  }\n\n  @media screen and (min-width: 768px) {\n    top: 20px;\n    right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    top: 14px;\n    right: 24px;\n  }\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--themeTitleTextColor);\n  }\n`;\n\nexport const FilterText = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--themeTitleTextColor);\n`;\n\nexport const WindowContainer = styled.div`\n  position: absolute;\n  right: 20px;\n  top: 40px;\n  background-color: var(--popupBackground);\n\n  border: 1px solid var(--modalGorizontalBorderColor);\n  border-radius: 8px;\n  width: 300px;\n  height: 234px;\n  padding: 24px;\n\n  z-index: 999;\n`;\n\nexport const FilerModalBtn = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--primaryTextColor);\n  }\n`;\n\nexport const FilterFormHeading = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  position: relative;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 41px;\n    right: 0;\n    width: 100%;\n    height: 1px;\n    background-color: var(--modalGorizontalBorderColor);\n    margin-bottom: 14px;\n  }\n`;\n","import { useState } from 'react';\n// import RadioBtnsFilterForm from '../../../../src/components/ScreensPage/RadioBrnsFilterForm/RadioBrnsFilterForm';\n\nimport icons from '../../../../src/images/sprite.svg';\nimport {\n  Container,\n  FilterText,\n  WindowContainer,\n  FilerModalBtn,\n  FilterFormHeading,\n} from './Filter.styled';\n\nconst Filter = ({ onChangeFilter, setFilterByPriority }) => {\n  const [window, setWindow] = useState(false);\n\n  const toggleWindow = () => {\n    setWindow(!window);\n  };\n\n  const closeFilterModal = () => {\n    setWindow(false);\n  };\n  return (\n    <>\n      <Container>\n        <svg width=\"16px\" height=\"16px\" fill=\"transparent\">\n          <use href={`${icons}#icon-filter`}></use>\n        </svg>\n        <FilterText onClick={toggleWindow}>Filters</FilterText>\n      </Container>\n      {window && (\n        <WindowContainer>\n          <FilerModalBtn type=\"button\" onClick={closeFilterModal}>\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-close`}></use>\n            </svg>\n          </FilerModalBtn>\n          <FilterFormHeading>Filters</FilterFormHeading>\n          {/* <RadioBtnsFilterForm\n            onSelect={onChangeFilter}\n            setFilterByPriority={setFilterByPriority}\n          /> */}\n        </WindowContainer>\n      )}\n    </>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const Header = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 24px 0;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  // box-shadow: 0 4px 16px 0 var(--themeTitleTextColor);\n  background: var(--popupBackground);\n  opacity: 0.4;\n  margin-bottom: 24px;\n  padding: 0 18px;\n  position: relative;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const BoardCreateBtn = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  width: 100%;\n  height: 49px;\n  margin-left: auto;\n  margin-right: auto;\n  background: var(--addCardButtonBackground);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--addCardButtonColor);\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1px;\n    stroke: var(--addPlusIconColor);\n  }\n\n  &:hover {\n    background-color: var(--createButtonHover);\n  }\n`;\n\nexport const ModalForm = styled(Form)`\n  padding: 24px;\n  height: 100%;\n  position: relative;\n  background: var(--popupBackground);\n  border: 1px solid var(--addCardButtonBackground);\n  border-radius: 8px;\n`;\n\nexport const SvgCloseBtn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  right: 14px;\n  top: 14px;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--buttonColor);\n    width: 18px;\n    height: 18px;\n  }\n`;\nexport const SubmitSvgWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  background-color: var(--addCardButtonColor);\n  border-radius: 6px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  position: absolute;\n  top: 50px;\n  left: 24px;\n  font-size: 10px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getColumn } from '../../../../src/redux/task/taskSelectors';\nimport { addColumn } from '../../../../src/redux/task/taskOperations';\nimport icons from '../../../../src/images/sprite.svg';\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getBoard } from '../../../redux/auth/authSelectors';\n\nimport {\n  Input,\n  Header,\n  SvgCloseBtn,\n  BoardCreateBtn,\n  Error,\n  SubmitSvgWrapper,\n  ModalForm,\n} from './AddColumnForm.styled';\n\nconst AddColumnFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short').required('This field is required!'),\n});\n\nconst AddColumnForm = ({ closeModalWindow }) => {\n  const columns = useSelector(getColumn);\n  const dispatch = useDispatch();\n  const boards = useSelector(getBoard);\n\n  const activeBoard = boards.find(board => board.isActive);\n  const idBoard = activeBoard._id;\n\n  return (\n    <Formik\n      initialValues={{\n        title: '',\n      }}\n      validationSchema={AddColumnFormSchema}\n      onSubmit={(values, actions) => {\n        actions.resetForm();\n        closeModalWindow();\n        if (columns && columns.some(column => column.title === values.title)) {\n          return toast.warning('The title already exists');\n        }\n\n        dispatch(addColumn({ values, idBoard }))\n          .unwrap()\n          .then(() =>\n            toast.success(`${values.title} has been successfully added`)\n          )\n          .catch(error => error.message);\n      }}\n    >\n      <ModalForm>\n        <Header>Add Column</Header>\n        <SvgCloseBtn type=\"button\" onClick={closeModalWindow}>\n          <svg>\n            <use href={`${icons}#icon-close`}></use>\n          </svg>\n        </SvgCloseBtn>\n\n        <label htmlFor=\"title\"></label>\n        <Error name=\"title\" component=\"div\" />\n        <Input name=\"title\" placeholder=\"Title\" />\n\n        <BoardCreateBtn type=\"submit\">\n          <SubmitSvgWrapper>\n            <svg width=\"28px\" height=\"28px\">\n              <use href={`${icons}#icon-plus`}></use>\n            </svg>\n          </SubmitSvgWrapper>\n          Add\n        </BoardCreateBtn>\n        <ToastContainer\n          style={{ width: '280px' }}\n          position=\"top-center\"\n          autoClose={1500}\n          transition={Slide}\n          closeOnClick={true}\n          pauseOnHover={false}\n          draggable={false}\n          limit={1}\n          theme=\"colored\"\n        />\n      </ModalForm>\n    </Formik>\n  );\n};\n\nexport default AddColumnForm;\n","import styled from 'styled-components';\n\nimport Modal from 'react-modal';\n\nexport const ModalCustom = styled(Modal)`\n  position: relative;\n\n  border: 1px solid var(--modalBorderColor);\n\n  background-color: var(--cardItem);\n\n  border-radius: 8px;\n\n  width: 350px;\n\n  height: 221px;\n\n  top: 50%;\n\n  left: 50%;\n\n  right: auto;\n\n  bottom: auto;\n\n  margin-right: -50%;\n\n  transform: translate(-50%, -50%);\n\n  padding: 0%;\n\n  z-index: 1000;\n`;\n","import Modal from 'react-modal';\n\nimport AddColumnForm from '../../../../src/components/ScreensPage/AddColumnForm/AddColumnForm';\n\nimport { ModalCustom } from './ModalAddColumn.styled';\n\nModal.setAppElement('#root');\n\nconst ModalAddColumn = ({ isOpen, closeModal }) => {\n  return (\n    <ModalCustom\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Modal for Columns\"\n    >\n      <AddColumnForm closeModalWindow={closeModal} />\n    </ModalCustom>\n  );\n};\n\nexport default ModalAddColumn;\n","import styled from 'styled-components';\n\nexport const BoardName = styled.h2`\n  /* margin-bottom: 39px; */\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: #fff;\n  position: absolute;\n  top: 14px;\n  left: 20px;\n  @media screen and (min-width: 768px) {\n    top: 26px;\n    left: 32px;\n  }\n  @media screen and (min-width: 1440px) {\n    top: 10px;\n    left: 24px;\n  }\n`;\n\nexport const ColumnAddBtn = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  background-color: #121212;\n  cursor: pointer;\n  border-radius: 8px;\n  padding: 14px 79px;\n  max-width: 335px;\n  height: 56px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: #fff;\n`;\n\nexport const SvgDiv = styled.div`\n  width: 28px;\n  height: 28px;\n  border-radius: 6px;\n  background-color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  & svg {\n    stroke-width: 1px;\n    stroke: #121212;\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import { useState } from 'react';\n\nimport icons from '../../../../src/images/sprite.svg';\nimport ModalAddColumn from '../../../../src/components/Modals/ModalAddColumn/ModalAddColumn';\n\nimport { ColumnAddBtn, SvgDiv } from './AddBoardBtn.styled';\n\nexport const AddBoardBtn = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  return (\n    <>\n      <ColumnAddBtn type=\"button\" onClick={openModal}>\n        <SvgDiv>\n          <svg>\n            <use href={`${icons}#icon-plus`}></use>\n          </svg>\n        </SvgDiv>\n        Add another column\n      </ColumnAddBtn>\n\n      <ModalAddColumn\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={() => setIsOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default AddBoardBtn;\n","import styled from 'styled-components';\n\nexport const ContainerMain = styled.div`\n  overflow: auto;\n  background-position-y: bottom;\n  background-position-x: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n\n  @media screen and (min-width: 320px) {\n    background-image: ${props =>\n      props.background !== '' &&\n      `url(\"${props.background.background_mobile_jpeg_1x}\")`};\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== '' &&\n        `url(\"${props.background.background_mobile_jpeg_2x}\")`};\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    background-image: ${props =>\n      props.background !== '' &&\n      `url(\"${props.background.background_mobile_jpeg_2x}\")`};\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== '' &&\n        `url(\"${props.background.background_tablet_jpeg_2x}\")`};\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: calc(100vw - 260px);\n    background-image: ${props =>\n      props.background !== '' &&\n      `url(\"${props.background.background_decktop_jpeg_1x}\")`};\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: ${props =>\n        props.background !== '' &&\n        `url(\"${props.background.background_decktop_jpeg_2x}\")`};\n    }\n  }\n\n  padding: 14px 20px;\n  display: flex;\n  flex-direction: row;\n  gap: 18px;\n\n  position: absolute;\n  top: 60px;\n  left: 0;\n  padding: 74px 20px 60px;\n  overflow-y: scroll;\n  z-index: 0;\n  width: 100%;\n  height: calc(-60px + 100vh);\n\n  @media screen and (min-width: 375px) {\n    width: 100%;\n    height: calc(-60px + 100vh);\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 80px 32px 96px;\n    width: 100%;\n    top: 68px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    padding: 48px 24px 36px;\n    width: calc(-260px + 100vw);\n\n    left: 260px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const ColumnItem = styled.ul`\n  display: flex;\n  gap: 18px;\n  flex-direction: row;\n`;\n","import styled from \"styled-components\";\n\nexport const ColumnHeaderWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content:space-between;\n    padding: 20px;\n    width: 334px;\n    height: 56px;\n    border-radius: 8px;\n    background-color: var(--headerBgColor);\n    color: var(--primaryTextColor);\n`\n\nexport const ColumnHeaderText = styled.p`\n    left: 20px;\n    font-family: \"Poppins\", sans-serif;\n    font-weight: 500;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    color: var(--primaryTextColor);\n`\nexport const ColumnHeaderButton = styled.button`\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n`\n\nexport const ColumnHeaderIcon = styled.svg`\n    width: 16px;\n     height: 16px;\n     fill: transparent;\n     stroke: var(--iconColor);\n`\n\n","import styled from \"styled-components\"\n\n\n\nexport const EditCardWrapper = styled.div`\n\n\n`\nexport const EditCardTitle = styled.p`\n    font-weight: 500;\n    font-size: 18px;\n    letter-spacing: -0.02em;\n    color: var(--primaryTextColor);\n    margin-bottom: 24px;\n`\n\nexport const EditCardInput = styled.input`\n    margin-bottom: 14px;\n    border: 1px solid var(--activeBorder);\n    border-radius: 8px;\n    width: 302px;\n    height: 49px;\n    box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n    background: transparent;\n    color: var(--primaryTextColor);\n    padding-top: 14px;\n    padding-bottom: 14px;\n    padding-left: 18px;\n`\n\nexport const EditCardTextArea = styled.textarea`\n    border: 1px solid var(--activeBorder);\n    border-radius: 8px;\n    width: 302px;\n    height: 154px;\n    resize: none;\n    margin-bottom: 24px;\n    box-shadow: 0 4px 16px 0 rgba(22, 22, 22, 0.08);\n    background: transparent;\n    color: var(--primaryTextColor);\n    padding-top: 14px;\n    padding-left: 18px;\n`\n\nexport const EditCardLabel = styled.p`\n    font-weight: 400;\n    font-size: 12px;\n    letter-spacing: -0.02em;\n    color: var(--popupColor);\n    margin-bottom: 4px;\n`\n\nexport const EditCardButton = styled.button`\n    border-radius: 8px;\n    border-color: transparent;\n    width: 302px;\n    height: 49px;\n    background: var(--addCardButtonBackground);\n    color: var(--addCardButtonColor); \n    display: flex;\n    flex-direction: row;\n    gap: 8px;\n    align-items: center;\n    justify-content: center;\n\n    svg {\n    stroke-width: 1px;\n    stroke: var(--addPlusIconColor);\n  }\n`","import {\n  Radio,\n  FormControlLabel,\n  RadioGroup,\n} from '@mui/material';\nimport { useState } from 'react';\n\n\n\nexport const RadioButtons = () => {\n\n    const buttonColor = [\n  { value: 'Without priority', color: 'var(--calendarWithoutColor)' },\n  { value: 'Low', color: '#8FA1D0' },\n  { value: 'Medium', color: '#E09CB5' },\n  { value: 'High', color: '#BEDBB0' },\n    ];\n    \n     const [selectedValue, setSelectedValue] = useState('');\n // const removeFilters = () => {\n //   setSelectedValue('');\n // };\n\n  const primaryTextColor = `var(--primaryTextColor)`;\n\n  const onRadioChange = event => {\n    const { value } = event.target;\n    console.log(value);\n    setSelectedValue(value);\n  };\n\n  return (\n        <RadioGroup row value={selectedValue}\n          onChange={onRadioChange}>\n          {buttonColor.map((button) => (\n            <FormControlLabel\n            key={button.value}\n            sx={{\n              color: 'red',\n              marginBottom: '8px',\n              '& .Mui-checked.MuiRadio-root': {\n                color: button.color,\n              },\n              '& .MuiSvgIcon-root': {\n                fontSize: 14,\n              },\n              '& .MuiFormControlLabel-label': {\n                fontSize: 12,\n                letterSpacing: '0.02em',\n              },\n              '& .MuiButtonBase-root.MuiRadio-root': {\n                color: button.color,\n                padding: 0,\n                backgroundColor:\n                  selectedValue === button.value\n                    ? 'transparent'\n                    : button.color,\n              },\n              '& .MuiTypography-root': {\n                marginLeft: 1,\n                color:\n                  selectedValue === button.value\n                    ? primaryTextColor\n                    : 'var(--popupTextColor)',\n              },\n            }}\n            value={button.value}\n            control={<Radio />}\n            onChange={onRadioChange}\n                  \n              \n          />\n           \n          ))}\n    </RadioGroup>\n    )\n}\n","//import { useSelector, useDispatch } from 'react-redux';\nimport React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\n//import { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {\n    EditCardWrapper,\n    EditCardTitle,\n    EditCardInput,\n    EditCardTextArea,\n    EditCardLabel,\n    EditCardButton,\n    //EditCardSvg\n} from \"./EditColumn.styled\"\nimport { SubmitSvgWrapper, SvgCloseBtn } from 'components/ScreensPage/AddColumnForm/AddColumnForm.styled';\nimport icons from '../../../../images/sprite.svg'\nimport { RadioButtons } from 'components/ScreensPage/RadioBrnsFilterForm/RadioButtons';\n\n\nconst EditColumn = ({ closeModalWindow }) => {\n  \n   return (\n    <EditCardWrapper>\n      <EditCardTitle>My Form</EditCardTitle>\n      <Formik\n        initialValues={{\n                   taskName: \"\",\n                   message: \"\"\n               }}\n        validationSchema={Yup.object({\n          firstName: Yup.string().required(\"Required\"),\n          lastName: Yup.string().required(\"Required\"),\n          email: Yup.string().email(\"Invalid email address\").required(\"Required\")\n        })}\n        onSubmit={(values, { setSubmitting }) => {\n          setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n          }, 400);\n        }}\n      >\n        <Form>\n            <SvgCloseBtn type=\"button\" onClick={closeModalWindow}>\n            <svg>\n                <use href={`${icons}#icon-close`}></use>\n            </svg>\n        </SvgCloseBtn>\n          <div>\n            <Field as={EditCardInput }type=\"text\" name=\"taskName\" placeholder=\"Title\"/>\n            <ErrorMessage name=\"taskName\" />\n          </div>\n          <div>\n            <Field as={EditCardTextArea} name=\"message\" placeholder=\"Description\"/>\n            <ErrorMessage name=\"message\" />\n                   </div>\n                   <EditCardLabel>Label color</EditCardLabel>\n                   <div style={{ marginLeft: '10px' , marginBottom: '14px'}}>\n                       <RadioButtons />\n                   </div>\n                   <EditCardLabel>Deadline</EditCardLabel>\n            \n                   <EditCardButton type=\"submit\">\n                      <SubmitSvgWrapper>\n                        <svg width=\"28px\" height=\"28px\">\n                        <use href={`${icons}#icon-plus`}></use>\n                        </svg>\n                      </SubmitSvgWrapper>\n                       Submit\n                       </EditCardButton>\n        </Form>\n      </Formik>\n    </EditCardWrapper>\n  );\n};\n\nexport default EditColumn;\n","import styled from 'styled-components';\nimport Modal from 'react-modal';\n\nexport const ModalCustom = styled(Modal)`\n  position: relative;\n  border: 1px solid var(--modalGorizontalBorderColor);\n  border-radius: 8px;\n  background-color: var(--cardItem);\n  border-radius: 8px;\n  width: 335px;\n  top: 50%;\n  left: 50%;\n  right: auto;\n  bottom: auto;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  padding: 24px;\n  z-index: 1000;\n\n  @media screen and (min-width: 768px) {\n    width: 350px;\n  }\n`;","import Modal from 'react-modal';\nimport EditColumn from 'components/ScreensPage/ColumnHeader/EditModal/EditColumn';\nimport { ModalCustom } from './ModalCard.styled';\n\nModal.setAppElement('#root');\n\nconst ModalCard = ({ isOpen, closeModal, id }) => {\n  return (\n    <ModalCustom\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Modal for Edit Board\"\n    >\n      <EditColumn id={id} closeModalWindow={closeModal} />\n    </ModalCustom>\n  );\n};\n\nexport default ModalCard;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {\n  ColumnHeaderWrapper,\n  ColumnHeaderText,\n  ColumnHeaderButton,\n  ColumnHeaderIcon,\n} from './ColumnHeader.styled';\nimport icons from '../../../images/sprite.svg';\nimport ModalCard from 'components/Modals/ModalCard/ModalCard';\nimport { deleteColumn } from '../../../redux/task/taskOperations';\n\nexport const ColumnHeader = ({ id, title }) => {\n  const [isModalOpen, SetIsModalOpen] = useState(false);\n\n  const onClick = () => {\n    SetIsModalOpen(!isModalOpen);\n  };\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ColumnHeaderWrapper>\n        <ColumnHeaderText>{title}</ColumnHeaderText>\n        <div>\n          <ColumnHeaderButton onClick={onClick}>\n            <ColumnHeaderIcon>\n              <use href={`${icons}#icon-pencil`}></use>\n            </ColumnHeaderIcon>\n          </ColumnHeaderButton>\n          <ColumnHeaderButton onClick={() => dispatch(deleteColumn(id))}>\n            <ColumnHeaderIcon>\n              <use href={`${icons}#icon-trash`}></use>\n            </ColumnHeaderIcon>\n          </ColumnHeaderButton>\n        </div>\n      </ColumnHeaderWrapper>\n      <ModalCard\n        isOpen={isModalOpen}\n        openModal={onClick}\n        closeModal={() => SetIsModalOpen(false)}\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CardsContainer = styled.div`\n  width: 350px;\n  height: 486px;\n  overflow-y: auto;\n  margin-bottom: 14px;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    height: 648px;\n  }\n`;\n\nexport const ItemCardContainer = styled.div`\n  width: 334px;\n  height: 154px;\n  border-radius: 8px;\n  padding: 14px 20px;\n  margin-bottom: 8px;\n  background: var(--cardItem);\n  cursor: pointer;\n`;\n\nexport const Title = styled.p`\n  font-weight: 600;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  height: 21px;\n  margin-bottom: 8px;\n`;\n\nexport const Description = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.33333;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  height: 38px;\n  margin-bottom: 14px;\n`;\n\nexport const Line = styled.div`\n  width: 290px;\n  height: 1px;\n  background: var(--primaryTextColor);\n  opacity: 0.1;\n  margin-bottom: 14px;\n`;\n\nexport const DetailsContainer = styled.div`\n  display: flex;\n  gap: 14px;\n  align-items: end;\n`;\n\nexport const DetailName = styled.p`\n  font-weight: 400;\n  font-size: 8px;\n  letter-spacing: -0.02em;\n  color: var(--secondaryTextColor);\n  height: 12px;\n  margin-bottom: 4px;\n`;\n\nexport const DetailText = styled.p`\n  font-weight: 400;\n  font-size: 10px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  height: 15px;\n`;\n\nexport const DivFlex = styled.div`\n  display: flex;\n  gap: 4px;\n`;\n\nexport const DetailCircle = styled.div`\n  width: 12px;\n  height: 12px;\n  border-radius: 100%;\n  background-color: ${({ priority }) => {\n    if (priority === 'Low') return '#8FA1D0';\n    if (priority === 'Medium') return '#E09CB5';\n    if (priority === 'High') return '#BEDBB0';\n    return '#535353';\n  }};\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  margin-left: auto;\n`;\n\nexport const Button = styled.button`\n  width: 16px;\n  height: 16px;\n  padding: 0;\n  background: none;\n  border: none;\n  fill: none;\n  stroke: var(--buttonColor);\n  stroke-opacity: 0.6;\n  cursor: pointer;\n\n  &.bell {\n    margin-right: 4px;\n    stroke: var(--greenGreenBlueColor);\n  }\n`;\n\nexport const CurrentLine = styled.div`\n  position: relative;\n  width: 4px;\n  height: 154px;\n  border-radius: 4px 0 0 4px;\n  left: -20px;\n  top: -141px;\n  background-color: ${({ priority }) => {\n    if (priority === 'Low') return '#8FA1D0';\n    if (priority === 'Medium') return '#E09CB5';\n    if (priority === 'High') return '#BEDBB0';\n    return '#535353';\n  }};\n`;\n","// import { useDispatch } from 'react-redux';\n// import { useState } from 'react';\n\nimport {\n  ItemCardContainer,\n  Title,\n  Description,\n  Line,\n  ButtonContainer,\n  Button,\n  DetailsContainer,\n  DetailName,\n  DetailText,\n  DetailCircle,\n  DivFlex,\n  CurrentLine,\n} from './CardsList.styled';\n\nimport icons from '../../../images/sprite.svg';\n\n// import { deleteCard, replaceCard } from '../../../redux/task/taskOperations';\n// import ModalEditCard from 'components/Modals/ModalCard/ModalEditCard';\n\nconst BoardItem = ({ id, title, description, priority, deadline }) => {\n  //   const dispatch = useDispatch();\n\n  //   const [isOpen, setIsOpen] = useState(false);\n\n  //   const openModal = () => {\n  //     setIsOpen(true);\n  //   };\n\n  return (\n    <ItemCardContainer>\n      <Title>{title}</Title>\n      <Description>{description}</Description>\n      <Line />\n      <DetailsContainer>\n        <div>\n          <DetailName>Priority</DetailName>\n          <DivFlex>\n            <DetailCircle priority={priority} />\n            <DetailText>{priority}</DetailText>\n          </DivFlex>\n        </div>\n        <div>\n          <DetailName>Deadline</DetailName>\n          <DetailText>{deadline}</DetailText>\n        </div>\n        <ButtonContainer>\n          <Button className=\"bell\">\n            <svg width=\"16\" height=\"16\">\n              <use href={`${icons}#icon-bell`}></use>\n            </svg>\n          </Button>\n          <Button\n          //   onClick={() => dispatch(replaceCard(id))}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={`${icons}#icon-goto`}></use>\n            </svg>\n          </Button>\n          <Button\n          //   onClick={() => openModal()}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={`${icons}#icon-pencil`}></use>\n            </svg>\n          </Button>\n          <Button\n          //   onClick={() => dispatch(deleteCard(id))}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={`${icons}#icon-trash`}></use>\n            </svg>\n          </Button>\n        </ButtonContainer>\n      </DetailsContainer>\n      <CurrentLine priority={priority} />\n      {/* <ModalEditCard\n        id={id}\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={() => setIsOpen(false)}\n      /> */}\n    </ItemCardContainer>\n  );\n};\n\nexport default BoardItem;\n","// import { useSelector } from 'react-redux';\n\nimport CardItem from './CardItem';\nimport { CardsContainer } from './CardsList.styled';\n\n// import { getCarddSelector } from '../../../redux/task/taskSelectors';\n\nconst CadrsList = ({ columnId }) => {\n  // console.log(columnId);\n  // const cards = useSelector();\n  // console.log(cards);\n\n  const cards = [\n    {\n      _id: '1',\n      title: 'The Watch Spot Design',\n      description: 'description1',\n      priority: 'Low',\n      deadline: '12/05/2023',\n    },\n    {\n      _id: '2',\n      title: 'Research and Analysis',\n      description: 'description2',\n      priority: 'Medium',\n      deadline: '12/05/2023',\n    },\n    {\n      _id: '3',\n      title: 'Concept Development',\n      description: 'description3',\n      priority: 'Without',\n      deadline: '12/05/2023',\n    },\n  ];\n\n  return (\n    <CardsContainer>\n      {\n        <ul>\n          {cards.map(card => (\n            <li key={card._id}>\n              <CardItem\n                id={card._id}\n                title={card.title}\n                description={card.description}\n                priority={card.priority}\n                deadline={card.deadline}\n              />\n            </li>\n          ))}\n\n        </ul>\n      }\n    </CardsContainer>\n  );\n};\n\nexport default CadrsList;\n","// import { useSelector } from 'react-redux';\n\nimport { ColumnItem } from './ColumnsList.styled';\n\nimport { ColumnHeader } from '../../../../src/components/ScreensPage/ColumnHeader/ColumnHeader';\nimport CardList from '../CardList/CardsList';\nimport AddBoardBtn from '../AddBoardBtn/AddBoardBtn';\n// import { getColumn } from '../../../redux/task/taskSelectors';\n\nconst ColumnsList = ({ activeBoard }) => {\n  // const columns = useSelector(getColumn);\n  // console.log(columns);\n\n  const columns = [\n    {\n      _id: '1',\n      title: 'Column 1',\n      owner: `${activeBoard._id}`,\n    },\n    {\n      _id: '2',\n      title: 'Column 2',\n      owner: `${activeBoard._id}`,\n    },\n    {\n      _id: '3',\n      title: 'Column 3',\n      owner: `${activeBoard._id}`,\n    },\n  ];\n\n  return (\n    <ColumnItem>\n      {columns &&\n        columns.map(column => (\n          <li key={column._id}>\n            <ColumnHeader columnId={column._id} title={column.title} />\n            <CardList columnId={column._id} filterByPriority={null} />\n            {/* ??? <AddAnotherCard columnId={column._id} /> ??? */}\n            <AddBoardBtn /> {/*для візуалізації кнопки*/}\n          </li>\n        ))}\n    </ColumnItem>\n  );\n};\n\nexport default ColumnsList;\n","import {\n  // useDispatch,\n  useSelector,\n} from 'react-redux';\nimport { AddBoardBtn } from '../../../../src/components/ScreensPage/AddBoardBtn/AddBoardBtn';\nimport Filter from '../../../../src/components/ScreensPage/Filter/Filter';\n// import CardList from '../Card/CardList';\nimport { ContainerMain } from './Bord.styled';\n\nimport {\n  selectBoard,\n  // getColumn,\n} from '../../../../src/redux/task/taskSelectors';\n// import { getActiveBoard } from '../../../redux/task/taskOperations';\nimport ColumnsList from '../../../../src/components/ScreensPage/ColumnsList/ColumnsList';\nimport { BoardName } from '../AddBoardBtn/AddBoardBtn.styled';\n\nconst Bord = ({ onChangeFilter, setFilterByPriority }) => {\n  const boards = useSelector(selectBoard);\n  // console.log(boards);\n\n  const activeBoard = boards.find(board => board.isActive);\n  // console.log(activeBoard);\n\n  // const dispatch = useDispatch();\n  // dispatch(getActiveBoard(id))\n\n  return (\n    <>\n      {activeBoard && (\n        <ContainerMain background={activeBoard}>\n          <BoardName>{activeBoard.title}</BoardName>\n\n          <ColumnsList activeBoard={activeBoard} />\n          <AddBoardBtn />\n          <Filter\n            onChangeFilter={onChangeFilter}\n            setFilterByPriority={setFilterByPriority}\n          />\n        </ContainerMain>\n      )}\n    </>\n  );\n};\n\nexport default Bord;\n","import { Container } from './ScreensPage.styled';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport Text from '../../../src/components/ScreensPage/Text/Text';\nimport Filter from '../../../src/components/ScreensPage/Filter/Filter';\nimport Bord from '../../../src/components/ScreensPage/Bord/Bord';\nimport { getBoard } from '../../../src/redux/auth/authSelectors';\n\nconst ScreensPage = () => {\n  const boards = useSelector(getBoard);\n  // const activeBoard = boards.find(board => board.isActive);\n\n  const [filterByPriority, setFilterByPriority] = useState('');\n  // const [cards, setCards] = useState([]);\n  const onFilterChange = newFilter => {\n    console.log(newFilter);\n    setFilterByPriority(newFilter);\n    console.log(filterByPriority);\n  };\n\n  // const visibleCards = cards.filter(card => card.priority === filterByPriority);\n\n  return boards && boards.length ? (\n    <section>\n      <Bord\n        setFilterByPriority={setFilterByPriority}\n        onChangeFilter={onFilterChange}\n      />\n    </section>\n  ) : (\n    <section>\n      <Container>\n        <Filter\n          setFilterByPriority={setFilterByPriority}\n          onChangeFilter={onFilterChange}\n          />\n        <Text />\n      </Container>\n    </section>\n  );\n};\n\nexport default ScreensPage;\n","import styled from 'styled-components';\n\nexport const SideBarMenu = styled.div`\n  padding: 24px;\n  width: 260px;\n  height: 100vh;\n  background-color: var(--sidebarBgColor);\n  transition: transform 0.3s linear;\n  display: flex;\n  flex-direction: column;\n  // overflow: auto;\n\n  /* Tablet */\n  // @media screen and (max-width: 767px) {\n  @media screen and (max-width: 1439px) {\n    top: 0;\n    position: absolute;\n    left: -260px;\n    z-index: 100;\n    &.active {\n      transform: translateX(100%);\n      z-index: 10;\n    }\n  }\n\n  /* Mobile */\n  @media screen and (max-width: 767px) {\n    padding: 14px;\n    max-width: 225px;\n    width: 225px;\n    left: -225px;\n  }\n\n  /* Desktop - Sidebar visible for screens larger than 1439px */\n  @media screen and (min-width: 1439px) {\n    left: 0;\n    position: absolute;\n  }\n\n  /* @media screen and (min-height: 662px) {\n    height: 100vh;\n  } */\n`;\n\nexport const ButtonBurger = styled.button`\n  display: none;\n\n  /* Tablet */\n  @media screen and (max-width: 1439px) {\n    border-color: transparent;\n    width: 32px;\n    height: 32px;\n    background-color: var(--headerBgColor);\n    display: block;\n    position: fixed;\n    top: 18px;\n    left: 32px;\n    z-index: 100;\n    &.active {\n      display: none;\n    }\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: transparent;\n  display: none;\n  // overflow: auto;\n\n  &.active {\n    display: block;\n    z-index: 9;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LogoComponentStyled = styled.div`\n  margin-bottom: 60px;\n  height: 32px;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n\n  //Mobile\n  @media screen and (max-width: 375px) {\n    margin-bottom: 70px;\n  }\n`;\n\nexport const TaskPro = styled.span`\n  font-weight: 600;\n  line-height: 1.5;\n  color: var(--createNewBoard);\n`;\n\n//Color logo\nexport const LogoPath = styled.path`\n  fill: var(--logoBackground); // when adding a topic, swap places\n`;\n//Color Logo centeral\nexport const LogoPathCentral = styled.path`\n  fill: var(--logoIcon); // when adding a topic, swap places\n`;\n","import {\n  LogoComponentStyled,\n  TaskPro,\n  LogoPath,\n  LogoPathCentral,\n} from './LogoComponent.styled';\n// import icons from '../../../images/sprite.svg';\n\nconst LogoComponent = () => {\n  return (\n    <LogoComponentStyled>\n      {/*  Провсяквипадок. свг зі Sprite.svg\n      <svg width=\"32\" height=\"32\" style={svgStyles}>\n        <use href={`${icons}#icon-logo `}></use>\n      </svg> \n      */}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        viewBox=\"0 0 32 32\"\n      >\n        <LogoPath d=\"M24 0h-16c-4.418 0-8 3.582-8 8v0 16c0 4.418 3.582 8 8 8v0h16c4.418 0 8-3.582 8-8v0-16c0-4.418-3.582-8-8-8v0z\"></LogoPath>\n        <LogoPathCentral d=\"M13.331 23.027c0.245-1.272 0.453-2.61 0.747-3.949 0.145-0.7-0.031-1-0.814-0.946-0.784 0.054-1.657 0.027-2.49 0-0.833-0.026-0.982-0.446-0.502-1.044 2.362-2.918 4.752-5.8 7.133-8.673 0.267-0.326 0.575-0.558 1.014-0.313 0.44 0.246 0.349 0.55 0.276 0.915-0.262 1.339-0.48 2.677-0.77 3.989-0.149 0.678 0.046 0.919 0.752 0.892 0.318-0.017 0.69-0.027 1.064-0.027s0.746 0.010 1.116 0.029l-0.052-0.002c0.403 0 0.932-0.21 1.14 0.34 0.209 0.548-0.23 0.78-0.452 1.106-1.327 1.642-2.227 2.729-3.135 3.81l0.383-0.468c-1.361 1.624-2.712 3.242-4.052 4.854-0.262 0.317-0.556 0.571-1.005 0.41-0.448-0.16-0.353-0.54-0.353-0.923z\"></LogoPathCentral>\n      </svg>\n\n      <TaskPro>Task Pro</TaskPro>\n    </LogoComponentStyled>\n  );\n};\n\nexport default LogoComponent;\n","import styled from 'styled-components';\n\nexport const Heading = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textBoardColor);\n  margin-bottom: 8px;\n`;\n\nexport const Container = styled.div`\n  padding: 14px 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n  border-bottom: 1px solid var(--modalGorizontalBorderColor);\n  margin-bottom: 40px;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--createNewBoard);\n`;\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  border: none;\n  background-color: var(--createNewBoardIconBgColor);\n  cursor: pointer;\n  transition: background-color 250ms ease-in-out;\n\n  &:hover {\n    background-color: var(--btnColorHover);\n  }\n\n  svg {\n    fill: none;\n    stroke: black;\n  }\n`;\n","import ModalBord from '../../../../src/components/Modals/ModalBord/ModalBord';\nimport { useState } from 'react';\n\nimport { Heading, Button, Text, Container } from './CreateBoard.styled';\nimport icons from '../../../images/sprite.svg';\n\nconst CreateBord = ({onCloseSideBar}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  \n  const handleButtonClick = () => {\n    const currentWidth = window.innerWidth;\n\n\n  if (currentWidth <= 1439) {\n    openModal();\n    onCloseSideBar();\n  } else {\n    openModal();\n  }\n\n  }\n\n  return (\n    <>\n      <Heading>My boards</Heading>\n      <Container>\n        <Text>\n          Create a <br />\n          new board\n        </Text>\n        <Button onClick={handleButtonClick}>\n          <svg width=\"40px\" height=\"36px\">\n            <use href={`${icons}#icon-plus`}></use>\n          </svg>\n        </Button>\n      </Container>\n\n      <ModalBord\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={() => setIsOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default CreateBord;\n","import styled from 'styled-components';\n\nexport const BoardsContainer = styled.div`\n  position: relative;\n  width: 260px;\n  left: -24px;\n  min-height: 61px;\n  overflow-y: auto;\n  margin-bottom: 40px;\n  scrollbar-width: none;\n\n  @media screen and (max-width: 375px) {\n    width: 225px;\n    left: -14px;\n  }\n`;\n\nexport const ItemContainer = styled.div`\n  height: 61px;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  padding: 20px 24px;\n  margin-bottom: 4px;\n\n  &:hover,\n  &:active,\n  &.activeBoard {\n    background: var(--currentProjBgColor);\n    cursor: pointer;\n  }\n`;\n\nexport const Icon = styled.div`\n  fill: none;\n  stroke: var(--textBoardColor);\n\n  &.activeBoardIcon {\n    stroke: var(--createNewBoard);\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n\n  color: var(--textBoardColor);\n\n  &.activeBoardTitle {\n    color: var(--createNewBoard);\n    opacity: 1;\n  }\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: auto;\n`;\n\nexport const Button = styled.button`\n  padding: 0;\n  background: none;\n  border: none;\n  fill: none;\n  stroke: none;\n  display: none;\n\n  &.activeBoardButton {\n    display: block;\n    stroke: var(--textBoardColor);\n    cursor: pointer;\n  }\n`;\n\nexport const CurrentLine = styled.div`\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 61px;\n  position: absolute;\n  left: 256px;\n\n  &.activeLine {\n    background: var(--iconLogOut);\n  }\n\n  @media screen and (max-width: 375px) {\n    left: 221px;\n  }\n`;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const Header = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 24px 0;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background: var(--popupBackground);\n  margin-bottom: 24px;\n  padding: 0 18px;\n  position: relative;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsHeaderIcons = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  gap: 8px;\n  margin: 0 0 24px 0;\n  padding: 0;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--iconCardColor);\n    fill: transparent;\n  }\n\n  .icons-field {\n    display: none;\n  }\n\n  input:checked + svg {\n    stroke: var(--primaryTextColor);\n  }\n`;\n\nexport const HeaderBackground = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const BackgroundContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 4px;\n  flex-wrap: wrap;\n  margin: 0 0 40px 0;\n  stroke-width: 1px;\n  stroke: var(--defaultAvatarBgColor);\n  width: 252px;\n\n  .background-field {\n    display: none;\n  }\n\n  img {\n    cursor: pointer;\n  }\n\n  input:checked + img {\n    border: 2px solid var(--defaultAvatarBgColor);\n    border-radius: 6px;\n  }\n`;\n\nexport const BoardCreateBtn = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  width: 100%;\n  height: 49px;\n  margin-left: auto;\n  margin-right: auto;\n  background: var(--addCardButtonBackground);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--addCardButtonColor);\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1px;\n    stroke: var(--addPlusIconColor);\n  }\n\n  &:hover {\n    background-color: var(--createButtonHover);\n  }\n`;\n\nexport const ModalForm = styled(Form)`\n  padding: 24px;\n  position: relative;\n  background: var(--popupBackground);\n  border: 1px solid var(--addCardButtonBackground);\n  border-radius: 8px;\n`;\n\nexport const SvgCloseBtn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  right: 14px;\n  top: 14px;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--buttonColor);\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const SubmitSvgWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  background-color: var(--addCardButtonColor);\n  border-radius: 6px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  position: absolute;\n  top: 50px;\n  left: 24px;\n  font-size: 10px;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport icons from '../../../../src/images/sprite.svg';\nimport Image0 from '../../../../src/images/background/00.png';\nimport Image1 from '../../../../src/images/background/01.png';\nimport Image2 from '../../../../src/images/background/02.png';\nimport Image3 from '../../../../src/images/background/03.png';\nimport Image4 from '../../../../src/images/background/04.png';\nimport Image5 from '../../../../src/images/background/05.png';\nimport Image6 from '../../../../src/images/background/06.png';\nimport Image7 from '../../../../src/images/background/07.png';\nimport Image8 from '../../../../src/images/background/08.png';\nimport Image9 from '../../../../src/images/background/09.png';\nimport Image10 from '../../../../src/images/background/10.png';\nimport Image11 from '../../../../src/images/background/11.png';\nimport Image12 from '../../../../src/images/background/12.png';\nimport Image13 from '../../../../src/images/background/13.png';\nimport Image14 from '../../../../src/images/background/14.png';\nimport Image15 from '../../../../src/images/background/15.png';\n\nimport {\n  Header,\n  Input,\n  IconsHeaderIcons,\n  IconsContainer,\n  HeaderBackground,\n  BackgroundContainer,\n  BoardCreateBtn,\n  ModalForm,\n  SvgCloseBtn,\n  Img,\n  SubmitSvgWrapper,\n  Error,\n} from './EditBoardForm.styled';\nimport { editBoard } from '../../../redux/auth/authOperations';\nimport { getBoardSelector } from '../../../redux/auth/authSelectors';\n\nconst BoardFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short').required('This field is required!'),\n});\n\nconst EditBoardForm = ({ closeModalWindow, id }) => {\n  const dispatch = useDispatch();\n\n  const boards = useSelector(getBoardSelector);\n  const { title, icnboard, background } = boards.find(board => {\n    return board._id === id;\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        title: title,\n        icnboard: icnboard,\n        background: background,\n      }}\n      validationSchema={BoardFormSchema}\n      onSubmit={(values, actions) => {\n        if (\n          title === values.title &&\n          icnboard === values.icnboard &&\n          background === values.background\n        ) {\n          return toast.warning('Data does not changed');\n        }\n\n        dispatch(editBoard({ id, values }))\n          .unwrap()\n          .then()\n          .catch(error => error.message);\n        actions.resetForm();\n        closeModalWindow();\n      }}\n    >\n      <ModalForm>\n        <Header>Edit board</Header>\n        <SvgCloseBtn type=\"button\" onClick={closeModalWindow}>\n          <svg>\n            <use href={`${icons}#icon-close`}></use>\n          </svg>\n        </SvgCloseBtn>\n\n        <label htmlFor=\"title\"></label>\n        <Error name=\"title\" component=\"div\" />\n        <Input name=\"title\" placeholder=\"Title\" />\n\n        <IconsHeaderIcons>Icons</IconsHeaderIcons>\n        <IconsContainer>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-project\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-project`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-star\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-star`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-loading\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-loading`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-puzzle\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-puzzle`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-container\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-container`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-lightning\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-lightning`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-colors\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-colors`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-hexagon\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-hexagon`}></use>\n            </svg>\n          </label>\n        </IconsContainer>\n\n        <HeaderBackground>Background</HeaderBackground>\n        <BackgroundContainer>\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"0\"\n            />\n            <Img src={Image0} alt=\"background 0\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"7\"\n            />\n            <Img src={Image7} alt=\"background 7\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"2\"\n            />\n            <Img src={Image2} alt=\"background 2\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"1\"\n            />\n            <Img src={Image1} alt=\"background 1\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"8\"\n            />\n            <Img src={Image8} alt=\"background 8\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"3\"\n            />\n            <Img src={Image3} alt=\"background 3\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"4\"\n            />\n            <Img src={Image4} alt=\"background 4\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"9\"\n            />\n            <Img src={Image9} alt=\"background 9\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"5\"\n            />\n            <Img src={Image5} alt=\"background 5\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"10\"\n            />\n            <Img src={Image10} alt=\"background 10\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"6\"\n            />\n            <Img src={Image6} alt=\"background 6\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"11\"\n            />\n            <Img src={Image11} alt=\"background 11\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"12\"\n            />\n            <Img src={Image12} alt=\"background 12\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"13\"\n            />\n            <Img src={Image13} alt=\"background 13\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"14\"\n            />\n            <Img src={Image14} alt=\"background 14\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"15\"\n            />\n            <Img src={Image15} alt=\"background 15\" />\n          </label>\n        </BackgroundContainer>\n\n        <BoardCreateBtn type=\"submit\">\n          <SubmitSvgWrapper>\n            <svg width=\"28px\" height=\"28px\">\n              <use href={`${icons}#icon-plus`}></use>\n            </svg>\n          </SubmitSvgWrapper>\n          Edit\n        </BoardCreateBtn>\n        <ToastContainer\n          style={{ width: '280px' }}\n          position=\"bottom-center\"\n          autoClose={1500}\n          transition={Slide}\n          closeOnClick={true}\n          pauseOnHover={false}\n          draggable={false}\n          limit={1}\n          theme=\"colored\"\n        />\n      </ModalForm>\n    </Formik>\n  );\n};\n\nexport default EditBoardForm;\n","import Modal from 'react-modal';\nimport EditBoardForm from '../../Sidebar/EditBoardForm/EditBoardForm';\nimport { ModalCustom } from './ModalBord.styled';\n\nModal.setAppElement('#root');\n\nconst EditModalBord = ({ isOpen, closeModal, id }) => {\n  return (\n    <ModalCustom\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Modal for Edit Board\"\n    >\n      <EditBoardForm id={id} closeModalWindow={closeModal} />\n    </ModalCustom>\n  );\n};\n\nexport default EditModalBord;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport {\n  ItemContainer,\n  Title,\n  ButtonContainer,\n  CurrentLine,\n  Button,\n  Icon,\n} from './BoardsList.styled';\n\nimport icons from '../../../images/sprite.svg';\n\nimport { deleteBoard } from '../../../redux/auth/authOperations';\nimport EditModalBord from 'components/Modals/ModalBord/EditModalBoard';\n\nconst BoardItem = ({ id, isActive, icon, title }) => {\n  const dispatch = useDispatch();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  return (\n    <ItemContainer className={isActive ? 'activeBoard' : ''}>\n      <Icon className={isActive ? 'activeBoardIcon' : ''}>\n        <svg width=\"18\" height=\"18\">\n          <use href={`${icons}#${icon}`}></use>\n        </svg>\n      </Icon>\n      <Title className={isActive ? 'activeBoardTitle' : ''}>{title}</Title>\n      <ButtonContainer>\n        <Button\n          className={isActive ? 'activeBoardButton' : ''}\n          onClick={() => openModal()}\n        >\n          <svg width=\"16\" height=\"16\">\n            <use href={`${icons}#icon-pencil`}></use>\n          </svg>\n        </Button>\n        <Button\n          className={isActive ? 'activeBoardButton' : ''}\n          onClick={() => dispatch(deleteBoard(id))}\n        >\n          <svg width=\"16\" height=\"16\">\n            <use href={`${icons}#icon-trash`}></use>\n          </svg>\n        </Button>\n      </ButtonContainer>\n      <CurrentLine className={isActive ? 'activeLine' : ''} />\n      <EditModalBord\n        id={id}\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={() => setIsOpen(false)}\n      />\n    </ItemContainer>\n  );\n};\n\nexport default BoardItem;\n","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\n\nimport BoardItem from './BoardItem';\nimport { BoardsContainer } from './BoardsList.styled';\n\nimport { getBoardSelector } from '../../../redux/auth/authSelectors';\nimport { updateBoardActive } from '../../../redux/auth/authOperations';\n\nconst BoardsList = () => {\n  const boards = useSelector(getBoardSelector);\n\n  let reverseBoards = [];\n  if (boards) {\n    boards.map(board => {\n      return reverseBoards.unshift(board);\n    });\n  }\n\n  const dispatch = useDispatch();\n\n  return (\n    <BoardsContainer>\n      {boards && boards.length > 0 && (\n        <ul>\n          {reverseBoards.map(board => (\n            <li\n              key={board._id}\n              onClick={() => dispatch(updateBoardActive(board._id))}\n            >\n              <BoardItem\n                id={board._id}\n                isActive={board.isActive}\n                icon={board.icnboard}\n                title={board.title}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n    </BoardsContainer>\n  );\n};\n\nexport default BoardsList;\n","import styled from 'styled-components';\n\nexport const ContainerHelp = styled.div`\n  margin-top: auto;\n  background: var(--helpBgColor);\n  width: 212px;\n  height: 65px;\n  padding-left: 20px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n\n  @media(max-width:768px) {\n    width: 197px;\n    padding-top: 18px;\n\n  }\n`;\n\nexport const ImgHelp = styled.img`\n  width: 54px;\n  height: 78px;\n  margin-top: 10px;\n`;\n\nexport const TextHelp = styled.p`\n  width: 163px;\n  margin-top: 14px;\n  color: var(--needHelpBtn);\n  font-size: 12px;\n  line-height: 1.34;\n  letter-spacing: -0.24px;\n\n  @media (min-width: 768px) {\n    width: 164px;\n    font-size: 14px;\n    line-height: 1.4;\n    letter-spacing: -0.28px;\n  }\n`;\n\nexport const Span = styled.span`\n  color: var(--greenGreenBlueColor);\n`;\n\nexport const IconHelp = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: none;\n  stroke: var(--needHelpBtn);\n`;\n\nexport const QuestionHelp = styled.span`\n  font-weight: 500;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  cursor: pointer;\n  color: var(--needHelpBtn);\n  padding-top: 15px;\n  margin-bottom: 2px;\n`;\n\nexport const ContainerText = styled.div`\n   background-color: var(--helpBgColor);\n    margin-top: -204px;\n    width: 212px;\n    margin-left: -20px;\n    padding-left: 20px;\n    border-radius: 8px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n\n    display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\n\n  @media(min-width:375px) and (max-width: 768px) {\n    width: 197px;\n  }\n`;\n\nexport const BtnNeedHelp = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n  cursor: pointer;\n  \n  &:hover + ${ContainerText} {\n    display: block;\n\n  }\n`;","import styled from \"styled-components\";\nimport ReactModal from 'react-modal';\n\nexport const OverlayModal = styled(ReactModal)`\n  position: relative;\n  border-radius: 8px;\n  width: 400px;\n  height: 355px;\n  top: 50%;\n  right: auto;\n  bottom: auto;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  padding: 0%;\n  z-index: 1000;\n`\n\nexport const ModalContainerHelp = styled.div`\n  background-color: var(--popupBackground);\n  border-radius: 8px;\n  border: 1px solid var(--addCardButtonBackground);\n  z-index: 20;\n  position: fixed;\n  padding-top: 23px;\n  width: 400px;\n  height: 355px;\n\n  @media (max-width: 768px) {\n    width: 335px;\n    margin-left: 30px;\n  }\n`;\n\nexport const FormHelp = styled.form`\n  display: inline-block;\n`;\n\nexport const ModalTitleHelp = styled.h2`\n  margin-left: 24px;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const InputHelp = styled.input`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  background-color: var(--popupBackground);\n  width: 352px;\n  height: 49px;\n  margin-left: 24px;\n  margin-right: 24px;\n  padding-left: 15px;\n  color: var(--primaryTextColor);\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    color: var(--secondaryTextColor);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 768px) {\n    width: 287px;\n  }\n`;\n\nexport const CommentHelp = styled.textarea`\n  border: 1px solid var(--greenGreenBlueColor);\n  height: 120px;\n  border-radius: 8px;\n  background-color: black;\n  background-color: var(--popupBackground);\n  width: 352px;\n  height: 120px;\n  margin: 14px 24px 0 24px;\n  resize: none;\n  padding-left: 15px;\n  padding-top: 14px;\n  color: var(--primaryTextColor);\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    color: var(--secondaryTextColor);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 768px) {\n    width: 287px;\n  }\n`;\n\nexport const BtnSendHelp = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  cursor: pointer;\n  width: 352px;\n  height: 49px;\n  margin: 24px;\n  background-color: var(--greenGreenBlueColor);\n  border: none;\n  color: var(--addCardButtonColor);\n  &:hover {\n    background-color: var(--btnColorHover);\n  }\n  @media (max-width: 768px) {\n    width: 287px;\n  }\n \n`;\n\nexport const IconHelp = styled.svg`\n  position: relative;\n  left: 370px;\n  bottom: 34px;\n  cursor: pointer;\n  width: 18px;\n  height: 18px;\n  fill: none;\n  stroke: var(--buttonColor);\n\n  @media (max-width: 768px) {\n    left: 305px;\n  }\n`;","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\n\nimport icons from '../../../images/sprite.svg';\nimport {\n  ModalContainerHelp,\n  FormHelp,\n  InputHelp,\n  ModalTitleHelp,\n  CommentHelp,\n  BtnSendHelp,\n  IconHelp,\n} from '../../../components/Modals/ModalNeedHelp/ModalNeedHelp.styled';\n\nimport { fetchHelpApi } from '../../../services/backApi';\nimport { getUserEmail } from '../../../redux/auth/authSelectors';\n\n\nconst NeedHelpSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n      message: 'Email error',\n      excludeEmptyString: true,\n    }).required('Email is required'),\n  comment: Yup.string().required('Comment is required'),\n});\n\n\nconst FormNeedHelp = ({ closeModal }) => {\n  const userEmail = useSelector(getUserEmail);\n\n  const handleSubmit = (values, { resetForm }) => {\n    fetchHelpApi(values);\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <ModalContainerHelp>\n      <ModalTitleHelp>Need help</ModalTitleHelp>\n      \n       <IconHelp onClick={closeModal}>\n        <use href={`${icons}#icon-close`}></use>\n      </IconHelp>\n\n      <Formik\n        initialValues={{\n          email: `${userEmail}`,\n          comment: '',\n        }}\n        validationSchema={NeedHelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ handleChange, values }) =>(\n          <FormHelp>\n            <InputHelp\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"Email address\"\n              onChange={handleChange}\n              value={values.email}\n            />\n            <CommentHelp\n              type=\"comment\"\n              name=\"comment\"\n              required\n              placeholder=\"Comment\"\n              onChange={handleChange}\n            />\n            <BtnSendHelp type=\"submit\">Send</BtnSendHelp>\n          </FormHelp>\n        )}\n      </Formik>\n\n    </ModalContainerHelp>\n  );\n};\n\nexport default FormNeedHelp;","import FormNeedHelp from '../../Sidebar/NeedHelp/FormNeedHelp';\nimport { OverlayModal } from './ModalNeedHelp.styled';\nimport ReactModal from 'react-modal';\n\nReactModal.setAppElement('#root');\n\nconst ModalNeedHelp = ({ isOpen, onClose }) => {\n \n  return (\n     \n    <OverlayModal\n      isOpen={isOpen}\n      onRequestClose={onClose}\n    >\n      <FormNeedHelp closeModal={onClose}/>\n      </OverlayModal>\n  );\n};\n\n\nexport default ModalNeedHelp;","import { useState } from 'react';\n\nimport {\n  ContainerHelp,\n  ImgHelp,\n  TextHelp,\n  IconHelp,\n  Span,\n  QuestionHelp,\n  BtnNeedHelp,\n  ContainerText,\n} from './NeedHelp.styled.js';\n\nimport ModalNeedHelp from '../../Modals/ModalNeedHelp/ModalNeedHelp.jsx';\nimport image from 'images/need-help.png';\nimport icons from '../../../images/sprite.svg';\n\nconst NeedHelp = ({onCloseSideBar}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isHoverText, setIsHoverText] = useState(false);\n\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleButtonClick = () => {\n     const currentWidth = window.innerWidth;\n\n\n  if (currentWidth <= 1439) {\n    openModal();\n    onCloseSideBar();\n    \n  } else {\n    openModal();\n    console.log(\"click\")\n  }\n\n  }\n\n  return (\n    <ContainerHelp>\n\n    <ContainerText isVisible={isHoverText}>\n      <ImgHelp src={image} alt=\"Help\" />\n\n      <TextHelp>\n        If you need help with\n        <Span> TaskPro</Span>, check out our\n        support resources or reach out to our customer support team.\n      </TextHelp>\n       </ContainerText>\n\n      <BtnNeedHelp onMouseEnter={() => setIsHoverText(true)} onMouseLeave={() => setIsHoverText(false)}>\n        <IconHelp>\n          <use href={`${icons}#icon-help`}></use>\n        </IconHelp>\n        <QuestionHelp onClick={handleButtonClick}> Need help? </QuestionHelp>\n      </BtnNeedHelp>\n\n      <ModalNeedHelp isOpen={isModalOpen} onClose={closeModal} />\n    </ContainerHelp>\n  );\n};\n\nexport default NeedHelp;","import styled from 'styled-components';\n\nexport const StyledImg = styled.div`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: var(--iconLogOut);\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 24px;\n  gap: 14px;\n  width: 110px;\n\n  font-weight: 500;\n  font-size: 16px;\n  color: var(--createNewBoard);\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport icons from '../../../images/sprite.svg';\nimport { StyledDiv, StyledImg } from './StyledLogOut';\nimport { logout } from '../../../redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst LogOut = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    \n    const onLogOut = () => {\n        dispatch(logout());\n        navigate('/');\n    }\n\n    return (\n      <StyledDiv onClick={onLogOut}>\n        <StyledImg >\n          <svg width=\"32\" height=\"32\">\n            <use href={`${icons}#icon-logout`}></use>\n          </svg>\n        </StyledImg>\n        <p>Log Out</p>\n      </StyledDiv>\n    );\n};\n\nexport default LogOut;","import {\n  SideBarMenu,\n  Overlay,\n} from './Sidebar.styled';\nimport LogoComponent from './LogoComponent/LogoComponent';\nimport CreateBord from './CreateBord/CreateBord';\nimport BoardsList from './BoardsList/BoardsList';\nimport NeedHelp from './NeedHelp/NeedHelp';\nimport LogOut from './LogOut/LogOut';\nimport React from 'react';\n\nconst SideBar = ({ isSidebarOpen, onCloseSideBar }) => {\n  return (\n    <>\n      <Overlay\n        className={` ${isSidebarOpen ? 'active' : ''}`}\n        onClick={onCloseSideBar}\n      />\n      <SideBarMenu className={` ${isSidebarOpen ? 'active' : ''}`}>\n        <LogoComponent/>\n        <CreateBord onCloseSideBar={onCloseSideBar}/>\n        <BoardsList/>\n        <NeedHelp onCloseSideBar={onCloseSideBar}/>\n        <LogOut />\n      </SideBarMenu>\n    </>\n  );\n};\n\nexport default SideBar;\n","import Header from 'components/Header/Header';\nimport ScreensPage from 'components/ScreensPage/ScreensPage';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport { useState } from 'react';\n\nconst HomePage = () => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n  return (\n    <>\n      <Sidebar isSidebarOpen={isSidebarOpen} onCloseSideBar={closeSidebar} />\n      <Header toggleSidebar={toggleSidebar} />\n      <ScreensPage />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_path","_path2","_path3","ThemeWrapper","styled","_templateObject","_taggedTemplateLiteral","ThemeTitle","_templateObject2","ThemeSelectWraper","_templateObject3","ThemeItems","_templateObject4","props","theme","children","toLowerCase","ThemeSelectIcon","_templateObject5","_useState","useState","_useState2","_slicedToArray","setTheme","_useState3","_useState4","list","setList","useEffect","document","body","setAttribute","savedTheme","localStorage","getItem","handleThemeChange","newTheme","setItem","toogleList","_jsxs","onClick","_jsx","href","sprite","StyledBtnProfile","StyledImgProfile","StyledProfileName","User","_ref","handleOpenModal","_useSelector","useSelector","getUserData","name","avatarURL","_Fragment","src","alt","userFoto","split","map","el","toUpperCase","slice","join","editString","SpriteSVG","id","viewBox","strokeLinejoin","strokeLinecap","strokeMiterlimit","strokeWidth","d","fill","stroke","style","width","height","xmlns","x","y","rx","ry","ModalOverlay","modalRoot","querySelector","onClose","overflow","handleEscape","event","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","StyledBtn","StyledModal","StyledBtnClose","StyledModalHeader","StyledUserFoto","StyledInputAdd","StyledSvgWrapper","_templateObject6","StyledModalForm","_templateObject7","StyledModalInput","_templateObject8","StyledBtnEdit","_templateObject9","StyledBtnSave","_templateObject10","EditProfileText","_templateObject11","StyledErrorMail","_templateObject12","StyledErrorName","_templateObject13","StyledError","_templateObject14","validationSchema","Yup","userName","min","userEmail","email","userPassword","UserInfoModal","dispatch","useDispatch","selectedFile","setSelectedFile","showPassword","setShowPassword","_useState5","_useState6","previewImage","setPreviewImage","formik","useFormik","initialValues","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","formData","_context","prev","next","FormData","append","updateUser","error","console","message","stop","_x","apply","arguments","ModalEditUser","type","onChange","file","reader","FileReader","onloadend","result","readAsDataURL","handleFileChange","files","click","handleSubmit","value","handleChange","errors","touched","position","placeholder","isModalOpen","setIsModalOpen","HeaderWrapper","_excluded","_extends","Object","assign","i","length","source","key","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBurger","svgRef","title","titleId","ref","ForwardRef","toggleSidebar","burgerIconStyles","cursor","left","innerWidth","windowWidth","setWindowWidth","handleResize","display","BurgerIcon","HeaderSwitchTheme","HeaderUserBar","Container","Header","Input","Field","IconsHeaderIcons","IconsContainer","HeaderBackground","BackgroundContainer","BoardCreateBtn","ModalForm","Form","SvgCloseBtn","Img","SubmitSvgWrapper","Error","ErrorMessage","BoardFormSchema","shape","required","closeModalWindow","boards","getBoard","Formik","icnboard","background","actions","some","board","toast","createBoard","unwrap","then","catch","resetForm","concat","icons","htmlFor","component","className","Image0","Image7","Image2","Image1","Image8","Image3","Image4","Image9","Image5","Image10","Image6","Image11","Image12","Image13","Image14","Image15","ToastContainer","autoClose","transition","Slide","closeOnClick","pauseOnHover","draggable","limit","ModalCustom","Modal","isOpen","closeModal","onRequestClose","contentLabel","CreateBoardForm","MainText","ButtonCreate","setIsOpen","openModal","ModalBord","FilterText","WindowContainer","FilerModalBtn","FilterFormHeading","onChangeFilter","setFilterByPriority","setWindow","AddColumnFormSchema","columns","getColumn","idBoard","find","isActive","_id","column","addColumn","AddColumnForm","BoardName","ColumnAddBtn","SvgDiv","AddBoardBtn","ModalAddColumn","ContainerMain","background_mobile_jpeg_1x","background_mobile_jpeg_2x","background_tablet_jpeg_2x","background_decktop_jpeg_1x","background_decktop_jpeg_2x","ColumnItem","ColumnHeaderWrapper","ColumnHeaderText","ColumnHeaderButton","ColumnHeaderIcon","EditCardWrapper","EditCardTitle","EditCardInput","EditCardTextArea","EditCardLabel","EditCardButton","RadioButtons","selectedValue","setSelectedValue","onRadioChange","log","RadioGroup","row","color","button","FormControlLabel","sx","marginBottom","fontSize","letterSpacing","padding","backgroundColor","marginLeft","control","Radio","taskName","firstName","lastName","_ref2","setSubmitting","setTimeout","alert","JSON","stringify","as","EditColumn","ColumnHeader","SetIsModalOpen","deleteColumn","ModalCard","CardsContainer","ItemCardContainer","Title","Description","Line","DetailsContainer","DetailName","DetailText","DivFlex","DetailCircle","priority","ButtonContainer","Button","CurrentLine","description","deadline","columnId","card","CardItem","activeBoard","owner","CardList","filterByPriority","selectBoard","ColumnsList","Filter","onFilterChange","newFilter","Bord","Text","SideBarMenu","Overlay","LogoComponentStyled","TaskPro","LogoPath","LogoPathCentral","Heading","onCloseSideBar","BoardsContainer","ItemContainer","Icon","_boards$find","getBoardSelector","editBoard","EditBoardForm","icon","deleteBoard","EditModalBord","reverseBoards","unshift","updateBoardActive","BoardItem","ContainerHelp","ImgHelp","TextHelp","Span","IconHelp","QuestionHelp","ContainerText","isVisible","BtnNeedHelp","OverlayModal","ReactModal","ModalContainerHelp","FormHelp","ModalTitleHelp","InputHelp","CommentHelp","BtnSendHelp","NeedHelpSchema","matches","excludeEmptyString","comment","getUserEmail","fetchHelpApi","_ref3","FormNeedHelp","isHoverText","setIsHoverText","image","onMouseEnter","onMouseLeave","ModalNeedHelp","StyledImg","StyledDiv","navigate","useNavigate","logout","isSidebarOpen","LogoComponent","CreateBord","BoardsList","NeedHelp","LogOut","setIsSidebarOpen","Sidebar","ScreensPage"],"sourceRoot":""}