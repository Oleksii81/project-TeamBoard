{"version":3,"file":"static/js/137.e26e879e.chunk.js","mappings":"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","sources":["images/burger.svg","components/Header/HeaderSwitchTheme/HeaderSwitchTheme.styled.js","components/Header/HeaderSwitchTheme/HeaderSwitchTheme.jsx","components/Header/User/User.styled.js","components/Header/User/User.jsx","assets/icons/SvgIcons.jsx","components/Modals/ModalEditUser/ModalEditUser.styled.js","components/Modals/ModalEditUser/ModalEditUser.jsx","components/shared/Buttons/LigthBtn.styled.js","components/Header/UserInfoModal/UserInfoModal.styled.js","components/Header/UserInfoModal/UserInfoModal.jsx","components/Header/HeaderUserBar/HeaderUserBar.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/Sidebar/Sidebar.styled.jsx","components/Sidebar/LogoComponent/LogoComponent.styled.js","components/Sidebar/LogoComponent/LogoComponent.jsx","components/Sidebar/CreateBord/CreateBoard.styled.js","components/Sidebar/CreateBord/CreateBord.jsx","components/Sidebar/BoardsList/BoardsList.styled.js","components/Sidebar/EditBoardForm/EditBoardForm.styled.js","components/Sidebar/EditBoardForm/EditBoardForm.jsx","components/Modals/ModalBord/EditModalBoard.jsx","components/Sidebar/BoardsList/BoardItem.jsx","components/Sidebar/BoardsList/BoardsList.jsx","components/Sidebar/NeedHelp/NeedHelp.styled.js","components/Modals/ModalNeedHelp/ModalNeedHelp.styled.js","components/Sidebar/NeedHelp/FormNeedHelp.jsx","components/Modals/ModalNeedHelp/ModalNeedHelp.jsx","components/Sidebar/NeedHelp/NeedHelp.jsx","components/Sidebar/LogOut/StyledLogOut.js","components/Sidebar/LogOut/LogOut.jsx","components/Sidebar/Sidebar.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["var _path, _path2, _path3;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBurger(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 32,\n    height: 32,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 16H28\",\n    stroke: \"var(--iconEyeColor)\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 8H28\",\n    stroke: \"var(--iconEyeColor)\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4 24H28\",\n    stroke: \"var(--iconEyeColor)\",\n    strokeWidth: 2.5,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBurger);\nexport default __webpack_public_path__ + \"static/media/burger.42365862ef7a4ae41847d66223ea8d09.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nexport const ThemeWrapper = styled.div`\n  position: relative;\n`;\n\nexport const ThemeTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 68px;\n  height: 21px;\n  color: var(--themeTitleTextColor);\n  font-size: 14px;\n  font-weight: 500;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n  transition: opacity var(--transition_data);\n\n  &:hover,\n  &:focus {\n    opacity: 0.7;\n  }\n`;\n\nexport const ThemeSelectWraper = styled.ul`\n  position: absolute;\n  top: 21px;\n  right: 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 18px 44px 18px 18px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  width: 100px;\n  height: 107px;\n  border: 1px solid var(--greenGreenBlueColor);\n  background-color: var(--themeListBgColor);\n  box-shadow: var(--boxShadow);\n  z-index: 100;\n  font-weight: 500;\n  font-size: 14px;\n`;\n\nexport const ThemeItems = styled.li`\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.28px;\n  cursor: pointer;\n  color: var(\n    --${props => (props.theme === props.children.toLowerCase() ? 'greenGreenBlueColor' : 'popupTextColor')}\n  );\n  transition: opacity var(--transition_data);\n\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n\nexport const ThemeSelectIcon = styled.svg`\n  fill: var(--themeTitleTextColor);\n  stroke: var(--themeTitleTextColor);\n  width: 16px;\n  height: 17px;\n`;\n","import { ThemeWrapper, ThemeSelectWraper, ThemeTitle, ThemeItems,ThemeSelectIcon } from \"./HeaderSwitchTheme.styled\";\nimport { useState, useEffect } from \"react\";\nimport sprite from '../../../images/sprite.svg'\n\nconst HeaderSwitchTheme = () => {\n    const [theme, setTheme] = useState('light');\n    const [list, setList] = useState(false)\n\n     useEffect(() => {\n    document.body.setAttribute('data-theme', theme);\n     }, [theme]);\n    \n     useEffect(() => {\n        const savedTheme = localStorage.getItem('theme');\n        if (savedTheme) {\n            setTheme(savedTheme);\n        }\n    }, []);\n    \n    const handleThemeChange = (newTheme) => {\n        setTheme(newTheme);\n        localStorage.setItem('theme', newTheme)\n        setList('false')\n    }\n\n    const toogleList = () => {\n        setList(!list);\n    }\n\n    return (\n        <ThemeWrapper>\n            <ThemeTitle onClick={toogleList}>Theme\n                <ThemeSelectIcon>\n                    <use href={sprite + \"#icon-chevron-down\"} />\n            </ThemeSelectIcon>\n            </ThemeTitle>\n            {list && (\n                <ThemeSelectWraper theme={theme} onClick={toogleList}>\n                    <ThemeItems onClick={() => handleThemeChange('light')}>Light</ThemeItems>\n                    <ThemeItems onClick={() => handleThemeChange('dark')}>Dark</ThemeItems>\n                    <ThemeItems onClick={() => handleThemeChange('violet')}>Violet</ThemeItems>\n                </ThemeSelectWraper>\n            )\n            }\n            \n        </ThemeWrapper>\n)\n}\n\nexport default HeaderSwitchTheme;","import styled from 'styled-components';\n\nexport const StyledBtnProfile = styled.button`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  gap: 8px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n\n\n  @media screen and (min-width: 768px) {\n    gap: 14px;\n  }\n`;\n\nexport const StyledImgProfile = styled.img`\n  width: 32px;\n  height: 32px;\n  border-radius: 8%;\n\n\n`;\n\nexport const StyledProfileName = styled.p`\n  color: #161616;\n  font-family: 'Poppins-500', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 18px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    line-height: 24px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { getUserData } from '../../../redux/auth/authSelectors';\nimport userFoto from 'assets/img/userWhite.png';\nimport {\n  StyledBtnProfile,\n  StyledImgProfile,\n  StyledProfileName,\n} from './User.styled';\n\nexport const User = ({ handleOpenModal }) => {\n  const { name, avatarURL } = useSelector(getUserData);\nconst editString = name => {\n    if (name) {\n      const arrFromStr = name.split(' ');\n      const res = arrFromStr.map(el => el && el[0].toUpperCase() + el.slice(1));\n\n      return res.join(' ');\n    }\n  };\n  return (\n    <>\n      <StyledBtnProfile onClick={handleOpenModal}>\n        {(avatarURL && <StyledImgProfile src={avatarURL} alt=\"Foto\" />) || (\n          <StyledImgProfile src={userFoto} alt=\"Default Foto\" />\n        )}\n\n        <StyledProfileName>{editString(name)}</StyledProfileName>\n      </StyledBtnProfile>\n    </>\n  );\n};\n","import PropTypes from 'prop-types';\nexport const SpriteSVG = ({ name }) => {\n  switch (name) {\n   \n    case 'close':\n      return (\n        <svg id=\"icon-close\" viewBox=\"0 0 32 32\">\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2\"\n            d=\"M24 8l-16 16M8 8l16 16\"\n          ></path>\n        </svg>\n      );\n    \n    case 'add_photo':\n      return (\n  <svg id=\"icon-add_photo\" viewBox=\"0 0 24 24\">\n    <path\n      fill=\"var(--defaultAvatarBgColor)\"\n      d=\"M18 0H6C2.68629 0 0 2.68629 0 6V18C0 21.3137 2.68629 24 6 24H18C21.3137 24 24 21.3137 24 18V6C24 2.68629 21.3137 0 18 0Z\"\n    ></path>\n    <path\n      fill=\"none\"\n      stroke=\"#f3f3f3\"\n      strokeLinejoin=\"round\"\n      strokeLinecap=\"round\"\n      strokeMiterlimit=\"4\"\n      strokeWidth=\"2\"\n      style={{ stroke: 'var(--color2, #f3f3f3)' }}\n      d=\"M16.25 11v10.5M11 16.25h10.5\"\n    ></path>\n  </svg>\n);\n\n    \n    case 'plus':\n      return (\n        <svg id=\"icon-plus\" viewBox=\"0 0 32 32\">\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"1.9862\"\n            d=\"M16 6.988v18.024M6.988 16h18.023\"\n          ></path>\n        </svg>\n      );\n    \n    case 'eye2':\n      return (\n        <svg id=\"eye2\" viewBox=\"0 0 32 32\">\n          <g clip-path=\"url(#clip0_11829_1137)\">\n            <path\n              d=\"M17.94 17.94C16.2306 19.243 14.1491 19.9649 12 20C5 20 1 12 1 12C2.24389 9.68192 3.96914 7.65663 6.06 6.06003M9.9 4.24002C10.5883 4.0789 11.2931 3.99836 12 4.00003C19 4.00003 23 12 23 12C22.393 13.1356 21.6691 14.2048 20.84 15.19M14.12 14.12C13.8454 14.4148 13.5141 14.6512 13.1462 14.8151C12.7782 14.9791 12.3809 15.0673 11.9781 15.0744C11.5753 15.0815 11.1752 15.0074 10.8016 14.8565C10.4281 14.7056 10.0887 14.4811 9.80385 14.1962C9.51897 13.9113 9.29439 13.572 9.14351 13.1984C8.99262 12.8249 8.91853 12.4247 8.92563 12.0219C8.93274 11.6191 9.02091 11.2219 9.18488 10.8539C9.34884 10.4859 9.58525 10.1547 9.88 9.88003\"\n              stroke=\"#161616\"\n              stroke-width=\"1.8\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n            <path\n              d=\"M1 1L23 23\"\n              stroke=\"#161616\"\n              stroke-width=\"1.8\"\n              stroke-linecap=\"round\"\n              stroke-linejoin=\"round\"\n            />\n          </g>\n          <defs>\n            <clipPath id=\"clip0_11829_1137\">\n              <rect width=\"24\" height=\"24\" fill=\"white\" />\n            </clipPath>\n          </defs>\n        </svg>\n      );\n  \n    case 'eye':\n      return (\n        <svg id=\"icon-eye\" viewBox=\"0 0 32 32\">\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2.4\"\n            d=\"M1.333 16s5.333-10.667 14.667-10.667 14.667 10.667 14.667 10.667-5.333 10.667-14.667 10.667-14.667-10.667-14.667-10.667z\"\n          ></path>\n          <path\n            strokeLinejoin=\"round\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit=\"4\"\n            strokeWidth=\"2.4\"\n            d=\"M16 20c2.209 0 4-1.791 4-4s-1.791-4-4-4v0c-2.209 0-4 1.791-4 4s1.791 4 4 4v0z\"\n          ></path>\n        </svg>\n      );\n   \n    \n    case 'close-modal':\n      return (\n        <svg width=\"10\" height=\"10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M5 2.083v5.834M2.083 5h5.834\" stroke=\"#161616\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/></svg>\n      );\n    \n    case 'add-modal-photo':\n      return (\n        <svg\n          width=\"24\"\n          height=\"24\"\n          viewBox=\"0 0 28 28\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <rect\n            x=\"2\"\n            y=\"2\"\n            width=\"24\"\n            height=\"24\"\n            rx=\"5\"\n            ry=\"5\"\n            fill=\"#BEDBB0\"\n          />\n          <path\n            d=\"M14.2188 9.625V18.8125\"\n            stroke=\"#161616\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n          <path\n            d=\"M9.625 14.2188H18.8125\"\n            stroke=\"#161616\"\n            strokeWidth=\"1.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      );\n    case 'eye1':\n      return (\n        <svg\n          id=\"eye1\"\n          viewBox=\"0 0 32 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M.75 9s3-6 8.25-6 8.25 6 8.25 6-3 6-8.25 6S.75 9 .75 9Z\"\n            stroke=\"#161616\"\n            stroke-width=\"1\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n          <path\n            d=\"M9 11.25a2.25 2.25 0 1 0 0-4.5 2.25 2.25 0 0 0 0 4.5Z\"\n            stroke=\"#161616\"\n            stroke-width=\"1\"\n            stroke-linecap=\"round\"\n            stroke-linejoin=\"round\"\n          />\n        </svg>\n      );\n    \n   \n\n    default:\n      return 'SVG not found';\n  }\n};\n\nSpriteSVG.propTypes = {\n  name: PropTypes.node,\n};\n","import styled from 'styled-components';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 100;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.75);\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nimport { ModalOverlay } from './ModalEditUser.styled';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\nconst ModalEditUser = ({ children, onClose }) => {\n  useEffect(() => {\n    document.body.style.overflow = 'hidden';\n    const handleEscape = event => {\n      if (event.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscape);\n    return () => {\n      document.body.style.overflow = 'unset';\n      window.removeEventListener('keydown', handleEscape);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <ModalOverlay\n      onClick={event => {\n        if (event.target === event.currentTarget) {\n          onClose();\n        }\n      }}\n    >\n      {children}\n    </ModalOverlay>,\n    modalRoot\n  );\n};\n\nModalEditUser.propTypes = {\n  children: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\n\nexport default ModalEditUser;\n","import styled from 'styled-components';\n\nexport const StyledBtn = styled.button`\n  min-width: 132px;\n  padding: 14px 40px;\n  font-family: 'Poppins-600', sans-serif;\n  line-height: 18px;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.28;\n  text-align: center;\n  border-radius: 8px;\n  border: 2px solid transparent;\n  outline: transparent;\n\n`;\n","import styled from 'styled-components';\nimport { StyledBtn } from 'components/shared/Buttons/LigthBtn.styled';\n\nexport const StyledModal = styled.div`\n  width: 335px;\n  padding: 24px 24px;\n  border-radius: 8px;\n  background-color: var(--popupBackground);\n  transform: translate(-50%, -50%);\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-bottom: 25px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\n  @media screen and (min-width: 768px) {\n    width: 400 px;\n  }\n`;\n\nexport const StyledBtnClose = styled.button`\n  width: 18px;\n  height: 18px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: fixed;\n  top: 14px;\n  right: 14px;\n  svg {\n    stroke: var(--buttonColor);\n  }\n`;\n\nexport const StyledModalHeader = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledUserFoto = styled.img`\n  width: 68px;\n  height: 68px;\n  margin-bottom: 39px;\n  text-align: center;\n  border-radius: 8%;\n\n  // @media screen and (min-width: 768px) {\n  //   margin-bottom: 66px;\n  // }\n`;\n\nexport const StyledInputAdd = styled.input`\n  display: none;\n`;\n\nexport const StyledSvgWrapper = styled.button`\n  width: 24px;\n  height: 24px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: absolute;\n  top: 98px;\n`;\n\nexport const StyledModalForm = styled.form`\n  width: 100%;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  position: relative;\n`;\n\nexport const StyledModalInput = styled.input`\n  width: 100%;\n  margin-bottom: 18px;\n  padding: 16px 24px;\n  font-family: 'Poppins-400', sans-serif;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 18px;\n  color: var(--primaryTextColor);\n  background-color: transparent;\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  opacity: 0.8;\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: 14px;\n  }\n\n  &:focus {\n    outline: 1px solid var(--createButtonHover);\n  }\n`;\n\nexport const StyledBtnEdit = styled.button`\n  width: 26px;\n  height: 26px;\n  padding: 0;\n  background-color: transparent;\n  border: none;\n  border-radius: 8px;\n  position: absolute;\n  top: 19px;\n  right: 12px;\n`;\n\nexport const StyledBtnSave = styled(StyledBtn)`\n  width: 100%;\n  padding: 18px 96px;\n  font-family: 'Poppins-600', sans-serif;\n  line-height: 18px;\n  color: var(--addCardButtonColor);\n  background-color: var(--addCardButtonBackground);\n  &:hover,\n  &:focus {\n    background-color: var(--btnColorHover);\n  }\n`;\nexport const EditProfileText = styled.p`\n  font-family: 'Poppins-600', sans-serif;\n  line-height: 18px;\n  color: var(--buttonColor)\n`;\nexport const StyledErrorMail = styled.p`\n  position: absolute;\n  top: calc(45% + 5px); /* Расстояние от поля ввода до сообщения об ошибке */\n  left: 0;\n  color: red;\n  font-size: 10px;\n`;\nexport const StyledErrorName = styled.p`\n  position: absolute;\n  top: calc(19% + 5px); \n  left: 0;\n  color: red;\n  font-size: 10px;\n`;\nexport const StyledError = styled.p`\n  position: absolute;\n  top: calc(71% + 5px); \n  left: 0;\n  color: red;\n  font-size: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { updateUser } from '../../../redux/auth/authOperations';\nimport { getUserData } from '../../../redux/auth/authSelectors';\nimport { SpriteSVG } from 'assets/icons/SvgIcons';\nimport userFoto from 'assets/img/userWhite.png';\nimport ModalEditUser from 'components/Modals/ModalEditUser/ModalEditUser';\nimport {\n  StyledBtnClose,\n  StyledBtnEdit,\n  StyledBtnSave,\n  StyledInputAdd,\n  StyledModal,\n  StyledModalForm,\n  StyledModalHeader,\n  StyledModalInput,\n  StyledSvgWrapper,\n  StyledUserFoto,\n  EditProfileText,\n  StyledError,\n  StyledErrorMail,\n  StyledErrorName,\n} from './UserInfoModal.styled';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst validationSchema = Yup.object({\n  userName: Yup.string().min(5, 'Min 5'),\n  userEmail: Yup.string().email('Invalid email'),\n  userPassword: Yup.string().min(8, 'Min 8'),\n});\n\nexport const UserInfoModal = ({ onClose }) => {\n  const dispatch = useDispatch();\n  const { name, email, avatarURL } = useSelector(getUserData);\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [showPassword, setShowPassword] = useState(false);\n  const [previewImage, setPreviewImage] = useState(null);\n\n  const handleFileChange = file => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setPreviewImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n\n    setSelectedFile(file);\n  };\n\n  const onFileChange = event => {\n    const file = event.target.files[0];\n    handleFileChange(file);\n  };\n\n  // const onUpload = async event => {\n  //   if (event.target.type === 'file') {\n  //     const file = event.target.files[0];\n  //     handleFileChange(file);\n  //     return;\n  //   }\n\n  //   event.preventDefault();\n\n  //   const formData = new FormData();\n  //   formData.append('avatar', selectedFile);\n  //   formData.append('username', changedName || username);\n  //   formData.append('email', email);\n  //   formData.append('password', changedPassword || '');\n\n  //   dispatch(updateUser(formData))\n  //     .unwrap()\n  //     .then(() => {\n  //       onClose();\n  //     })\n  //     .catch(error => {\n  //       console.error('Error updating user', error.message);\n  //     });\n  // };\n\n  const formik = useFormik({\n    initialValues: { userName: name, userEmail: email, userPassword: '' },\n    validationSchema: validationSchema,\n    onSubmit: async values => {\n      try {\n        const formData = new FormData();\n        formData.append('avatar', selectedFile);\n        formData.append('username', values.userName);\n        formData.append('email', values.userEmail);\n        formData.append('password', values.userPassword);\n        dispatch(updateUser(formData));\n        onClose(); // Закрываем модальное окно после успешной отправки данных\n      } catch (error) {\n        console.error('Error updating user', error.message);\n      }\n    },\n  });\n\n  return (\n    <ModalEditUser onClose={onClose}>\n      <StyledModal>\n        <StyledBtnClose onClick={onClose}>\n          <SpriteSVG name=\"close\" />\n        </StyledBtnClose>\n        <EditProfileText>Edit profile</EditProfileText>\n        <StyledModalHeader>\n          <StyledUserFoto\n            src={previewImage || avatarURL || userFoto}\n            alt={previewImage ? 'Preview' : avatarURL ? 'Foto' : 'Default foto'}\n          />\n\n          <StyledInputAdd type=\"file\" onChange={onFileChange} />\n          <StyledSvgWrapper\n            onClick={() => document.querySelector('input[type=file]').click()}\n          >\n            <SpriteSVG name=\"add-modal-photo\" />\n          </StyledSvgWrapper>\n        </StyledModalHeader>\n        <StyledModalForm onSubmit={formik.handleSubmit}>\n          <StyledModalInput\n            name=\"userName\"\n            value={formik.values.userName || name}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.userName && formik.touched.userName && (\n            <StyledErrorName>{formik.errors.userName}</StyledErrorName>\n          )}\n          <StyledModalInput\n            name=\"userEmail\"\n            value={formik.values.userEmail || email}\n            onChange={formik.handleChange}\n          />\n          {formik.errors.userEmail && formik.touched.userEmail && (\n            <StyledErrorMail>{formik.errors.userEmail}</StyledErrorMail>\n          )}\n          <div style={{ position: 'relative' }}>\n            <StyledModalInput\n              name=\"userPassword\"\n              placeholder=\"Password\"\n              type={showPassword ? 'text' : 'password'}\n              value={formik.values.userPassword || ''}\n              onChange={formik.handleChange}\n            />\n            <StyledBtnEdit\n              type=\"button\"\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              <SpriteSVG name=\"eye1\" />\n            </StyledBtnEdit>\n          </div>\n          {formik.errors.userPassword && formik.touched.userPassword && (\n            <StyledError>{formik.errors.userPassword}</StyledError>\n          )}\n          <StyledBtnSave type=\"submit\" onClick={formik.handleSubmit}>\n            Send\n          </StyledBtnSave>\n        </StyledModalForm>\n      </StyledModal>\n    </ModalEditUser>\n  );\n};\n\nUserInfoModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { User } from '../User/User';\nimport { UserInfoModal } from '../UserInfoModal/UserInfoModal';\n\nconst HeaderUserBar = () => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n  return (\n    <div>\n      <User handleOpenModal={handleOpenModal} />\n\n      {isModalOpen && <UserInfoModal onClose={handleCloseModal} />}\n    </div>\n  );\n};\n\nexport default HeaderUserBar;\n","import styled from 'styled-components';\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n  height: 60px;\n  margin-left: auto;\n  margin-right: auto;\n  gap: 14px;\n\n  //colors\n  background: var(--headerBgColor);\n  //padding\n  padding: 20px;\n  gap: 14px;\n\n  @media screen and (max-width: 768px) {\n    width: 100%;\n    height: 68px;\n  }\n  @media screen and (min-width: 1439px) {\n    width: calc(-260px + 100vw);\n    left: 260px;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport HeaderSwitchTheme from './HeaderSwitchTheme/HeaderSwitchTheme';\nimport HeaderUserBar from './HeaderUserBar/HeaderUserBar';\nimport { HeaderWrapper } from './Header.styled';\nimport { ReactComponent as BurgerIcon } from '../../images/burger.svg';\n\nconst Header = ({ toggleSidebar }) => {\n  const burgerIconStyles = {\n    cursor: 'pointer',\n    position: 'absolute',\n    left: '32px',\n  };\n\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth);\n    };\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  if (windowWidth >= 1439) {\n    Object.assign(burgerIconStyles, {\n      display: 'none',\n    });\n  }\n\n  return (\n    <HeaderWrapper>\n      <BurgerIcon onClick={toggleSidebar} style={burgerIconStyles} />\n\n      <HeaderSwitchTheme />\n      <HeaderUserBar />\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const SideBarMenu = styled.div`\n  padding: 24px;\n  width: 260px;\n  height: 100vh;\n  background-color: var(--sidebarBgColor);\n  transition: transform 0.3s linear;\n  display: flex;\n  flex-direction: column;\n  // overflow: auto;\n\n  /* Tablet */\n  // @media screen and (max-width: 767px) {\n  @media screen and (max-width: 1439px) {\n    top: 0;\n    position: absolute;\n    left: -260px;\n    z-index: 100;\n    &.active {\n      transform: translateX(100%);\n      z-index: 10;\n    }\n  }\n\n  /* Mobile */\n  @media screen and (max-width: 767px) {\n    padding: 14px;\n    /* max-width: 225px; */\n    width: 225px;\n    left: -225px;\n  }\n\n  /* Desktop - Sidebar visible for screens larger than 1439px */\n  @media screen and (min-width: 1439px) {\n    left: 0;\n    position: absolute;\n  }\n\n  /* @media screen and (min-height: 662px) {\n    height: 100vh;\n  } */\n`;\n\nexport const ButtonBurger = styled.button`\n  display: none;\n\n  /* Tablet */\n  @media screen and (max-width: 1439px) {\n    border-color: transparent;\n    width: 32px;\n    height: 32px;\n    background-color: var(--headerBgColor);\n    display: block;\n    position: fixed;\n    top: 18px;\n    left: 32px;\n    z-index: 100;\n    &.active {\n      display: none;\n    }\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: transparent;\n  display: none;\n  // overflow: auto;\n\n  &.active {\n    display: block;\n    z-index: 9;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const LogoComponentStyled = styled.div`\n  margin-bottom: 60px;\n  height: 32px;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n\n  //Mobile\n  @media screen and (max-width: 375px) {\n    margin-bottom: 70px;\n  }\n`;\n\nexport const TaskPro = styled.span`\n  font-weight: 600;\n  line-height: 1.5;\n  color: var(--createNewBoard);\n`;\n\n//Color logo\nexport const LogoPath = styled.path`\n  fill: var(--logoBackground); // when adding a topic, swap places\n`;\n//Color Logo centeral\nexport const LogoPathCentral = styled.path`\n  fill: var(--logoIcon); // when adding a topic, swap places\n`;\n","import {\n  LogoComponentStyled,\n  TaskPro,\n  LogoPath,\n  LogoPathCentral,\n} from './LogoComponent.styled';\n// import icons from '../../../images/sprite.svg';\n\nconst LogoComponent = () => {\n  return (\n    <LogoComponentStyled>\n      {/*  Провсяквипадок. свг зі Sprite.svg\n      <svg width=\"32\" height=\"32\" style={svgStyles}>\n        <use href={`${icons}#icon-logo `}></use>\n      </svg> \n      */}\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        width=\"32\"\n        height=\"32\"\n        viewBox=\"0 0 32 32\"\n      >\n        <LogoPath d=\"M24 0h-16c-4.418 0-8 3.582-8 8v0 16c0 4.418 3.582 8 8 8v0h16c4.418 0 8-3.582 8-8v0-16c0-4.418-3.582-8-8-8v0z\"></LogoPath>\n        <LogoPathCentral d=\"M13.331 23.027c0.245-1.272 0.453-2.61 0.747-3.949 0.145-0.7-0.031-1-0.814-0.946-0.784 0.054-1.657 0.027-2.49 0-0.833-0.026-0.982-0.446-0.502-1.044 2.362-2.918 4.752-5.8 7.133-8.673 0.267-0.326 0.575-0.558 1.014-0.313 0.44 0.246 0.349 0.55 0.276 0.915-0.262 1.339-0.48 2.677-0.77 3.989-0.149 0.678 0.046 0.919 0.752 0.892 0.318-0.017 0.69-0.027 1.064-0.027s0.746 0.010 1.116 0.029l-0.052-0.002c0.403 0 0.932-0.21 1.14 0.34 0.209 0.548-0.23 0.78-0.452 1.106-1.327 1.642-2.227 2.729-3.135 3.81l0.383-0.468c-1.361 1.624-2.712 3.242-4.052 4.854-0.262 0.317-0.556 0.571-1.005 0.41-0.448-0.16-0.353-0.54-0.353-0.923z\"></LogoPathCentral>\n      </svg>\n\n      <TaskPro>Task Pro</TaskPro>\n    </LogoComponentStyled>\n  );\n};\n\nexport default LogoComponent;\n","import styled from 'styled-components';\n\nexport const Heading = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  color: var(--textBoardColor);\n  margin-bottom: 8px;\n`;\n\nexport const Container = styled.div`\n  padding: 14px 0;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  position: relative;\n  border-top: 1px solid var(--modalGorizontalBorderColor);\n  border-bottom: 1px solid var(--modalGorizontalBorderColor);\n  margin-bottom: 40px;\n`;\n\nexport const Text = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--createNewBoard);\n`;\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 36px;\n  border-radius: 6px;\n  border: none;\n  background-color: var(--createNewBoardIconBgColor);\n  cursor: pointer;\n  transition: background-color 250ms ease-in-out;\n\n  &:hover {\n    background-color: var(--btnColorHover);\n  }\n\n  svg {\n    fill: none;\n    stroke: black;\n  }\n`;\n","import ModalBord from '../../../../src/components/Modals/ModalBord/ModalBord';\nimport { useState } from 'react';\n\nimport { Heading, Button, Text, Container } from './CreateBoard.styled';\nimport icons from '../../../images/sprite.svg';\n\nconst CreateBord = ({onCloseSideBar}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  \n  const handleButtonClick = () => {\n    const currentWidth = window.innerWidth;\n\n\n  if (currentWidth <= 1439) {\n    openModal();\n    onCloseSideBar();\n  } else {\n    openModal();\n  }\n\n  }\n\n  return (\n    <>\n      <Heading>My boards</Heading>\n      <Container>\n        <Text>\n          Create a <br />\n          new board\n        </Text>\n        <Button onClick={handleButtonClick}>\n          <svg width=\"40px\" height=\"36px\">\n            <use href={`${icons}#icon-plus`}></use>\n          </svg>\n        </Button>\n      </Container>\n\n      <ModalBord\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={() => setIsOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default CreateBord;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BoardsContainer = styled.div`\n  position: relative;\n  width: 260px;\n  left: -24px;\n  min-height: 61px;\n  overflow-y: auto;\n  overflow-x: hidden;\n  margin-bottom: 40px;\n  cursor: pointer;\n\n  @media screen and (max-width: 767px) {\n    width: 225px;\n    left: -14px;\n  }\n`;\n\nexport const ItemContainer = styled(NavLink)`\n  height: 61px;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  padding: 20px 24px;\n  margin-bottom: 4px;\n\n  &:hover,\n  &:active,\n  & .activeBoard {\n    background: var(--currentProjBgColor);\n  }\n\n  &.active {\n    background: var(--currentProjBgColor);\n\n    & .activeBoardIcon {\n      & svg {\n        stroke: var(--createNewBoard);\n      }\n    }\n\n    & .activeBoardTitle {\n      color: var(--createNewBoard);\n      opacity: 1;\n    }\n\n    & .activeBoardButton {\n      display: block;\n      cursor: pointer;\n      & svg {\n        stroke: var(--textBoardColor);\n      }\n    }\n    & .activeLine {\n      background: var(--iconLogOut);\n    }\n  }\n`;\n\nexport const Icon = styled.div`\n  & svg {\n    fill: none;\n    stroke: var(--textBoardColor);\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n\n  color: var(--textBoardColor);\n`;\n\nexport const ButtonContainer = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-left: auto;\n`;\n\nexport const Button = styled.button`\n  padding: 0;\n  background: none;\n  border: none;\n  fill: none;\n  stroke: none;\n  display: none;\n`;\n\nexport const CurrentLine = styled.div`\n  border-radius: 4px 0 0 4px;\n  width: 4px;\n  height: 61px;\n  position: absolute;\n  left: 248px;\n\n  @media screen and (max-width: 767px) {\n    left: 213px;\n\n    & .activeLine {\n      background: var(--iconLogOut);\n    }\n  }\n`;\n","import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const Header = styled.h3`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 24px 0;\n  padding: 0;\n`;\n\nexport const Input = styled(Field)`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  width: 100%;\n  height: 49px;\n  background: var(--popupBackground);\n  margin-bottom: 24px;\n  padding: 0 18px;\n  position: relative;\n\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const IconsHeaderIcons = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: left;\n  gap: 8px;\n  margin: 0 0 24px 0;\n  padding: 0;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--iconCardColor);\n    fill: transparent;\n  }\n\n  .icons-field {\n    display: none;\n  }\n\n  input:checked + svg {\n    stroke: var(--primaryTextColor);\n  }\n`;\n\nexport const HeaderBackground = styled.p`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n  margin: 0 0 14px 0;\n`;\n\nexport const BackgroundContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 4px;\n  flex-wrap: wrap;\n  margin: 0 0 40px 0;\n  stroke-width: 1px;\n  stroke: var(--defaultAvatarBgColor);\n  width: 252px;\n\n  .background-field {\n    display: none;\n  }\n\n  img {\n    cursor: pointer;\n  }\n\n  input:checked + img {\n    border: 2px solid var(--defaultAvatarBgColor);\n    border-radius: 6px;\n  }\n`;\n\nexport const BoardCreateBtn = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  width: 100%;\n  height: 49px;\n  margin-left: auto;\n  margin-right: auto;\n  background: var(--addCardButtonBackground);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  font-family: 'Poppins', sans-serif;\n  font-weight: 500;\n  font-size: 14px;\n  letter-spacing: -0.02em;\n  color: var(--addCardButtonColor);\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1px;\n    stroke: var(--addPlusIconColor);\n  }\n\n  &:hover {\n    background-color: var(--createButtonHover);\n  }\n`;\n\nexport const ModalForm = styled(Form)`\n  padding: 24px;\n  position: relative;\n  background: var(--popupBackground);\n  border: 1px solid var(--addCardButtonBackground);\n  border-radius: 8px;\n`;\n\nexport const SvgCloseBtn = styled.button`\n  position: absolute;\n  background: transparent;\n  border: none;\n  right: 14px;\n  top: 14px;\n  cursor: pointer;\n\n  svg {\n    stroke-width: 1.5px;\n    stroke: var(--buttonColor);\n    width: 18px;\n    height: 18px;\n  }\n`;\n\nexport const Img = styled.img`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const SubmitSvgWrapper = styled.div`\n  width: 28px;\n  height: 28px;\n  background-color: var(--addCardButtonColor);\n  border-radius: 6px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n  color: red;\n  position: absolute;\n  top: 50px;\n  left: 24px;\n  font-size: 10px;\n`;\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nimport { ToastContainer, toast, Slide } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport icons from '../../../../src/images/sprite.svg';\nimport Image0 from '../../../../src/images/background/00.png';\nimport Image1 from '../../../../src/images/background/01.png';\nimport Image2 from '../../../../src/images/background/02.png';\nimport Image3 from '../../../../src/images/background/03.png';\nimport Image4 from '../../../../src/images/background/04.png';\nimport Image5 from '../../../../src/images/background/05.png';\nimport Image6 from '../../../../src/images/background/06.png';\nimport Image7 from '../../../../src/images/background/07.png';\nimport Image8 from '../../../../src/images/background/08.png';\nimport Image9 from '../../../../src/images/background/09.png';\nimport Image10 from '../../../../src/images/background/10.png';\nimport Image11 from '../../../../src/images/background/11.png';\nimport Image12 from '../../../../src/images/background/12.png';\nimport Image13 from '../../../../src/images/background/13.png';\nimport Image14 from '../../../../src/images/background/14.png';\nimport Image15 from '../../../../src/images/background/15.png';\n\nimport {\n  Header,\n  Input,\n  IconsHeaderIcons,\n  IconsContainer,\n  HeaderBackground,\n  BackgroundContainer,\n  BoardCreateBtn,\n  ModalForm,\n  SvgCloseBtn,\n  Img,\n  SubmitSvgWrapper,\n  Error,\n} from './EditBoardForm.styled';\nimport { editBoard } from '../../../redux/auth/authOperations';\nimport { getBoardSelector } from '../../../redux/auth/authSelectors';\nimport { useParams } from 'react-router';\n\nconst BoardFormSchema = Yup.object().shape({\n  title: Yup.string().min(2, 'Too short').required('This field is required!'),\n});\n\nconst EditBoardForm = ({ closeModalWindow, id }) => {\n  const dispatch = useDispatch();\n  const { idBoard } = useParams();\n\n  const boards = useSelector(getBoardSelector);\n  const { title, icnboard, background } = boards.find(board => {\n    return board._id === idBoard;\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        title: title,\n        icnboard: icnboard,\n        background: background,\n      }}\n      validationSchema={BoardFormSchema}\n      onSubmit={(values, actions) => {\n        if (\n          title === values.title &&\n          icnboard === values.icnboard &&\n          background === values.background\n        ) {\n          return toast.warning('Data does not changed');\n        }\n\n        dispatch(editBoard({ id, values }))\n          .unwrap()\n          .then()\n          .catch(error => error.message);\n        actions.resetForm();\n        closeModalWindow();\n      }}\n    >\n      <ModalForm>\n        <Header>Edit board</Header>\n        <SvgCloseBtn type=\"button\" onClick={closeModalWindow}>\n          <svg>\n            <use href={`${icons}#icon-close`}></use>\n          </svg>\n        </SvgCloseBtn>\n\n        <label htmlFor=\"title\"></label>\n        <Error name=\"title\" component=\"div\" />\n        <Input name=\"title\" placeholder=\"Title\" />\n\n        <IconsHeaderIcons>Icons</IconsHeaderIcons>\n        <IconsContainer>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-project\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-project`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-star\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-star`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-loading\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-loading`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-puzzle\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-puzzle`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-container\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-container`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-lightning\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-lightning`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-colors\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-colors`}></use>\n            </svg>\n          </label>\n          <label>\n            <Field\n              className=\"icons-field\"\n              type=\"radio\"\n              name=\"icnboard\"\n              value=\"icon-hexagon\"\n            />\n            <svg width=\"18px\" height=\"18px\">\n              <use href={`${icons}#icon-hexagon`}></use>\n            </svg>\n          </label>\n        </IconsContainer>\n\n        <HeaderBackground>Background</HeaderBackground>\n        <BackgroundContainer>\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"0\"\n            />\n            <Img src={Image0} alt=\"background 0\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"7\"\n            />\n            <Img src={Image7} alt=\"background 7\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"2\"\n            />\n            <Img src={Image2} alt=\"background 2\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"1\"\n            />\n            <Img src={Image1} alt=\"background 1\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"8\"\n            />\n            <Img src={Image8} alt=\"background 8\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"3\"\n            />\n            <Img src={Image3} alt=\"background 3\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"4\"\n            />\n            <Img src={Image4} alt=\"background 4\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"9\"\n            />\n            <Img src={Image9} alt=\"background 9\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"5\"\n            />\n            <Img src={Image5} alt=\"background 5\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"10\"\n            />\n            <Img src={Image10} alt=\"background 10\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"6\"\n            />\n            <Img src={Image6} alt=\"background 6\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"11\"\n            />\n            <Img src={Image11} alt=\"background 11\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"12\"\n            />\n            <Img src={Image12} alt=\"background 12\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"13\"\n            />\n            <Img src={Image13} alt=\"background 13\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"14\"\n            />\n            <Img src={Image14} alt=\"background 14\" />\n          </label>\n\n          <label>\n            <Field\n              className=\"background-field\"\n              type=\"radio\"\n              name=\"background\"\n              value=\"15\"\n            />\n            <Img src={Image15} alt=\"background 15\" />\n          </label>\n        </BackgroundContainer>\n\n        <BoardCreateBtn type=\"submit\">\n          <SubmitSvgWrapper>\n            <svg width=\"28px\" height=\"28px\">\n              <use href={`${icons}#icon-plus`}></use>\n            </svg>\n          </SubmitSvgWrapper>\n          Edit\n        </BoardCreateBtn>\n        <ToastContainer\n          style={{ width: '280px' }}\n          position=\"bottom-center\"\n          autoClose={1500}\n          transition={Slide}\n          closeOnClick={true}\n          pauseOnHover={false}\n          draggable={false}\n          limit={1}\n          theme=\"colored\"\n        />\n      </ModalForm>\n    </Formik>\n  );\n};\n\nexport default EditBoardForm;\n","import Modal from 'react-modal';\nimport EditBoardForm from '../../Sidebar/EditBoardForm/EditBoardForm';\nimport { ModalCustom } from './ModalBord.styled';\n\nModal.setAppElement('#root');\n\nconst EditModalBord = ({ isOpen, closeModal, id }) => {\n  return (\n    <ModalCustom\n      isOpen={isOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Modal for Edit Board\"\n    >\n      <EditBoardForm id={id} closeModalWindow={closeModal} />\n    </ModalCustom>\n  );\n};\n\nexport default EditModalBord;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport {\n  ItemContainer,\n  Title,\n  ButtonContainer,\n  CurrentLine,\n  Button,\n  Icon,\n} from './BoardsList.styled';\n\nimport icons from '../../../images/sprite.svg';\n\nimport { deleteBoard } from '../../../redux/auth/authOperations';\nimport EditModalBord from 'components/Modals/ModalBord/EditModalBoard';\n\nconst BoardItem = ({ to, id, icon, title }) => {\n  const dispatch = useDispatch();\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  return (\n    <>\n      <ItemContainer to={to} className={'activeBoard'}>\n        <Icon className={'activeBoardIcon'}>\n          <svg width=\"18\" height=\"18\">\n            <use href={`${icons}#${icon}`}></use>\n          </svg>\n        </Icon>\n        <Title className={'activeBoardTitle'}>{title}</Title>\n        <ButtonContainer>\n          <Button className={'activeBoardButton'} onClick={() => openModal()}>\n            <svg width=\"16\" height=\"16\">\n              <use href={`${icons}#icon-pencil`}></use>\n            </svg>\n          </Button>\n          <Button\n            className={'activeBoardButton'}\n            onClick={() => dispatch(deleteBoard(id))}\n          >\n            <svg width=\"16\" height=\"16\">\n              <use href={`${icons}#icon-trash`}></use>\n            </svg>\n          </Button>\n        </ButtonContainer>\n        <CurrentLine className={'activeLine'} />\n      </ItemContainer>\n      <EditModalBord\n        id={id}\n        isOpen={isOpen}\n        openModal={openModal}\n        closeModal={() => setIsOpen(false)}\n      />\n    </>\n  );\n};\n\nexport default BoardItem;\n","import { useSelector } from 'react-redux';\nimport BoardItem from './BoardItem';\nimport { BoardsContainer } from './BoardsList.styled';\n\nimport { selectBoard } from '../../../redux/task/taskSelectors';\n\nconst BoardsList = () => {\n  const boards = useSelector(selectBoard);\n\n  let reverseBoards = [];\n  if (boards) {\n    boards.map(board => {\n      return reverseBoards.unshift(board);\n    });\n  }\n\n  return (\n    <BoardsContainer>\n      {boards && boards.length > 0 ? (\n        <ul>\n          {reverseBoards.map(board => (\n            <li key={board._id}>\n              <BoardItem\n                to={`/home/${board._id}`}\n                id={board._id}\n                icon={board.icnboard}\n                title={board.title}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <div style={{ display: 'none' }}></div>\n      )}\n    </BoardsContainer>\n  );\n};\n\nexport default BoardsList;\n","import styled from 'styled-components';\n\nexport const ContainerHelp = styled.div`\n  margin-top: auto;\n  background: var(--helpBgColor);\n  width: 212px;\n  height: 65px;\n  padding-left: 20px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n\n  @media(max-width:768px) {\n    width: 197px;\n    padding-top: 18px;\n\n  }\n`;\n\nexport const ImgHelp = styled.img`\n  width: 54px;\n  height: 78px;\n  margin-top: 10px;\n`;\n\nexport const TextHelp = styled.p`\n  width: 163px;\n  margin-top: 14px;\n  color: var(--needHelpBtn);\n  font-size: 12px;\n  line-height: 1.34;\n  letter-spacing: -0.24px;\n\n  @media (min-width: 768px) {\n    width: 164px;\n    font-size: 14px;\n    line-height: 1.4;\n    letter-spacing: -0.28px;\n  }\n`;\n\nexport const Span = styled.span`\n  color: var(--greenGreenBlueColor);\n`;\n\nexport const IconHelp = styled.svg`\n  width: 20px;\n  height: 20px;\n  fill: none;\n  stroke: var(--needHelpBtn);\n`;\n\nexport const QuestionHelp = styled.span`\n  font-weight: 500;\n  font-size: 12px;\n  letter-spacing: -0.02em;\n  cursor: pointer;\n  color: var(--needHelpBtn);\n  padding-top: 15px;\n  margin-bottom: 2px;\n`;\n\nexport const ContainerText = styled.div`\n   background-color: var(--helpBgColor);\n    margin-top: -204px;\n    width: 212px;\n    margin-left: -20px;\n    padding-left: 20px;\n    border-radius: 8px;\n    border-bottom-right-radius: 0;\n    border-bottom-left-radius: 0;\n\n    display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\n\n  @media(min-width:375px) and (max-width: 768px) {\n    width: 197px;\n  }\n`;\n\nexport const BtnNeedHelp = styled.div`\n  display: flex;\n  align-items: flex-end;\n  gap: 8px;\n  cursor: pointer;\n  \n  &:hover + ${ContainerText} {\n    display: block;\n\n  }\n`;","import styled from 'styled-components';\nimport ReactModal from 'react-modal';\n\nexport const OverlayModal = styled(ReactModal)`\n  position: relative;\n  border-radius: 8px;\n  width: 400px;\n  height: 355px;\n  top: 50%;\n  right: auto;\n  bottom: auto;\n  left: 50%;\n  margin-right: -50%;\n  transform: translate(-50%, -50%);\n  padding: 0%;\n  z-index: 1000;\n`;\n\nexport const ModalContainerHelp = styled.div`\n  background-color: var(--popupBackground);\n  border-radius: 8px;\n  border: 1px solid var(--addCardButtonBackground);\n  z-index: 20;\n  position: fixed;\n  padding-top: 23px;\n  width: 400px;\n  height: 355px;\n\n  @media (max-width: 768px) {\n    width: 335px;\n    margin-left: 30px;\n  }\n`;\n\nexport const FormHelp = styled.form`\n  display: inline-block;\n`;\n\nexport const ModalTitleHelp = styled.h2`\n  margin-left: 24px;\n  font-weight: 500;\n  font-size: 18px;\n  letter-spacing: -0.02em;\n  color: var(--primaryTextColor);\n`;\n\nexport const InputHelp = styled.input`\n  border: 1px solid var(--greenGreenBlueColor);\n  border-radius: 8px;\n  background-color: var(--popupBackground);\n  width: 352px;\n  height: 49px;\n  margin-left: 24px;\n  margin-right: 24px;\n  padding-left: 15px;\n  color: var(--primaryTextColor);\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    color: var(--secondaryTextColor);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 768px) {\n    width: 287px;\n  }\n`;\n\nexport const CommentHelp = styled.textarea`\n  border: 1px solid var(--greenGreenBlueColor);\n  height: 120px;\n  border-radius: 8px;\n  background-color: black;\n  background-color: var(--popupBackground);\n  width: 352px;\n  height: 120px;\n  margin: 14px 24px 0 24px;\n  resize: none;\n  padding-left: 15px;\n  padding-top: 14px;\n  color: var(--primaryTextColor);\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    letter-spacing: -0.02em;\n    color: var(--secondaryTextColor);\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 768px) {\n    width: 287px;\n  }\n`;\n\nexport const BtnSendHelp = styled.button`\n  border-radius: 8px;\n  border-color: transparent;\n  cursor: pointer;\n  width: 352px;\n  height: 49px;\n  margin: 24px;\n  background-color: var(--greenGreenBlueColor);\n  border: none;\n  color: var(--addCardButtonColor);\n  &:hover {\n    background-color: var(--btnColorHover);\n  }\n  @media (max-width: 768px) {\n    width: 287px;\n  }\n`;\n\nexport const IconHelp = styled.svg`\n  position: relative;\n  left: 370px;\n  bottom: 34px;\n  cursor: pointer;\n  width: 18px;\n  height: 18px;\n  fill: none;\n  stroke: var(--buttonColor);\n\n  @media (max-width: 768px) {\n    left: 305px;\n  }\n`;\n","import { Formik } from 'formik';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\n\nimport icons from '../../../images/sprite.svg';\nimport {\n  ModalContainerHelp,\n  FormHelp,\n  InputHelp,\n  ModalTitleHelp,\n  CommentHelp,\n  BtnSendHelp,\n  IconHelp,\n} from '../../../components/Modals/ModalNeedHelp/ModalNeedHelp.styled';\n\nimport { fetchHelpApi } from '../../../services/backApi';\nimport { getUserEmail } from '../../../redux/auth/authSelectors';\n\n\nconst NeedHelpSchema = Yup.object().shape({\n  email: Yup.string().email('Invalid email').matches(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/, {\n      message: 'Email error',\n      excludeEmptyString: true,\n    }).required('Email is required'),\n  comment: Yup.string().required('Comment is required'),\n});\n\n\nconst FormNeedHelp = ({ closeModal }) => {\n  const userEmail = useSelector(getUserEmail);\n\n  const handleSubmit = (values, { resetForm }) => {\n    fetchHelpApi(values);\n    resetForm();\n    closeModal();\n  };\n\n  return (\n    <ModalContainerHelp>\n      <ModalTitleHelp>Need help</ModalTitleHelp>\n      \n       <IconHelp onClick={closeModal}>\n        <use href={`${icons}#icon-close`}></use>\n      </IconHelp>\n\n      <Formik\n        initialValues={{\n          email: `${userEmail}`,\n          comment: '',\n        }}\n        validationSchema={NeedHelpSchema}\n        onSubmit={handleSubmit}\n      >\n        {({ handleChange, values }) =>(\n          <FormHelp>\n            <InputHelp\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"Email address\"\n              onChange={handleChange}\n              value={values.email}\n            />\n            <CommentHelp\n              type=\"comment\"\n              name=\"comment\"\n              required\n              placeholder=\"Comment\"\n              onChange={handleChange}\n            />\n            <BtnSendHelp type=\"submit\">Send</BtnSendHelp>\n          </FormHelp>\n        )}\n      </Formik>\n\n    </ModalContainerHelp>\n  );\n};\n\nexport default FormNeedHelp;","import FormNeedHelp from '../../Sidebar/NeedHelp/FormNeedHelp';\nimport { OverlayModal } from './ModalNeedHelp.styled';\nimport ReactModal from 'react-modal';\n\nReactModal.setAppElement('#root');\n\nconst ModalNeedHelp = ({ isOpen, onClose }) => {\n  return (\n    <OverlayModal isOpen={isOpen} onRequestClose={onClose}>\n      <FormNeedHelp closeModal={onClose} />\n    </OverlayModal>\n  );\n};\n\nexport default ModalNeedHelp;\n","import { useState } from 'react';\n\nimport {\n  ContainerHelp,\n  ImgHelp,\n  TextHelp,\n  IconHelp,\n  Span,\n  QuestionHelp,\n  BtnNeedHelp,\n  ContainerText,\n} from './NeedHelp.styled.js';\n\nimport ModalNeedHelp from '../../Modals/ModalNeedHelp/ModalNeedHelp.jsx';\nimport image from 'images/need-help.png';\nimport icons from '../../../images/sprite.svg';\n\nconst NeedHelp = ({onCloseSideBar}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isHoverText, setIsHoverText] = useState(false);\n\n\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleButtonClick = () => {\n     const currentWidth = window.innerWidth;\n\n\n  if (currentWidth <= 1439) {\n    openModal();\n    onCloseSideBar();\n    \n  } else {\n    openModal();\n    console.log(\"click\")\n  }\n\n  }\n\n  return (\n    <ContainerHelp>\n\n    <ContainerText isVisible={isHoverText}>\n      <ImgHelp src={image} alt=\"Help\" />\n\n      <TextHelp>\n        If you need help with\n        <Span> TaskPro</Span>, check out our\n        support resources or reach out to our customer support team.\n      </TextHelp>\n       </ContainerText>\n\n      <BtnNeedHelp onMouseEnter={() => setIsHoverText(true)} onMouseLeave={() => setIsHoverText(false)}>\n        <IconHelp>\n          <use href={`${icons}#icon-help`}></use>\n        </IconHelp>\n        <QuestionHelp onClick={handleButtonClick}> Need help? </QuestionHelp>\n      </BtnNeedHelp>\n\n      <ModalNeedHelp isOpen={isModalOpen} onClose={closeModal} />\n    </ContainerHelp>\n  );\n};\n\nexport default NeedHelp;","import styled from 'styled-components';\n\nexport const StyledImg = styled.div`\n  width: 32px;\n  height: 32px;\n  fill: none;\n  stroke: var(--iconLogOut);\n`;\n\nexport const StyledDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  margin-top: 24px;\n  gap: 14px;\n  width: 110px;\n\n  font-weight: 500;\n  font-size: 16px;\n  color: var(--createNewBoard);\n  cursor: pointer;\n`;\n","import { useDispatch } from 'react-redux';\nimport icons from '../../../images/sprite.svg';\nimport { StyledDiv, StyledImg } from './StyledLogOut';\nimport { logout } from '../../../redux/auth/authOperations';\nimport { useNavigate } from 'react-router-dom';\n\n\nconst LogOut = () => {\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    \n    const onLogOut = () => {\n        dispatch(logout());\n        navigate('/');\n    }\n\n    return (\n      <StyledDiv onClick={onLogOut}>\n        <StyledImg >\n          <svg width=\"32\" height=\"32\">\n            <use href={`${icons}#icon-logout`}></use>\n          </svg>\n        </StyledImg>\n        <p>Log Out</p>\n      </StyledDiv>\n    );\n};\n\nexport default LogOut;","import { SideBarMenu, Overlay } from './Sidebar.styled';\nimport LogoComponent from './LogoComponent/LogoComponent';\nimport CreateBord from './CreateBord/CreateBord';\nimport BoardsList from './BoardsList/BoardsList';\nimport NeedHelp from './NeedHelp/NeedHelp';\nimport LogOut from './LogOut/LogOut';\nimport React from 'react';\n//import Card from '../../components/ScreensPage/Card/Card';\n\nconst SideBar = ({ isSidebarOpen, onCloseSideBar }) => {\n  return (\n    <>\n      <Overlay\n        className={` ${isSidebarOpen ? 'active' : ''}`}\n        onClick={onCloseSideBar}\n      />\n      <SideBarMenu className={` ${isSidebarOpen ? 'active' : ''}`}>\n        <LogoComponent />\n        <CreateBord onCloseSideBar={onCloseSideBar} />\n        <BoardsList />\n        <NeedHelp onCloseSideBar={onCloseSideBar} />\n        <LogOut />\n      </SideBarMenu>\n    </>\n  );\n};\n\nexport default SideBar;\n","import Header from 'components/Header/Header';\nimport Sidebar from 'components/Sidebar/Sidebar';\nimport { useState } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nconst HomePage = () => {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  const toggleSidebar = () => {\n    setIsSidebarOpen(!isSidebarOpen);\n  };\n  const closeSidebar = () => {\n    setIsSidebarOpen(false);\n  };\n  return (\n    <>\n      <Sidebar isSidebarOpen={isSidebarOpen} onCloseSideBar={closeSidebar} />\n      <Header toggleSidebar={toggleSidebar} />\n      <Outlet />\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["_path","_path2","_path3","ThemeWrapper","styled","_templateObject","_taggedTemplateLiteral","ThemeTitle","_templateObject2","ThemeSelectWraper","_templateObject3","ThemeItems","_templateObject4","props","theme","children","toLowerCase","ThemeSelectIcon","_templateObject5","_useState","useState","_useState2","_slicedToArray","setTheme","_useState3","_useState4","list","setList","useEffect","document","body","setAttribute","savedTheme","localStorage","getItem","handleThemeChange","newTheme","setItem","toogleList","_jsxs","onClick","_jsx","href","sprite","StyledBtnProfile","StyledImgProfile","StyledProfileName","User","_ref","handleOpenModal","_useSelector","useSelector","getUserData","name","avatarURL","_Fragment","src","alt","userFoto","split","map","el","toUpperCase","slice","join","editString","SpriteSVG","id","viewBox","strokeLinejoin","strokeLinecap","strokeMiterlimit","strokeWidth","d","fill","stroke","style","width","height","xmlns","x","y","rx","ry","ModalOverlay","modalRoot","querySelector","onClose","overflow","handleEscape","event","code","window","addEventListener","removeEventListener","createPortal","target","currentTarget","StyledBtn","StyledModal","StyledBtnClose","StyledModalHeader","StyledUserFoto","StyledInputAdd","StyledSvgWrapper","_templateObject6","StyledModalForm","_templateObject7","StyledModalInput","_templateObject8","StyledBtnEdit","_templateObject9","StyledBtnSave","_templateObject10","EditProfileText","_templateObject11","StyledErrorMail","_templateObject12","StyledErrorName","_templateObject13","StyledError","_templateObject14","validationSchema","Yup","userName","min","userEmail","email","userPassword","UserInfoModal","dispatch","useDispatch","selectedFile","setSelectedFile","showPassword","setShowPassword","_useState5","_useState6","previewImage","setPreviewImage","formik","useFormik","initialValues","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","_callee","values","formData","_context","prev","next","FormData","append","updateUser","error","console","message","stop","_x","apply","arguments","ModalEditUser","type","onChange","file","reader","FileReader","onloadend","result","readAsDataURL","handleFileChange","files","click","handleSubmit","value","handleChange","errors","touched","position","placeholder","isModalOpen","setIsModalOpen","HeaderWrapper","_excluded","_extends","Object","assign","i","length","source","key","prototype","hasOwnProperty","call","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBurger","svgRef","title","titleId","ref","ForwardRef","toggleSidebar","burgerIconStyles","cursor","left","innerWidth","windowWidth","setWindowWidth","handleResize","display","BurgerIcon","HeaderSwitchTheme","HeaderUserBar","SideBarMenu","Overlay","LogoComponentStyled","TaskPro","LogoPath","LogoPathCentral","Heading","Container","Text","Button","onCloseSideBar","isOpen","setIsOpen","openModal","concat","icons","ModalBord","closeModal","BoardsContainer","ItemContainer","NavLink","Icon","Title","ButtonContainer","CurrentLine","Header","Input","Field","IconsHeaderIcons","IconsContainer","HeaderBackground","BackgroundContainer","BoardCreateBtn","ModalForm","Form","SvgCloseBtn","Img","SubmitSvgWrapper","Error","ErrorMessage","BoardFormSchema","shape","required","closeModalWindow","idBoard","useParams","_boards$find","getBoardSelector","find","board","_id","icnboard","background","Formik","actions","toast","editBoard","unwrap","then","catch","resetForm","htmlFor","component","className","Image0","Image7","Image2","Image1","Image8","Image3","Image4","Image9","Image5","Image10","Image6","Image11","Image12","Image13","Image14","Image15","ToastContainer","autoClose","transition","Slide","closeOnClick","pauseOnHover","draggable","limit","Modal","ModalCustom","onRequestClose","contentLabel","EditBoardForm","to","icon","deleteBoard","EditModalBord","boards","selectBoard","reverseBoards","unshift","BoardItem","ContainerHelp","ImgHelp","TextHelp","Span","IconHelp","QuestionHelp","ContainerText","isVisible","BtnNeedHelp","OverlayModal","ReactModal","ModalContainerHelp","FormHelp","ModalTitleHelp","InputHelp","CommentHelp","BtnSendHelp","NeedHelpSchema","matches","excludeEmptyString","comment","getUserEmail","_ref2","fetchHelpApi","_ref3","FormNeedHelp","isHoverText","setIsHoverText","image","onMouseEnter","onMouseLeave","log","ModalNeedHelp","StyledImg","StyledDiv","navigate","useNavigate","logout","isSidebarOpen","LogoComponent","CreateBord","BoardsList","NeedHelp","LogOut","setIsSidebarOpen","Sidebar","Outlet"],"sourceRoot":""}